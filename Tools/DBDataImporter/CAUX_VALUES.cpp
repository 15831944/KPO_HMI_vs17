//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.5.8 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 


#include "CAUX_VALUES.h"


//##DBClassCodeUtility ! DO NOT EDIT !
CAUX_VALUES::CAUX_VALUES(cCBS_Connection* Connection)
:CSMC_DBData("AUX_VALUES",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CAUX_VALUES::~CAUX_VALUES()
{
  //please implement virtual method, to destruct your members
  doOnDestruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CAUX_VALUES::getVARIABLE_ID(long Row)
{
 return getString("VARIABLE_ID", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CAUX_VALUES::setVARIABLE_ID(const std::string& value)
{
  setString("VARIABLE_ID", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CAUX_VALUES::getVALUE_SEQ(long Row)
{
  return getDouble("VALUE_SEQ", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CAUX_VALUES::setVALUE_SEQ(double value)
{
  setDouble("VALUE_SEQ", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CAUX_VALUES::getDESCRIPTION(long Row)
{
 return getString("DESCRIPTION", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CAUX_VALUES::setDESCRIPTION(const std::string& value)
{
  setString("DESCRIPTION", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CAUX_VALUES::getINTEGER_VALUE(long Row)
{
  return getDouble("INTEGER_VALUE", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CAUX_VALUES::setINTEGER_VALUE(double value)
{
  setDouble("INTEGER_VALUE", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CAUX_VALUES::getCHAR_VALUE(long Row)
{
 return getString("CHAR_VALUE", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CAUX_VALUES::setCHAR_VALUE(const std::string& value)
{
  setString("CHAR_VALUE", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CAUX_VALUES::getDouble_VALUE(long Row)
{
  return getDouble("double_VALUE", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CAUX_VALUES::setDouble_VALUE(double value)
{
  setDouble("double_VALUE", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CAUX_VALUES::getINFO(long Row)
{
 return getString("INFO", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CAUX_VALUES::setINFO(const std::string& value)
{
  setString("INFO", value);
}

//## ------------------------------------END-GENERATED-CODE---------------------- 

//## ------------------------------------YOUR-CODE------------------------------- 

std::string CAUX_VALUES::getElementName(long ElementCode)
{
  std::string ElementName = CSMC_DBData::unspecString;

  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause("VARIABLE_ID","ELEMENTS_LIST");
  addWhereClause("INTEGER_VALUE",ElementCode);
  m_Statement += getWhereStatement() + ";";

  if ( CSMC_DBData::select() )
  {
    ElementName = getCHAR_VALUE(1);
  }

  return ElementName;
}

std::string CAUX_VALUES::getComponentName(long ElementCode)
{
  std::string ElementName = CSMC_DBData::unspecString;

  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause("VARIABLE_ID","COMPONENTS_LIST");
  addWhereClause("INTEGER_VALUE",ElementCode);
  m_Statement += getWhereStatement() + ";";

  if ( CSMC_DBData::select() )
  {
    ElementName = getCHAR_VALUE(1);
  }

  return ElementName;
}


