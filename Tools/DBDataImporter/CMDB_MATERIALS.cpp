//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.5.8 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 


#include "CMDB_MATERIALS.h"


//##DBClassCodeUtility ! DO NOT EDIT !
CMDB_MATERIALS::CMDB_MATERIALS(cCBS_Connection* Connection)
:CSMC_DBData("MDB_MATERIALS",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CMDB_MATERIALS::~CMDB_MATERIALS()
{
  //please implement virtual method, to destruct your members
  doOnDestruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CMDB_MATERIALS::getMATERIAL_ID(long Row)
{
 return getString("MATERIAL_ID", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setMATERIAL_ID(const std::string& value)
{
  setString("MATERIAL_ID", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CMDB_MATERIALS::getMATERIAL_NAME(long Row)
{
 return getString("MATERIAL_NAME", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setMATERIAL_NAME(const std::string& value)
{
  setString("MATERIAL_NAME", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
long CMDB_MATERIALS::getMATERIAL_CLASS(long Row)
{
  return getLong("MATERIAL_CLASS", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setMATERIAL_CLASS(long value)
{
  setLong("MATERIAL_CLASS", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CMDB_MATERIALS::getDESCRIPTION(long Row)
{
 return getString("DESCRIPTION", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setDESCRIPTION(const std::string& value)
{
  setString("DESCRIPTION", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CMDB_MATERIALS::getWIRE_SPECIFIC_WGT(long Row)
{
  return getDouble("WIRE_SPECIFIC_WGT", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setWIRE_SPECIFIC_WGT(double value)
{
  setDouble("WIRE_SPECIFIC_WGT", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CMDB_MATERIALS::getSPECIFIC_WGT(long Row)
{
  return getDouble("SPECIFIC_WGT", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setSPECIFIC_WGT(double value)
{
  setDouble("SPECIFIC_WGT", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CMDB_MATERIALS::getAVAILABILITY(long Row)
{
 return getString("AVAILABILITY", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setAVAILABILITY(const std::string& value)
{
  setString("AVAILABILITY", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CMDB_MATERIALS::getPRIORITY(long Row)
{
  return getDouble("PRIORITY", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setPRIORITY(double value)
{
  setDouble("PRIORITY", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CMDB_MATERIALS::getHUMIDITY(long Row)
{
  return getDouble("HUMIDITY", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setHUMIDITY(double value)
{
  setDouble("HUMIDITY", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CMDB_MATERIALS::getYIELD(long Row)
{
  return getDouble("YIELD", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setYIELD(double value)
{
  setDouble("YIELD", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CMDB_MATERIALS::getCHILL_FACTOR(long Row)
{
  return getDouble("CHILL_FACTOR", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setCHILL_FACTOR(double value)
{
  setDouble("CHILL_FACTOR", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CMDB_MATERIALS::getMELTING_ENERGY(long Row)
{
  return getDouble("MELTING_ENERGY", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setMELTING_ENERGY(double value)
{
  setDouble("MELTING_ENERGY", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CMDB_MATERIALS::getCAO_RATIO(long Row)
{
  return getDouble("CAO_RATIO", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setCAO_RATIO(double value)
{
  setDouble("CAO_RATIO", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CMDB_MATERIALS::getEAF_YIELD(long Row)
{
  return getDouble("EAF_YIELD", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setEAF_YIELD(double value)
{
  setDouble("EAF_YIELD", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CMDB_MATERIALS::getMETALLIC_FLG(long Row)
{
 return getString("METALLIC_FLG", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setMETALLIC_FLG(const std::string& value)
{
  setString("METALLIC_FLG", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CMDB_MATERIALS::getGANGUE_PCT(long Row)
{
  return getDouble("GANGUE_PCT", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setGANGUE_PCT(double value)
{
  setDouble("GANGUE_PCT", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CMDB_MATERIALS::getDRI_MAX_RATE(long Row)
{
  return getDouble("DRI_MAX_RATE", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setDRI_MAX_RATE(double value)
{
  setDouble("DRI_MAX_RATE", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CMDB_MATERIALS::getDRI_LIME_RATIO(long Row)
{
  return getDouble("DRI_LIME_RATIO", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setDRI_LIME_RATIO(double value)
{
  setDouble("DRI_LIME_RATIO", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CMDB_MATERIALS::getDRI_O_RATIO(long Row)
{
  return getDouble("DRI_O_RATIO", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setDRI_O_RATIO(double value)
{
  setDouble("DRI_O_RATIO", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CMDB_MATERIALS::getDRI_C_RATIO(long Row)
{
  return getDouble("DRI_C_RATIO", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setDRI_C_RATIO(double value)
{
  setDouble("DRI_C_RATIO", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CMDB_MATERIALS::getDRI_DUST_PCT(long Row)
{
  return getDouble("DRI_DUST_PCT", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setDRI_DUST_PCT(double value)
{
  setDouble("DRI_DUST_PCT", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CMDB_MATERIALS::getDRI_METAL_PCT(long Row)
{
  return getDouble("DRI_METAL_PCT", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setDRI_METAL_PCT(double value)
{
  setDouble("DRI_METAL_PCT", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CMDB_MATERIALS::getDRI_TOT_FE_PCT(long Row)
{
  return getDouble("DRI_TOT_FE_PCT", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setDRI_TOT_FE_PCT(double value)
{
  setDouble("DRI_TOT_FE_PCT", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CMDB_MATERIALS::getSLAGBUILDER(long Row)
{
  return getDouble("SLAGBUILDER", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setSLAGBUILDER(double value)
{
  setDouble("SLAGBUILDER", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CMDB_MATERIALS::getSLAGBUILDER2(long Row)
{
  return getDouble("SLAGBUILDER2", Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CMDB_MATERIALS::setSLAGBUILDER2(double value)
{
  setDouble("SLAGBUILDER2", value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
bool CMDB_MATERIALS::select(const std::string& MATERIAL_ID)
{
  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause("MATERIAL_ID",MATERIAL_ID);
  m_Statement += getWhereStatement() + ";";

  return CSMC_DBData::select();
}

//## ------------------------------------END-GENERATED-CODE---------------------- 

//## ------------------------------------YOUR-CODE------------------------------- 


