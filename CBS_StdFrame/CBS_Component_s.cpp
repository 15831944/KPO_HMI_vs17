// This file is generated by omniidl (C++ backend)- omniORB_4_2. Do not edit.

#include "CBS_Component_s.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_2;



iCBS_Component_ptr iCBS_Component_Helper::_nil() {
  return ::iCBS_Component::_nil();
}

::CORBA::Boolean iCBS_Component_Helper::is_nil(::iCBS_Component_ptr p) {
  return ::CORBA::is_nil(p);

}

void iCBS_Component_Helper::release(::iCBS_Component_ptr p) {
  ::CORBA::release(p);
}

void iCBS_Component_Helper::marshalObjRef(::iCBS_Component_ptr obj, cdrStream& s) {
  ::iCBS_Component::_marshalObjRef(obj, s);
}

iCBS_Component_ptr iCBS_Component_Helper::unmarshalObjRef(cdrStream& s) {
  return ::iCBS_Component::_unmarshalObjRef(s);
}

void iCBS_Component_Helper::duplicate(::iCBS_Component_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

iCBS_Component_ptr
iCBS_Component::_duplicate(::iCBS_Component_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

iCBS_Component_ptr
iCBS_Component::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


iCBS_Component_ptr
iCBS_Component::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

iCBS_Component_ptr
iCBS_Component::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_iCBS_Component _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_iCBS_Component* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_iCBS_Component;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* iCBS_Component::_PD_repoId = "IDL:iCBS_Component:1.0";


_objref_iCBS_Component::~_objref_iCBS_Component() {
  
}


_objref_iCBS_Component::_objref_iCBS_Component(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::iCBS_Component::_PD_repoId, ior, id, 1),
   _objref_iCBS_Task(ior, id)
   
{
  _PR_setobj(this);
}

void*
_objref_iCBS_Component::_ptrToObjRef(const char* id)
{
  if (id == ::iCBS_Component::_PD_repoId)
    return (::iCBS_Component_ptr) this;
  if (id == ::iCBS_Task::_PD_repoId)
    return (::iCBS_Task_ptr) this;


  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::iCBS_Component::_PD_repoId))
    return (::iCBS_Component_ptr) this;
  if (omni::strMatch(id, ::iCBS_Task::_PD_repoId))
    return (::iCBS_Task_ptr) this;


  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}


//
// Code for iCBS_Component::_get_runMode

// Proxy call descriptor class. Mangled signature:
//  _cCBS__RunMode
class _0RL_cd_60027e787e1bd246_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_60027e787e1bd246_00000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  CBS_RunMode result;
};

void _0RL_cd_60027e787e1bd246_00000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_60027e787e1bd246_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  (CBS_RunMode&)result <<= _n;

}

const char* const _0RL_cd_60027e787e1bd246_00000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_60027e787e1bd246_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_60027e787e1bd246_00000000* tcd = (_0RL_cd_60027e787e1bd246_00000000*)cd;
  _impl_iCBS_Component* impl = (_impl_iCBS_Component*) svnt->_ptrToInterface(iCBS_Component::_PD_repoId);
  tcd->result = impl->runMode();


}

CBS_RunMode _objref_iCBS_Component::runMode()
{
  _0RL_cd_60027e787e1bd246_00000000 _call_desc(_0RL_lcfn_60027e787e1bd246_10000000, "_get_runMode", 13);


  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for iCBS_Component::setOffline

// Proxy call descriptor class. Mangled signature:
//  void_i_cMCBS_mCBS__LocalTime
class _0RL_cd_60027e787e1bd246_20000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_60027e787e1bd246_20000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  MCBS::CBS_LocalTime arg_0_;
  const MCBS::CBS_LocalTime* arg_0;
};

void _0RL_cd_60027e787e1bd246_20000000::marshalArguments(cdrStream& _n)
{
  (const MCBS::CBS_LocalTime&) *arg_0 >>= _n;

}

void _0RL_cd_60027e787e1bd246_20000000::unmarshalArguments(cdrStream& _n)
{
  (MCBS::CBS_LocalTime&)arg_0_ <<= _n;
  arg_0 = &arg_0_;

}

const char* const _0RL_cd_60027e787e1bd246_20000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_60027e787e1bd246_30000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_60027e787e1bd246_20000000* tcd = (_0RL_cd_60027e787e1bd246_20000000*)cd;
  _impl_iCBS_Component* impl = (_impl_iCBS_Component*) svnt->_ptrToInterface(iCBS_Component::_PD_repoId);
  impl->setOffline(*tcd->arg_0);


}

void _objref_iCBS_Component::setOffline(const ::MCBS::CBS_LocalTime& startTime)
{
  _0RL_cd_60027e787e1bd246_20000000 _call_desc(_0RL_lcfn_60027e787e1bd246_30000000, "setOffline", 11);
  _call_desc.arg_0 = &(::MCBS::CBS_LocalTime&) startTime;

  _invoke(_call_desc);



}


//
// Code for iCBS_Component::registerSelf

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_ciCBS__Registry
class _0RL_cd_60027e787e1bd246_40000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_60027e787e1bd246_40000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  iCBS_Registry_var arg_0_;
  iCBS_Registry_ptr arg_0;
  ::CORBA::Boolean result;
};

void _0RL_cd_60027e787e1bd246_40000000::marshalArguments(cdrStream& _n)
{
  iCBS_Registry_Helper::marshalObjRef(arg_0,_n);

}

void _0RL_cd_60027e787e1bd246_40000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = iCBS_Registry_Helper::unmarshalObjRef(_n);
  arg_0 = arg_0_.in();

}

void _0RL_cd_60027e787e1bd246_40000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_60027e787e1bd246_40000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_60027e787e1bd246_40000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_60027e787e1bd246_50000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_60027e787e1bd246_40000000* tcd = (_0RL_cd_60027e787e1bd246_40000000*)cd;
  _impl_iCBS_Component* impl = (_impl_iCBS_Component*) svnt->_ptrToInterface(iCBS_Component::_PD_repoId);
  tcd->result = impl->registerSelf(tcd->arg_0);


}

::CORBA::Boolean _objref_iCBS_Component::registerSelf(::iCBS_Registry_ptr registry)
{
  _0RL_cd_60027e787e1bd246_40000000 _call_desc(_0RL_lcfn_60027e787e1bd246_50000000, "registerSelf", 13);
  _call_desc.arg_0 = registry;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for iCBS_Component::updateSelf

// Local call call-back function.
static void
_0RL_lcfn_60027e787e1bd246_60000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_60027e787e1bd246_40000000* tcd = (_0RL_cd_60027e787e1bd246_40000000*)cd;
  _impl_iCBS_Component* impl = (_impl_iCBS_Component*) svnt->_ptrToInterface(iCBS_Component::_PD_repoId);
  tcd->result = impl->updateSelf(tcd->arg_0);


}

::CORBA::Boolean _objref_iCBS_Component::updateSelf(::iCBS_Registry_ptr registry)
{
  _0RL_cd_60027e787e1bd246_40000000 _call_desc(_0RL_lcfn_60027e787e1bd246_60000000, "updateSelf", 11);
  _call_desc.arg_0 = registry;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for iCBS_Component::compState

// Proxy call descriptor class. Mangled signature:
//  _ciCBS__Task_mCBS__TaskState_o_cstring
class _0RL_cd_60027e787e1bd246_70000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_60027e787e1bd246_70000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0;
  iCBS_Task::CBS_TaskState result;
};

void _0RL_cd_60027e787e1bd246_70000000::marshalReturnedValues(cdrStream& _n)
{
  (const iCBS_Task::CBS_TaskState&) result >>= _n;
  _n.marshalString(arg_0,0);

}

void _0RL_cd_60027e787e1bd246_70000000::unmarshalReturnedValues(cdrStream& _n)
{
  (iCBS_Task::CBS_TaskState&)result <<= _n;
  arg_0 = _n.unmarshalString(0);

}

const char* const _0RL_cd_60027e787e1bd246_70000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_60027e787e1bd246_80000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_60027e787e1bd246_70000000* tcd = (_0RL_cd_60027e787e1bd246_70000000*)cd;
  _impl_iCBS_Component* impl = (_impl_iCBS_Component*) svnt->_ptrToInterface(iCBS_Component::_PD_repoId);
  tcd->result = impl->compState(tcd->arg_0.out());


}

iCBS_Task::CBS_TaskState _objref_iCBS_Component::compState(::CORBA::String_out hostName)
{
  _0RL_cd_60027e787e1bd246_70000000 _call_desc(_0RL_lcfn_60027e787e1bd246_80000000, "compState", 10);


  _invoke(_call_desc);
  hostName = _call_desc.arg_0._retn();
  return _call_desc.result;


}

_pof_iCBS_Component::~_pof_iCBS_Component() {}


omniObjRef*
_pof_iCBS_Component::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::_objref_iCBS_Component(ior, id);
}


::CORBA::Boolean
_pof_iCBS_Component::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::iCBS_Component::_PD_repoId))
    return 1;
  if (omni::ptrStrMatch(id, iCBS_Task::_PD_repoId))
    return 1;


  return 0;
}

const _pof_iCBS_Component _the_pof_iCBS__Component;

_impl_iCBS_Component::~_impl_iCBS_Component() {}


::CORBA::Boolean
_impl_iCBS_Component::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if (omni::strMatch(op, "_get_runMode")) {

    _0RL_cd_60027e787e1bd246_00000000 _call_desc(_0RL_lcfn_60027e787e1bd246_10000000, "_get_runMode", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "setOffline")) {

    _0RL_cd_60027e787e1bd246_20000000 _call_desc(_0RL_lcfn_60027e787e1bd246_30000000, "setOffline", 11, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "registerSelf")) {

    _0RL_cd_60027e787e1bd246_40000000 _call_desc(_0RL_lcfn_60027e787e1bd246_50000000, "registerSelf", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "updateSelf")) {

    _0RL_cd_60027e787e1bd246_40000000 _call_desc(_0RL_lcfn_60027e787e1bd246_60000000, "updateSelf", 11, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "compState")) {

    _0RL_cd_60027e787e1bd246_70000000 _call_desc(_0RL_lcfn_60027e787e1bd246_80000000, "compState", 10, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  
#ifndef _MSC_VER
  if (_impl_iCBS_Task::_dispatch(_handle)) {
    return 1;
  }
#else
  // Work-around for incorrect MSVC code generation.
  if (((_impl_iCBS_Task*)this)->
      _impl_iCBS_Task::_dispatch(_handle)) {
    return 1;
  }
#endif


  return 0;
}

void*
_impl_iCBS_Component::_ptrToInterface(const char* id)
{
  if (id == ::iCBS_Component::_PD_repoId)
    return (::_impl_iCBS_Component*) this;
  if (id == ::iCBS_Task::_PD_repoId)
    return (::_impl_iCBS_Task*) this;


  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::iCBS_Component::_PD_repoId))
    return (::_impl_iCBS_Component*) this;
  if (omni::strMatch(id, ::iCBS_Task::_PD_repoId))
    return (::_impl_iCBS_Task*) this;


  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
_impl_iCBS_Component::_mostDerivedRepoId()
{
  return ::iCBS_Component::_PD_repoId;
}

POA_iCBS_Component::~POA_iCBS_Component() {}

