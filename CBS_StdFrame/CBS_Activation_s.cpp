// This file is generated by omniidl (C++ backend)- omniORB_4_2. Do not edit.

#include "CBS_Activation_s.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_2;



void
CBS_ActivationParam::operator>>= (cdrStream &_n) const
{
  _n.marshalString(executable,0);
  (const CBS_ExecParameters&) parameters >>= _n;
  _n.marshalString(hostName,0);
  (const CBS_ExecEnv&) environment >>= _n;

}

void
CBS_ActivationParam::operator<<= (cdrStream &_n)
{
  executable = _n.unmarshalString(0);
  (CBS_ExecParameters&)parameters <<= _n;
  hostName = _n.unmarshalString(0);
  (CBS_ExecEnv&)environment <<= _n;

}

void
CBS_MonitoringParam::operator>>= (cdrStream &_n) const
{
  numRestartAttempts >>= _n;
  restartInterval >>= _n;
  startLevel >>= _n;
  restartCycle >>= _n;

}

void
CBS_MonitoringParam::operator<<= (cdrStream &_n)
{
  (::CORBA::ULong&)numRestartAttempts <<= _n;
  (::CORBA::ULong&)restartInterval <<= _n;
  (::CORBA::ULong&)startLevel <<= _n;
  (::CORBA::ULong&)restartCycle <<= _n;

}

iCBS_ActivableServer_ptr iCBS_ActivableServer_Helper::_nil() {
  return ::iCBS_ActivableServer::_nil();
}

::CORBA::Boolean iCBS_ActivableServer_Helper::is_nil(::iCBS_ActivableServer_ptr p) {
  return ::CORBA::is_nil(p);

}

void iCBS_ActivableServer_Helper::release(::iCBS_ActivableServer_ptr p) {
  ::CORBA::release(p);
}

void iCBS_ActivableServer_Helper::marshalObjRef(::iCBS_ActivableServer_ptr obj, cdrStream& s) {
  ::iCBS_ActivableServer::_marshalObjRef(obj, s);
}

iCBS_ActivableServer_ptr iCBS_ActivableServer_Helper::unmarshalObjRef(cdrStream& s) {
  return ::iCBS_ActivableServer::_unmarshalObjRef(s);
}

void iCBS_ActivableServer_Helper::duplicate(::iCBS_ActivableServer_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

iCBS_ActivableServer_ptr
iCBS_ActivableServer::_duplicate(::iCBS_ActivableServer_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

iCBS_ActivableServer_ptr
iCBS_ActivableServer::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


iCBS_ActivableServer_ptr
iCBS_ActivableServer::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

iCBS_ActivableServer_ptr
iCBS_ActivableServer::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_iCBS_ActivableServer _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_iCBS_ActivableServer* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_iCBS_ActivableServer;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* iCBS_ActivableServer::_PD_repoId = "IDL:iCBS_ActivableServer:1.0";


_objref_iCBS_ActivableServer::~_objref_iCBS_ActivableServer() {
  
}


_objref_iCBS_ActivableServer::_objref_iCBS_ActivableServer(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::iCBS_ActivableServer::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
_objref_iCBS_ActivableServer::_ptrToObjRef(const char* id)
{
  if (id == ::iCBS_ActivableServer::_PD_repoId)
    return (::iCBS_ActivableServer_ptr) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::iCBS_ActivableServer::_PD_repoId))
    return (::iCBS_ActivableServer_ptr) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}


//
// Code for iCBS_ActivableServer::_get_monitoringParam

// Proxy call descriptor class. Mangled signature:
//  _cCBS__MonitoringParam
class _0RL_cd_7872dae3fcbb8d90_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_7872dae3fcbb8d90_00000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  CBS_MonitoringParam result;
};

void _0RL_cd_7872dae3fcbb8d90_00000000::marshalReturnedValues(cdrStream& _n)
{
  (const CBS_MonitoringParam&) result >>= _n;

}

void _0RL_cd_7872dae3fcbb8d90_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  (CBS_MonitoringParam&)result <<= _n;

}

const char* const _0RL_cd_7872dae3fcbb8d90_00000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_7872dae3fcbb8d90_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_7872dae3fcbb8d90_00000000* tcd = (_0RL_cd_7872dae3fcbb8d90_00000000*)cd;
  _impl_iCBS_ActivableServer* impl = (_impl_iCBS_ActivableServer*) svnt->_ptrToInterface(iCBS_ActivableServer::_PD_repoId);
  tcd->result = impl->monitoringParam();


}

CBS_MonitoringParam _objref_iCBS_ActivableServer::monitoringParam()
{
  _0RL_cd_7872dae3fcbb8d90_00000000 _call_desc(_0RL_lcfn_7872dae3fcbb8d90_10000000, "_get_monitoringParam", 21);


  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for iCBS_ActivableServer::_set_monitoringParam

// Proxy call descriptor class. Mangled signature:
//  void_i_cCBS__MonitoringParam
class _0RL_cd_7872dae3fcbb8d90_20000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_7872dae3fcbb8d90_20000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  CBS_MonitoringParam arg_0_;
  const CBS_MonitoringParam* arg_0;
};

void _0RL_cd_7872dae3fcbb8d90_20000000::marshalArguments(cdrStream& _n)
{
  (const CBS_MonitoringParam&) *arg_0 >>= _n;

}

void _0RL_cd_7872dae3fcbb8d90_20000000::unmarshalArguments(cdrStream& _n)
{
  (CBS_MonitoringParam&)arg_0_ <<= _n;
  arg_0 = &arg_0_;

}

const char* const _0RL_cd_7872dae3fcbb8d90_20000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_7872dae3fcbb8d90_30000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_7872dae3fcbb8d90_20000000* tcd = (_0RL_cd_7872dae3fcbb8d90_20000000*)cd;
  _impl_iCBS_ActivableServer* impl = (_impl_iCBS_ActivableServer*) svnt->_ptrToInterface(iCBS_ActivableServer::_PD_repoId);
  impl->monitoringParam(*tcd->arg_0);


}

void _objref_iCBS_ActivableServer::monitoringParam(const ::CBS_MonitoringParam& _v)
{
  _0RL_cd_7872dae3fcbb8d90_20000000 _call_desc(_0RL_lcfn_7872dae3fcbb8d90_30000000, "_set_monitoringParam", 21);
  _call_desc.arg_0 = &(::CBS_MonitoringParam&) _v;

  _invoke(_call_desc);



}


//
// Code for iCBS_ActivableServer::_get_activationParam

// Proxy call descriptor class. Mangled signature:
//  _cCBS__ActivationParam
class _0RL_cd_7872dae3fcbb8d90_40000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_7872dae3fcbb8d90_40000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  CBS_ActivationParam_var result;
};

void _0RL_cd_7872dae3fcbb8d90_40000000::marshalReturnedValues(cdrStream& _n)
{
  (const CBS_ActivationParam&) result >>= _n;

}

void _0RL_cd_7872dae3fcbb8d90_40000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new CBS_ActivationParam;
  (CBS_ActivationParam&)result <<= _n;

}

const char* const _0RL_cd_7872dae3fcbb8d90_40000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_7872dae3fcbb8d90_50000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_7872dae3fcbb8d90_40000000* tcd = (_0RL_cd_7872dae3fcbb8d90_40000000*)cd;
  _impl_iCBS_ActivableServer* impl = (_impl_iCBS_ActivableServer*) svnt->_ptrToInterface(iCBS_ActivableServer::_PD_repoId);
  tcd->result = impl->activationParam();


}

CBS_ActivationParam* _objref_iCBS_ActivableServer::activationParam()
{
  _0RL_cd_7872dae3fcbb8d90_40000000 _call_desc(_0RL_lcfn_7872dae3fcbb8d90_50000000, "_get_activationParam", 21);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}


//
// Code for iCBS_ActivableServer::_set_activationParam

// Proxy call descriptor class. Mangled signature:
//  void_i_cCBS__ActivationParam
class _0RL_cd_7872dae3fcbb8d90_60000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_7872dae3fcbb8d90_60000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  CBS_ActivationParam_var arg_0_;
  const CBS_ActivationParam* arg_0;
};

void _0RL_cd_7872dae3fcbb8d90_60000000::marshalArguments(cdrStream& _n)
{
  (const CBS_ActivationParam&) *arg_0 >>= _n;

}

void _0RL_cd_7872dae3fcbb8d90_60000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new CBS_ActivationParam;
  (CBS_ActivationParam&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();

}

const char* const _0RL_cd_7872dae3fcbb8d90_60000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_7872dae3fcbb8d90_70000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_7872dae3fcbb8d90_60000000* tcd = (_0RL_cd_7872dae3fcbb8d90_60000000*)cd;
  _impl_iCBS_ActivableServer* impl = (_impl_iCBS_ActivableServer*) svnt->_ptrToInterface(iCBS_ActivableServer::_PD_repoId);
  impl->activationParam(*tcd->arg_0);


}

void _objref_iCBS_ActivableServer::activationParam(const ::CBS_ActivationParam& _v)
{
  _0RL_cd_7872dae3fcbb8d90_60000000 _call_desc(_0RL_lcfn_7872dae3fcbb8d90_70000000, "_set_activationParam", 21);
  _call_desc.arg_0 = &(::CBS_ActivationParam&) _v;

  _invoke(_call_desc);



}


//
// Code for iCBS_ActivableServer::_get_serverName

// Proxy call descriptor class. Mangled signature:
//  _cstring
class _0RL_cd_7872dae3fcbb8d90_80000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_7872dae3fcbb8d90_80000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::String_var result;
};

void _0RL_cd_7872dae3fcbb8d90_80000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalString(result,0);

}

void _0RL_cd_7872dae3fcbb8d90_80000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalString(0);

}

const char* const _0RL_cd_7872dae3fcbb8d90_80000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_7872dae3fcbb8d90_90000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_7872dae3fcbb8d90_80000000* tcd = (_0RL_cd_7872dae3fcbb8d90_80000000*)cd;
  _impl_iCBS_ActivableServer* impl = (_impl_iCBS_ActivableServer*) svnt->_ptrToInterface(iCBS_ActivableServer::_PD_repoId);
  tcd->result = impl->serverName();


}

char* _objref_iCBS_ActivableServer::serverName()
{
  _0RL_cd_7872dae3fcbb8d90_80000000 _call_desc(_0RL_lcfn_7872dae3fcbb8d90_90000000, "_get_serverName", 16);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}


//
// Code for iCBS_ActivableServer::actRegister

// Proxy call descriptor class. Mangled signature:
//  _cboolean
class _0RL_cd_7872dae3fcbb8d90_a0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_7872dae3fcbb8d90_a0000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Boolean result;
};

void _0RL_cd_7872dae3fcbb8d90_a0000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_7872dae3fcbb8d90_a0000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_7872dae3fcbb8d90_a0000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_7872dae3fcbb8d90_b0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_7872dae3fcbb8d90_a0000000* tcd = (_0RL_cd_7872dae3fcbb8d90_a0000000*)cd;
  _impl_iCBS_ActivableServer* impl = (_impl_iCBS_ActivableServer*) svnt->_ptrToInterface(iCBS_ActivableServer::_PD_repoId);
  tcd->result = impl->actRegister();


}

::CORBA::Boolean _objref_iCBS_ActivableServer::actRegister()
{
  _0RL_cd_7872dae3fcbb8d90_a0000000 _call_desc(_0RL_lcfn_7872dae3fcbb8d90_b0000000, "actRegister", 12);


  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for iCBS_ActivableServer::isRegistered

// Proxy call descriptor class. Mangled signature:
//  _cboolean_o_cboolean
class _0RL_cd_7872dae3fcbb8d90_c0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_7872dae3fcbb8d90_c0000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Boolean arg_0;
  ::CORBA::Boolean result;
};

void _0RL_cd_7872dae3fcbb8d90_c0000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);
  _n.marshalBoolean(arg_0);

}

void _0RL_cd_7872dae3fcbb8d90_c0000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();
  arg_0 = _n.unmarshalBoolean();

}

const char* const _0RL_cd_7872dae3fcbb8d90_c0000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_7872dae3fcbb8d90_d0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_7872dae3fcbb8d90_c0000000* tcd = (_0RL_cd_7872dae3fcbb8d90_c0000000*)cd;
  _impl_iCBS_ActivableServer* impl = (_impl_iCBS_ActivableServer*) svnt->_ptrToInterface(iCBS_ActivableServer::_PD_repoId);
  tcd->result = impl->isRegistered(tcd->arg_0);


}

::CORBA::Boolean _objref_iCBS_ActivableServer::isRegistered(::CORBA::Boolean& isReg)
{
  _0RL_cd_7872dae3fcbb8d90_c0000000 _call_desc(_0RL_lcfn_7872dae3fcbb8d90_d0000000, "isRegistered", 13);


  _invoke(_call_desc);
  isReg = _call_desc.arg_0;
  return _call_desc.result;


}


//
// Code for iCBS_ActivableServer::actUnregister

// Local call call-back function.
static void
_0RL_lcfn_7872dae3fcbb8d90_e0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_7872dae3fcbb8d90_a0000000* tcd = (_0RL_cd_7872dae3fcbb8d90_a0000000*)cd;
  _impl_iCBS_ActivableServer* impl = (_impl_iCBS_ActivableServer*) svnt->_ptrToInterface(iCBS_ActivableServer::_PD_repoId);
  tcd->result = impl->actUnregister();


}

::CORBA::Boolean _objref_iCBS_ActivableServer::actUnregister()
{
  _0RL_cd_7872dae3fcbb8d90_a0000000 _call_desc(_0RL_lcfn_7872dae3fcbb8d90_e0000000, "actUnregister", 14);


  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for iCBS_ActivableServer::start

// Proxy call descriptor class. Mangled signature:
//  _clong
class _0RL_cd_7872dae3fcbb8d90_f0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_7872dae3fcbb8d90_f0000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  CBS_ProcessId result;
};

void _0RL_cd_7872dae3fcbb8d90_f0000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_7872dae3fcbb8d90_f0000000::unmarshalReturnedValues(cdrStream& _n)
{
  (CBS_ProcessId&)result <<= _n;

}

const char* const _0RL_cd_7872dae3fcbb8d90_f0000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_7872dae3fcbb8d90_01000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_7872dae3fcbb8d90_f0000000* tcd = (_0RL_cd_7872dae3fcbb8d90_f0000000*)cd;
  _impl_iCBS_ActivableServer* impl = (_impl_iCBS_ActivableServer*) svnt->_ptrToInterface(iCBS_ActivableServer::_PD_repoId);
  tcd->result = impl->start();


}

CBS_ProcessId _objref_iCBS_ActivableServer::start()
{
  _0RL_cd_7872dae3fcbb8d90_f0000000 _call_desc(_0RL_lcfn_7872dae3fcbb8d90_01000000, "start", 6);


  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for iCBS_ActivableServer::ping

// Proxy call descriptor class. Mangled signature:
//  _clong_o_cstring
class _0RL_cd_7872dae3fcbb8d90_11000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_7872dae3fcbb8d90_11000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0;
  CBS_ProcessId result;
};

void _0RL_cd_7872dae3fcbb8d90_11000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;
  _n.marshalString(arg_0,0);

}

void _0RL_cd_7872dae3fcbb8d90_11000000::unmarshalReturnedValues(cdrStream& _n)
{
  (CBS_ProcessId&)result <<= _n;
  arg_0 = _n.unmarshalString(0);

}

const char* const _0RL_cd_7872dae3fcbb8d90_11000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_7872dae3fcbb8d90_21000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_7872dae3fcbb8d90_11000000* tcd = (_0RL_cd_7872dae3fcbb8d90_11000000*)cd;
  _impl_iCBS_ActivableServer* impl = (_impl_iCBS_ActivableServer*) svnt->_ptrToInterface(iCBS_ActivableServer::_PD_repoId);
  tcd->result = impl->ping(tcd->arg_0.out());


}

CBS_ProcessId _objref_iCBS_ActivableServer::ping(::CORBA::String_out hostname)
{
  _0RL_cd_7872dae3fcbb8d90_11000000 _call_desc(_0RL_lcfn_7872dae3fcbb8d90_21000000, "ping", 5);


  _invoke(_call_desc);
  hostname = _call_desc.arg_0._retn();
  return _call_desc.result;


}


//
// Code for iCBS_ActivableServer::stop

// Proxy call descriptor class. Mangled signature:
//  void
class _0RL_cd_7872dae3fcbb8d90_31000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_7872dae3fcbb8d90_31000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
    
  
  static const char* const _user_exns[];

  
};

const char* const _0RL_cd_7872dae3fcbb8d90_31000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_7872dae3fcbb8d90_41000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_iCBS_ActivableServer* impl = (_impl_iCBS_ActivableServer*) svnt->_ptrToInterface(iCBS_ActivableServer::_PD_repoId);
  impl->stop();


}

void _objref_iCBS_ActivableServer::stop()
{
  _0RL_cd_7872dae3fcbb8d90_31000000 _call_desc(_0RL_lcfn_7872dae3fcbb8d90_41000000, "stop", 5);


  _invoke(_call_desc);



}


//
// Code for iCBS_ActivableServer::compName

// Local call call-back function.
static void
_0RL_lcfn_7872dae3fcbb8d90_51000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_7872dae3fcbb8d90_80000000* tcd = (_0RL_cd_7872dae3fcbb8d90_80000000*)cd;
  _impl_iCBS_ActivableServer* impl = (_impl_iCBS_ActivableServer*) svnt->_ptrToInterface(iCBS_ActivableServer::_PD_repoId);
  tcd->result = impl->compName();


}

char* _objref_iCBS_ActivableServer::compName()
{
  _0RL_cd_7872dae3fcbb8d90_80000000 _call_desc(_0RL_lcfn_7872dae3fcbb8d90_51000000, "compName", 9);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}

_pof_iCBS_ActivableServer::~_pof_iCBS_ActivableServer() {}


omniObjRef*
_pof_iCBS_ActivableServer::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::_objref_iCBS_ActivableServer(ior, id);
}


::CORBA::Boolean
_pof_iCBS_ActivableServer::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::iCBS_ActivableServer::_PD_repoId))
    return 1;
  
  return 0;
}

const _pof_iCBS_ActivableServer _the_pof_iCBS__ActivableServer;

_impl_iCBS_ActivableServer::~_impl_iCBS_ActivableServer() {}


::CORBA::Boolean
_impl_iCBS_ActivableServer::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if (omni::strMatch(op, "_get_monitoringParam")) {

    _0RL_cd_7872dae3fcbb8d90_00000000 _call_desc(_0RL_lcfn_7872dae3fcbb8d90_10000000, "_get_monitoringParam", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "_set_monitoringParam")) {

    _0RL_cd_7872dae3fcbb8d90_20000000 _call_desc(_0RL_lcfn_7872dae3fcbb8d90_30000000, "_set_monitoringParam", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "_get_activationParam")) {

    _0RL_cd_7872dae3fcbb8d90_40000000 _call_desc(_0RL_lcfn_7872dae3fcbb8d90_50000000, "_get_activationParam", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "_set_activationParam")) {

    _0RL_cd_7872dae3fcbb8d90_60000000 _call_desc(_0RL_lcfn_7872dae3fcbb8d90_70000000, "_set_activationParam", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "_get_serverName")) {

    _0RL_cd_7872dae3fcbb8d90_80000000 _call_desc(_0RL_lcfn_7872dae3fcbb8d90_90000000, "_get_serverName", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "actRegister")) {

    _0RL_cd_7872dae3fcbb8d90_a0000000 _call_desc(_0RL_lcfn_7872dae3fcbb8d90_b0000000, "actRegister", 12, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "isRegistered")) {

    _0RL_cd_7872dae3fcbb8d90_c0000000 _call_desc(_0RL_lcfn_7872dae3fcbb8d90_d0000000, "isRegistered", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "actUnregister")) {

    _0RL_cd_7872dae3fcbb8d90_a0000000 _call_desc(_0RL_lcfn_7872dae3fcbb8d90_e0000000, "actUnregister", 14, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "start")) {

    _0RL_cd_7872dae3fcbb8d90_f0000000 _call_desc(_0RL_lcfn_7872dae3fcbb8d90_01000000, "start", 6, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "ping")) {

    _0RL_cd_7872dae3fcbb8d90_11000000 _call_desc(_0RL_lcfn_7872dae3fcbb8d90_21000000, "ping", 5, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "stop")) {

    _0RL_cd_7872dae3fcbb8d90_31000000 _call_desc(_0RL_lcfn_7872dae3fcbb8d90_41000000, "stop", 5, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "compName")) {

    _0RL_cd_7872dae3fcbb8d90_80000000 _call_desc(_0RL_lcfn_7872dae3fcbb8d90_51000000, "compName", 9, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
_impl_iCBS_ActivableServer::_ptrToInterface(const char* id)
{
  if (id == ::iCBS_ActivableServer::_PD_repoId)
    return (::_impl_iCBS_ActivableServer*) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::iCBS_ActivableServer::_PD_repoId))
    return (::_impl_iCBS_ActivableServer*) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
_impl_iCBS_ActivableServer::_mostDerivedRepoId()
{
  return ::iCBS_ActivableServer::_PD_repoId;
}

POA_iCBS_ActivableServer::~POA_iCBS_ActivableServer() {}

