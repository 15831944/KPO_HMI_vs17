// This file is generated by omniidl (C++ backend)- omniORB_4_2. Do not edit.

#include "CBS_Tasks_s.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_2;



iCBS_TaskOutput_ptr iCBS_TaskOutput_Helper::_nil() {
  return ::iCBS_TaskOutput::_nil();
}

::CORBA::Boolean iCBS_TaskOutput_Helper::is_nil(::iCBS_TaskOutput_ptr p) {
  return ::CORBA::is_nil(p);

}

void iCBS_TaskOutput_Helper::release(::iCBS_TaskOutput_ptr p) {
  ::CORBA::release(p);
}

void iCBS_TaskOutput_Helper::marshalObjRef(::iCBS_TaskOutput_ptr obj, cdrStream& s) {
  ::iCBS_TaskOutput::_marshalObjRef(obj, s);
}

iCBS_TaskOutput_ptr iCBS_TaskOutput_Helper::unmarshalObjRef(cdrStream& s) {
  return ::iCBS_TaskOutput::_unmarshalObjRef(s);
}

void iCBS_TaskOutput_Helper::duplicate(::iCBS_TaskOutput_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

iCBS_TaskOutput_ptr
iCBS_TaskOutput::_duplicate(::iCBS_TaskOutput_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

iCBS_TaskOutput_ptr
iCBS_TaskOutput::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


iCBS_TaskOutput_ptr
iCBS_TaskOutput::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

iCBS_TaskOutput_ptr
iCBS_TaskOutput::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_iCBS_TaskOutput _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_iCBS_TaskOutput* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_iCBS_TaskOutput;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* iCBS_TaskOutput::_PD_repoId = "IDL:iCBS_TaskOutput:1.0";


_objref_iCBS_TaskOutput::~_objref_iCBS_TaskOutput() {
  
}


_objref_iCBS_TaskOutput::_objref_iCBS_TaskOutput(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::iCBS_TaskOutput::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
_objref_iCBS_TaskOutput::_ptrToObjRef(const char* id)
{
  if (id == ::iCBS_TaskOutput::_PD_repoId)
    return (::iCBS_TaskOutput_ptr) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::iCBS_TaskOutput::_PD_repoId))
    return (::iCBS_TaskOutput_ptr) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}


//
// Code for iCBS_TaskOutput::setOutput

// Proxy call descriptor class. Mangled signature:
//  void_i_cstring
class _0RL_cd_b0bf56c1e31ef37a_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b0bf56c1e31ef37a_00000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0_;
  const char* arg_0;
};

void _0RL_cd_b0bf56c1e31ef37a_00000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);

}

void _0RL_cd_b0bf56c1e31ef37a_00000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();

}

const char* const _0RL_cd_b0bf56c1e31ef37a_00000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b0bf56c1e31ef37a_00000000* tcd = (_0RL_cd_b0bf56c1e31ef37a_00000000*)cd;
  _impl_iCBS_TaskOutput* impl = (_impl_iCBS_TaskOutput*) svnt->_ptrToInterface(iCBS_TaskOutput::_PD_repoId);
  impl->setOutput(tcd->arg_0);


}

void _objref_iCBS_TaskOutput::setOutput(const char* output)
{
  _0RL_cd_b0bf56c1e31ef37a_00000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_10000000, "setOutput", 10);
  _call_desc.arg_0 = output;

  _invoke(_call_desc);



}

_pof_iCBS_TaskOutput::~_pof_iCBS_TaskOutput() {}


omniObjRef*
_pof_iCBS_TaskOutput::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::_objref_iCBS_TaskOutput(ior, id);
}


::CORBA::Boolean
_pof_iCBS_TaskOutput::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::iCBS_TaskOutput::_PD_repoId))
    return 1;
  
  return 0;
}

const _pof_iCBS_TaskOutput _the_pof_iCBS__TaskOutput;

_impl_iCBS_TaskOutput::~_impl_iCBS_TaskOutput() {}


::CORBA::Boolean
_impl_iCBS_TaskOutput::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if (omni::strMatch(op, "setOutput")) {

    _0RL_cd_b0bf56c1e31ef37a_00000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_10000000, "setOutput", 10, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
_impl_iCBS_TaskOutput::_ptrToInterface(const char* id)
{
  if (id == ::iCBS_TaskOutput::_PD_repoId)
    return (::_impl_iCBS_TaskOutput*) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::iCBS_TaskOutput::_PD_repoId))
    return (::_impl_iCBS_TaskOutput*) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
_impl_iCBS_TaskOutput::_mostDerivedRepoId()
{
  return ::iCBS_TaskOutput::_PD_repoId;
}

void
iCBS_Task::CBS_TaskData::operator>>= (cdrStream &_n) const
{
  _n.marshalBoolean(autoRecovery);
  priority >>= _n;
  _n.marshalBoolean(critical);

}

void
iCBS_Task::CBS_TaskData::operator<<= (cdrStream &_n)
{
  autoRecovery = _n.unmarshalBoolean();
  (CBS_TaskPriority&)priority <<= _n;
  critical = _n.unmarshalBoolean();

}

void
iCBS_Task::CBS_TaskState::operator>>= (cdrStream &_n) const
{
  runState >>= _n;
  workState >>= _n;

}

void
iCBS_Task::CBS_TaskState::operator<<= (cdrStream &_n)
{
  (CBS_RunState&)runState <<= _n;
  (CBS_WorkState&)workState <<= _n;

}

void
iCBS_Task::CBS_TaskStateDetail::operator>>= (cdrStream &_n) const
{
  (const CBS_TaskState&) state >>= _n;
  _n.marshalString(taskName,0);
  _n.marshalString(detail,0);

}

void
iCBS_Task::CBS_TaskStateDetail::operator<<= (cdrStream &_n)
{
  (CBS_TaskState&)state <<= _n;
  taskName = _n.unmarshalString(0);
  detail = _n.unmarshalString(0);

}

void
iCBS_Task::CBS_SubTaskStateInfo::operator>>= (cdrStream &_n) const
{
  _n.marshalString(taskName,0);
  (const CBS_TaskState&) state >>= _n;
  (const CBS_TaskData&) data >>= _n;

}

void
iCBS_Task::CBS_SubTaskStateInfo::operator<<= (cdrStream &_n)
{
  taskName = _n.unmarshalString(0);
  (CBS_TaskState&)state <<= _n;
  (CBS_TaskData&)data <<= _n;

}

void
iCBS_Task::CBS_TaskStateInfo::operator>>= (cdrStream &_n) const
{
  _n.marshalString(taskName,0);
  (const CBS_TaskState&) state >>= _n;
  (const _CORBA_Unbounded_Sequence< CBS_SubTaskStateInfo > &) SubTaskStateInfoSeq >>= _n;

}

void
iCBS_Task::CBS_TaskStateInfo::operator<<= (cdrStream &_n)
{
  taskName = _n.unmarshalString(0);
  (CBS_TaskState&)state <<= _n;
  (_CORBA_Unbounded_Sequence< CBS_SubTaskStateInfo > &)SubTaskStateInfoSeq <<= _n;

}

iCBS_Task_ptr iCBS_Task_Helper::_nil() {
  return ::iCBS_Task::_nil();
}

::CORBA::Boolean iCBS_Task_Helper::is_nil(::iCBS_Task_ptr p) {
  return ::CORBA::is_nil(p);

}

void iCBS_Task_Helper::release(::iCBS_Task_ptr p) {
  ::CORBA::release(p);
}

void iCBS_Task_Helper::marshalObjRef(::iCBS_Task_ptr obj, cdrStream& s) {
  ::iCBS_Task::_marshalObjRef(obj, s);
}

iCBS_Task_ptr iCBS_Task_Helper::unmarshalObjRef(cdrStream& s) {
  return ::iCBS_Task::_unmarshalObjRef(s);
}

void iCBS_Task_Helper::duplicate(::iCBS_Task_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

iCBS_Task_ptr
iCBS_Task::_duplicate(::iCBS_Task_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

iCBS_Task_ptr
iCBS_Task::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


iCBS_Task_ptr
iCBS_Task::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

iCBS_Task_ptr
iCBS_Task::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_iCBS_Task _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_iCBS_Task* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_iCBS_Task;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* iCBS_Task::_PD_repoId = "IDL:iCBS_Task:1.0";


_objref_iCBS_Task::~_objref_iCBS_Task() {
  
}


_objref_iCBS_Task::_objref_iCBS_Task(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::iCBS_Task::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
_objref_iCBS_Task::_ptrToObjRef(const char* id)
{
  if (id == ::iCBS_Task::_PD_repoId)
    return (::iCBS_Task_ptr) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::iCBS_Task::_PD_repoId))
    return (::iCBS_Task_ptr) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}


//
// Code for iCBS_Task::_get_name

// Proxy call descriptor class. Mangled signature:
//  _cstring
class _0RL_cd_b0bf56c1e31ef37a_20000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b0bf56c1e31ef37a_20000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::String_var result;
};

void _0RL_cd_b0bf56c1e31ef37a_20000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalString(result,0);

}

void _0RL_cd_b0bf56c1e31ef37a_20000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalString(0);

}

const char* const _0RL_cd_b0bf56c1e31ef37a_20000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_30000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b0bf56c1e31ef37a_20000000* tcd = (_0RL_cd_b0bf56c1e31ef37a_20000000*)cd;
  _impl_iCBS_Task* impl = (_impl_iCBS_Task*) svnt->_ptrToInterface(iCBS_Task::_PD_repoId);
  tcd->result = impl->name();


}

char* _objref_iCBS_Task::name()
{
  _0RL_cd_b0bf56c1e31ef37a_20000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_30000000, "_get_name", 10);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}


//
// Code for iCBS_Task::_get_startTime

// Proxy call descriptor class. Mangled signature:
//  _cMCBS_mCBS__LocalTime
class _0RL_cd_b0bf56c1e31ef37a_40000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b0bf56c1e31ef37a_40000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  MCBS::CBS_LocalTime result;
};

void _0RL_cd_b0bf56c1e31ef37a_40000000::marshalReturnedValues(cdrStream& _n)
{
  (const MCBS::CBS_LocalTime&) result >>= _n;

}

void _0RL_cd_b0bf56c1e31ef37a_40000000::unmarshalReturnedValues(cdrStream& _n)
{
  (MCBS::CBS_LocalTime&)result <<= _n;

}

const char* const _0RL_cd_b0bf56c1e31ef37a_40000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_50000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b0bf56c1e31ef37a_40000000* tcd = (_0RL_cd_b0bf56c1e31ef37a_40000000*)cd;
  _impl_iCBS_Task* impl = (_impl_iCBS_Task*) svnt->_ptrToInterface(iCBS_Task::_PD_repoId);
  tcd->result = impl->startTime();


}

MCBS::CBS_LocalTime _objref_iCBS_Task::startTime()
{
  _0RL_cd_b0bf56c1e31ef37a_40000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_50000000, "_get_startTime", 15);


  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for iCBS_Task::_get_taskStateDetail

// Proxy call descriptor class. Mangled signature:
//  _ciCBS__Task_mCBS__TaskStateDetail
class _0RL_cd_b0bf56c1e31ef37a_60000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b0bf56c1e31ef37a_60000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  iCBS_Task::CBS_TaskStateDetail_var result;
};

void _0RL_cd_b0bf56c1e31ef37a_60000000::marshalReturnedValues(cdrStream& _n)
{
  (const iCBS_Task::CBS_TaskStateDetail&) result >>= _n;

}

void _0RL_cd_b0bf56c1e31ef37a_60000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new iCBS_Task::CBS_TaskStateDetail;
  (iCBS_Task::CBS_TaskStateDetail&)result <<= _n;

}

const char* const _0RL_cd_b0bf56c1e31ef37a_60000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_70000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b0bf56c1e31ef37a_60000000* tcd = (_0RL_cd_b0bf56c1e31ef37a_60000000*)cd;
  _impl_iCBS_Task* impl = (_impl_iCBS_Task*) svnt->_ptrToInterface(iCBS_Task::_PD_repoId);
  tcd->result = impl->taskStateDetail();


}

iCBS_Task::CBS_TaskStateDetail* _objref_iCBS_Task::taskStateDetail()
{
  _0RL_cd_b0bf56c1e31ef37a_60000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_70000000, "_get_taskStateDetail", 21);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}


//
// Code for iCBS_Task::_get_subtaskDetails

// Proxy call descriptor class. Mangled signature:
//  _ciCBS__Task_mCBS__TaskStateDetailSeq
class _0RL_cd_b0bf56c1e31ef37a_80000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b0bf56c1e31ef37a_80000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  iCBS_Task::CBS_TaskStateDetailSeq_var result;
};

void _0RL_cd_b0bf56c1e31ef37a_80000000::marshalReturnedValues(cdrStream& _n)
{
  (const iCBS_Task::CBS_TaskStateDetailSeq&) result >>= _n;

}

void _0RL_cd_b0bf56c1e31ef37a_80000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new iCBS_Task::CBS_TaskStateDetailSeq;
  (iCBS_Task::CBS_TaskStateDetailSeq&)result <<= _n;

}

const char* const _0RL_cd_b0bf56c1e31ef37a_80000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_90000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b0bf56c1e31ef37a_80000000* tcd = (_0RL_cd_b0bf56c1e31ef37a_80000000*)cd;
  _impl_iCBS_Task* impl = (_impl_iCBS_Task*) svnt->_ptrToInterface(iCBS_Task::_PD_repoId);
  tcd->result = impl->subtaskDetails();


}

iCBS_Task::CBS_TaskStateDetailSeq* _objref_iCBS_Task::subtaskDetails()
{
  _0RL_cd_b0bf56c1e31ef37a_80000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_90000000, "_get_subtaskDetails", 20);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}


//
// Code for iCBS_Task::_get_traceLevel

// Proxy call descriptor class. Mangled signature:
//  _cunsigned_plong
class _0RL_cd_b0bf56c1e31ef37a_a0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b0bf56c1e31ef37a_a0000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::ULong result;
};

void _0RL_cd_b0bf56c1e31ef37a_a0000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_b0bf56c1e31ef37a_a0000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::ULong&)result <<= _n;

}

const char* const _0RL_cd_b0bf56c1e31ef37a_a0000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_b0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b0bf56c1e31ef37a_a0000000* tcd = (_0RL_cd_b0bf56c1e31ef37a_a0000000*)cd;
  _impl_iCBS_Task* impl = (_impl_iCBS_Task*) svnt->_ptrToInterface(iCBS_Task::_PD_repoId);
  tcd->result = impl->traceLevel();


}

::CORBA::ULong _objref_iCBS_Task::traceLevel()
{
  _0RL_cd_b0bf56c1e31ef37a_a0000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_b0000000, "_get_traceLevel", 16);


  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for iCBS_Task::_set_traceLevel

// Proxy call descriptor class. Mangled signature:
//  void_i_cunsigned_plong
class _0RL_cd_b0bf56c1e31ef37a_c0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b0bf56c1e31ef37a_c0000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  ::CORBA::ULong arg_0;
};

void _0RL_cd_b0bf56c1e31ef37a_c0000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_b0bf56c1e31ef37a_c0000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::ULong&)arg_0 <<= _n;

}

const char* const _0RL_cd_b0bf56c1e31ef37a_c0000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_d0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b0bf56c1e31ef37a_c0000000* tcd = (_0RL_cd_b0bf56c1e31ef37a_c0000000*)cd;
  _impl_iCBS_Task* impl = (_impl_iCBS_Task*) svnt->_ptrToInterface(iCBS_Task::_PD_repoId);
  impl->traceLevel(tcd->arg_0);


}

void _objref_iCBS_Task::traceLevel(::CORBA::ULong _v)
{
  _0RL_cd_b0bf56c1e31ef37a_c0000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_d0000000, "_set_traceLevel", 16);
  _call_desc.arg_0 = _v;

  _invoke(_call_desc);



}


//
// Code for iCBS_Task::_get_subtasks

// Proxy call descriptor class. Mangled signature:
//  _cCBS__TaskSeq
class _0RL_cd_b0bf56c1e31ef37a_e0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b0bf56c1e31ef37a_e0000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  CBS_TaskSeq_var result;
};

void _0RL_cd_b0bf56c1e31ef37a_e0000000::marshalReturnedValues(cdrStream& _n)
{
  (const CBS_TaskSeq&) result >>= _n;

}

void _0RL_cd_b0bf56c1e31ef37a_e0000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new CBS_TaskSeq;
  (CBS_TaskSeq&)result <<= _n;

}

const char* const _0RL_cd_b0bf56c1e31ef37a_e0000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_f0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b0bf56c1e31ef37a_e0000000* tcd = (_0RL_cd_b0bf56c1e31ef37a_e0000000*)cd;
  _impl_iCBS_Task* impl = (_impl_iCBS_Task*) svnt->_ptrToInterface(iCBS_Task::_PD_repoId);
  tcd->result = impl->subtasks();


}

CBS_TaskSeq* _objref_iCBS_Task::subtasks()
{
  _0RL_cd_b0bf56c1e31ef37a_e0000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_f0000000, "_get_subtasks", 14);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}


//
// Code for iCBS_Task::_get_subtaskNames

// Proxy call descriptor class. Mangled signature:
//  _cCBS__StringSequence
class _0RL_cd_b0bf56c1e31ef37a_01000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b0bf56c1e31ef37a_01000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  CBS_StringSequence_var result;
};

void _0RL_cd_b0bf56c1e31ef37a_01000000::marshalReturnedValues(cdrStream& _n)
{
  (const CBS_StringSequence&) result >>= _n;

}

void _0RL_cd_b0bf56c1e31ef37a_01000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new CBS_StringSequence;
  (CBS_StringSequence&)result <<= _n;

}

const char* const _0RL_cd_b0bf56c1e31ef37a_01000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_11000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b0bf56c1e31ef37a_01000000* tcd = (_0RL_cd_b0bf56c1e31ef37a_01000000*)cd;
  _impl_iCBS_Task* impl = (_impl_iCBS_Task*) svnt->_ptrToInterface(iCBS_Task::_PD_repoId);
  tcd->result = impl->subtaskNames();


}

CBS_StringSequence* _objref_iCBS_Task::subtaskNames()
{
  _0RL_cd_b0bf56c1e31ef37a_01000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_11000000, "_get_subtaskNames", 18);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}


//
// Code for iCBS_Task::_get_activableServer

// Proxy call descriptor class. Mangled signature:
//  _ciCBS__ActivableServer
class _0RL_cd_b0bf56c1e31ef37a_21000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b0bf56c1e31ef37a_21000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  iCBS_ActivableServer_var result;
};

void _0RL_cd_b0bf56c1e31ef37a_21000000::marshalReturnedValues(cdrStream& _n)
{
  iCBS_ActivableServer::_marshalObjRef(result,_n);

}

void _0RL_cd_b0bf56c1e31ef37a_21000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = iCBS_ActivableServer::_unmarshalObjRef(_n);

}

const char* const _0RL_cd_b0bf56c1e31ef37a_21000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_31000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b0bf56c1e31ef37a_21000000* tcd = (_0RL_cd_b0bf56c1e31ef37a_21000000*)cd;
  _impl_iCBS_Task* impl = (_impl_iCBS_Task*) svnt->_ptrToInterface(iCBS_Task::_PD_repoId);
  tcd->result = impl->activableServer();


}

iCBS_ActivableServer_ptr _objref_iCBS_Task::activableServer()
{
  _0RL_cd_b0bf56c1e31ef37a_21000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_31000000, "_get_activableServer", 21);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}


//
// Code for iCBS_Task::getTaskStateInfo

// Proxy call descriptor class. Mangled signature:
//  _ciCBS__Task_mCBS__TaskStateInfo_o_cstring_o_cMCBS_mCBS__LocalTime_o_cunsigned_plong_o_cboolean
class _0RL_cd_b0bf56c1e31ef37a_41000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b0bf56c1e31ef37a_41000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0;
  MCBS::CBS_LocalTime arg_1_;
  MCBS::CBS_LocalTime* arg_1;
  ::CORBA::ULong arg_2;
  ::CORBA::Boolean arg_3;
  iCBS_Task::CBS_TaskStateInfo_var result;
};

void _0RL_cd_b0bf56c1e31ef37a_41000000::marshalReturnedValues(cdrStream& _n)
{
  (const iCBS_Task::CBS_TaskStateInfo&) result >>= _n;
  _n.marshalString(arg_0,0);
  (const MCBS::CBS_LocalTime&) *arg_1 >>= _n;
  arg_2 >>= _n;
  _n.marshalBoolean(arg_3);

}

void _0RL_cd_b0bf56c1e31ef37a_41000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new iCBS_Task::CBS_TaskStateInfo;
  (iCBS_Task::CBS_TaskStateInfo&)result <<= _n;
  arg_0 = _n.unmarshalString(0);
  (MCBS::CBS_LocalTime&)*arg_1 <<= _n;
  (::CORBA::ULong&)arg_2 <<= _n;
  arg_3 = _n.unmarshalBoolean();

}

const char* const _0RL_cd_b0bf56c1e31ef37a_41000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_51000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b0bf56c1e31ef37a_41000000* tcd = (_0RL_cd_b0bf56c1e31ef37a_41000000*)cd;
  _impl_iCBS_Task* impl = (_impl_iCBS_Task*) svnt->_ptrToInterface(iCBS_Task::_PD_repoId);
  tcd->result = impl->getTaskStateInfo(tcd->arg_0.out(), *tcd->arg_1, tcd->arg_2, tcd->arg_3);


}

iCBS_Task::CBS_TaskStateInfo* _objref_iCBS_Task::getTaskStateInfo(::CORBA::String_out taskDeails, ::MCBS::CBS_LocalTime& startTime, ::CORBA::ULong& traceLevel, ::CORBA::Boolean& traceEnabled)
{
  _0RL_cd_b0bf56c1e31ef37a_41000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_51000000, "getTaskStateInfo", 17);
  _call_desc.arg_1 = &(::MCBS::CBS_LocalTime&) startTime;

  _invoke(_call_desc);
  taskDeails = _call_desc.arg_0._retn();
  traceLevel = _call_desc.arg_2;
  traceEnabled = _call_desc.arg_3;
  return _call_desc.result._retn();


}


//
// Code for iCBS_Task::startUp

// Proxy call descriptor class. Mangled signature:
//  void_i_ciCBS__Task_mCBS__StartupMode
class _0RL_cd_b0bf56c1e31ef37a_61000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b0bf56c1e31ef37a_61000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  iCBS_Task::CBS_StartupMode arg_0;
};

void _0RL_cd_b0bf56c1e31ef37a_61000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_b0bf56c1e31ef37a_61000000::unmarshalArguments(cdrStream& _n)
{
  (iCBS_Task::CBS_StartupMode&)arg_0 <<= _n;

}

const char* const _0RL_cd_b0bf56c1e31ef37a_61000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_71000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b0bf56c1e31ef37a_61000000* tcd = (_0RL_cd_b0bf56c1e31ef37a_61000000*)cd;
  _impl_iCBS_Task* impl = (_impl_iCBS_Task*) svnt->_ptrToInterface(iCBS_Task::_PD_repoId);
  impl->startUp(tcd->arg_0);


}

void _objref_iCBS_Task::startUp(::iCBS_Task::CBS_StartupMode mode)
{
  _0RL_cd_b0bf56c1e31ef37a_61000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_71000000, "startUp", 8);
  _call_desc.arg_0 = mode;

  _invoke(_call_desc);



}


//
// Code for iCBS_Task::runDown

// Proxy call descriptor class. Mangled signature:
//  void
class _0RL_cd_b0bf56c1e31ef37a_81000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b0bf56c1e31ef37a_81000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
    
  
  static const char* const _user_exns[];

  
};

const char* const _0RL_cd_b0bf56c1e31ef37a_81000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_91000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_iCBS_Task* impl = (_impl_iCBS_Task*) svnt->_ptrToInterface(iCBS_Task::_PD_repoId);
  impl->runDown();


}

void _objref_iCBS_Task::runDown()
{
  _0RL_cd_b0bf56c1e31ef37a_81000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_91000000, "runDown", 8);


  _invoke(_call_desc);



}


//
// Code for iCBS_Task::getOwnRunState

// Proxy call descriptor class. Mangled signature:
//  _ciCBS__Task_mCBS__RunState
class _0RL_cd_b0bf56c1e31ef37a_a1000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b0bf56c1e31ef37a_a1000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  iCBS_Task::CBS_RunState result;
};

void _0RL_cd_b0bf56c1e31ef37a_a1000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_b0bf56c1e31ef37a_a1000000::unmarshalReturnedValues(cdrStream& _n)
{
  (iCBS_Task::CBS_RunState&)result <<= _n;

}

const char* const _0RL_cd_b0bf56c1e31ef37a_a1000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_b1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b0bf56c1e31ef37a_a1000000* tcd = (_0RL_cd_b0bf56c1e31ef37a_a1000000*)cd;
  _impl_iCBS_Task* impl = (_impl_iCBS_Task*) svnt->_ptrToInterface(iCBS_Task::_PD_repoId);
  tcd->result = impl->getOwnRunState();


}

iCBS_Task::CBS_RunState _objref_iCBS_Task::getOwnRunState()
{
  _0RL_cd_b0bf56c1e31ef37a_a1000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_b1000000, "getOwnRunState", 15);


  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for iCBS_Task::getOverallRunState

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_c1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b0bf56c1e31ef37a_a1000000* tcd = (_0RL_cd_b0bf56c1e31ef37a_a1000000*)cd;
  _impl_iCBS_Task* impl = (_impl_iCBS_Task*) svnt->_ptrToInterface(iCBS_Task::_PD_repoId);
  tcd->result = impl->getOverallRunState();


}

iCBS_Task::CBS_RunState _objref_iCBS_Task::getOverallRunState()
{
  _0RL_cd_b0bf56c1e31ef37a_a1000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_c1000000, "getOverallRunState", 19);


  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for iCBS_Task::getOwnWorkState

// Proxy call descriptor class. Mangled signature:
//  _ciCBS__Task_mCBS__WorkState
class _0RL_cd_b0bf56c1e31ef37a_d1000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b0bf56c1e31ef37a_d1000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  iCBS_Task::CBS_WorkState result;
};

void _0RL_cd_b0bf56c1e31ef37a_d1000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_b0bf56c1e31ef37a_d1000000::unmarshalReturnedValues(cdrStream& _n)
{
  (iCBS_Task::CBS_WorkState&)result <<= _n;

}

const char* const _0RL_cd_b0bf56c1e31ef37a_d1000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_e1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b0bf56c1e31ef37a_d1000000* tcd = (_0RL_cd_b0bf56c1e31ef37a_d1000000*)cd;
  _impl_iCBS_Task* impl = (_impl_iCBS_Task*) svnt->_ptrToInterface(iCBS_Task::_PD_repoId);
  tcd->result = impl->getOwnWorkState();


}

iCBS_Task::CBS_WorkState _objref_iCBS_Task::getOwnWorkState()
{
  _0RL_cd_b0bf56c1e31ef37a_d1000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_e1000000, "getOwnWorkState", 16);


  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for iCBS_Task::ping

// Proxy call descriptor class. Mangled signature:
//  _ciCBS__Task_mCBS__TaskState_o_cstring
class _0RL_cd_b0bf56c1e31ef37a_f1000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b0bf56c1e31ef37a_f1000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0;
  iCBS_Task::CBS_TaskState result;
};

void _0RL_cd_b0bf56c1e31ef37a_f1000000::marshalReturnedValues(cdrStream& _n)
{
  (const iCBS_Task::CBS_TaskState&) result >>= _n;
  _n.marshalString(arg_0,0);

}

void _0RL_cd_b0bf56c1e31ef37a_f1000000::unmarshalReturnedValues(cdrStream& _n)
{
  (iCBS_Task::CBS_TaskState&)result <<= _n;
  arg_0 = _n.unmarshalString(0);

}

const char* const _0RL_cd_b0bf56c1e31ef37a_f1000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_02000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b0bf56c1e31ef37a_f1000000* tcd = (_0RL_cd_b0bf56c1e31ef37a_f1000000*)cd;
  _impl_iCBS_Task* impl = (_impl_iCBS_Task*) svnt->_ptrToInterface(iCBS_Task::_PD_repoId);
  tcd->result = impl->ping(tcd->arg_0.out());


}

iCBS_Task::CBS_TaskState _objref_iCBS_Task::ping(::CORBA::String_out taskDetails)
{
  _0RL_cd_b0bf56c1e31ef37a_f1000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_02000000, "ping", 5);


  _invoke(_call_desc);
  taskDetails = _call_desc.arg_0._retn();
  return _call_desc.result;


}


//
// Code for iCBS_Task::getOverallTaskState

// Proxy call descriptor class. Mangled signature:
//  _ciCBS__Task_mCBS__TaskState
class _0RL_cd_b0bf56c1e31ef37a_12000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b0bf56c1e31ef37a_12000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  iCBS_Task::CBS_TaskState result;
};

void _0RL_cd_b0bf56c1e31ef37a_12000000::marshalReturnedValues(cdrStream& _n)
{
  (const iCBS_Task::CBS_TaskState&) result >>= _n;

}

void _0RL_cd_b0bf56c1e31ef37a_12000000::unmarshalReturnedValues(cdrStream& _n)
{
  (iCBS_Task::CBS_TaskState&)result <<= _n;

}

const char* const _0RL_cd_b0bf56c1e31ef37a_12000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_22000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b0bf56c1e31ef37a_12000000* tcd = (_0RL_cd_b0bf56c1e31ef37a_12000000*)cd;
  _impl_iCBS_Task* impl = (_impl_iCBS_Task*) svnt->_ptrToInterface(iCBS_Task::_PD_repoId);
  tcd->result = impl->getOverallTaskState();


}

iCBS_Task::CBS_TaskState _objref_iCBS_Task::getOverallTaskState()
{
  _0RL_cd_b0bf56c1e31ef37a_12000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_22000000, "getOverallTaskState", 20);


  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for iCBS_Task::getSubtaskProperties

// Proxy call descriptor class. Mangled signature:
//  _ciCBS__Task_mCBS__TaskData_i_cstring
class _0RL_cd_b0bf56c1e31ef37a_32000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b0bf56c1e31ef37a_32000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0_;
  const char* arg_0;
  iCBS_Task::CBS_TaskData result;
};

void _0RL_cd_b0bf56c1e31ef37a_32000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);

}

void _0RL_cd_b0bf56c1e31ef37a_32000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();

}

void _0RL_cd_b0bf56c1e31ef37a_32000000::marshalReturnedValues(cdrStream& _n)
{
  (const iCBS_Task::CBS_TaskData&) result >>= _n;

}

void _0RL_cd_b0bf56c1e31ef37a_32000000::unmarshalReturnedValues(cdrStream& _n)
{
  (iCBS_Task::CBS_TaskData&)result <<= _n;

}

const char* const _0RL_cd_b0bf56c1e31ef37a_32000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_42000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b0bf56c1e31ef37a_32000000* tcd = (_0RL_cd_b0bf56c1e31ef37a_32000000*)cd;
  _impl_iCBS_Task* impl = (_impl_iCBS_Task*) svnt->_ptrToInterface(iCBS_Task::_PD_repoId);
  tcd->result = impl->getSubtaskProperties(tcd->arg_0);


}

iCBS_Task::CBS_TaskData _objref_iCBS_Task::getSubtaskProperties(const char* taskName)
{
  _0RL_cd_b0bf56c1e31ef37a_32000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_42000000, "getSubtaskProperties", 21);
  _call_desc.arg_0 = taskName;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for iCBS_Task::setSubtaskProperties

// Proxy call descriptor class. Mangled signature:
//  void_i_cstring_i_ciCBS__Task_mCBS__TaskData
class _0RL_cd_b0bf56c1e31ef37a_52000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b0bf56c1e31ef37a_52000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0_;
  const char* arg_0;
  iCBS_Task::CBS_TaskData arg_1_;
  const iCBS_Task::CBS_TaskData* arg_1;
};

void _0RL_cd_b0bf56c1e31ef37a_52000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);
  (const iCBS_Task::CBS_TaskData&) *arg_1 >>= _n;

}

void _0RL_cd_b0bf56c1e31ef37a_52000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();
  (iCBS_Task::CBS_TaskData&)arg_1_ <<= _n;
  arg_1 = &arg_1_;

}

const char* const _0RL_cd_b0bf56c1e31ef37a_52000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_62000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b0bf56c1e31ef37a_52000000* tcd = (_0RL_cd_b0bf56c1e31ef37a_52000000*)cd;
  _impl_iCBS_Task* impl = (_impl_iCBS_Task*) svnt->_ptrToInterface(iCBS_Task::_PD_repoId);
  impl->setSubtaskProperties(tcd->arg_0, *tcd->arg_1);


}

void _objref_iCBS_Task::setSubtaskProperties(const char* taskName, const ::iCBS_Task::CBS_TaskData& taskData)
{
  _0RL_cd_b0bf56c1e31ef37a_52000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_62000000, "setSubtaskProperties", 21);
  _call_desc.arg_0 = taskName;
  _call_desc.arg_1 = &(::iCBS_Task::CBS_TaskData&) taskData;

  _invoke(_call_desc);



}


//
// Code for iCBS_Task::showTrace

// Proxy call descriptor class. Mangled signature:
//  void_i_cstring_i_ciCBS__TaskOutput
class _0RL_cd_b0bf56c1e31ef37a_72000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b0bf56c1e31ef37a_72000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0_;
  const char* arg_0;
  iCBS_TaskOutput_var arg_1_;
  iCBS_TaskOutput_ptr arg_1;
};

void _0RL_cd_b0bf56c1e31ef37a_72000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);
  iCBS_TaskOutput::_marshalObjRef(arg_1,_n);

}

void _0RL_cd_b0bf56c1e31ef37a_72000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();
  arg_1_ = iCBS_TaskOutput::_unmarshalObjRef(_n);
  arg_1 = arg_1_.in();

}

const char* const _0RL_cd_b0bf56c1e31ef37a_72000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_82000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b0bf56c1e31ef37a_72000000* tcd = (_0RL_cd_b0bf56c1e31ef37a_72000000*)cd;
  _impl_iCBS_Task* impl = (_impl_iCBS_Task*) svnt->_ptrToInterface(iCBS_Task::_PD_repoId);
  impl->showTrace(tcd->arg_0, tcd->arg_1);


}

void _objref_iCBS_Task::showTrace(const char* hostName, ::iCBS_TaskOutput_ptr taskOutput)
{
  _0RL_cd_b0bf56c1e31ef37a_72000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_82000000, "showTrace", 10);
  _call_desc.arg_0 = hostName;
  _call_desc.arg_1 = taskOutput;

  _invoke(_call_desc);



}


//
// Code for iCBS_Task::isTraced

// Proxy call descriptor class. Mangled signature:
//  _cstring_n_cstring_o_cMCBS_mCBS__LocalTime
class _0RL_cd_b0bf56c1e31ef37a_92000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b0bf56c1e31ef37a_92000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0_;
  char** arg_0;
  MCBS::CBS_LocalTime arg_1_;
  MCBS::CBS_LocalTime* arg_1;
  ::CORBA::String_var result;
};

void _0RL_cd_b0bf56c1e31ef37a_92000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(*arg_0,0);

}

void _0RL_cd_b0bf56c1e31ef37a_92000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = &arg_0_.inout();

}

void _0RL_cd_b0bf56c1e31ef37a_92000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalString(result,0);
  _n.marshalString(*arg_0,0);
  (const MCBS::CBS_LocalTime&) *arg_1 >>= _n;

}

void _0RL_cd_b0bf56c1e31ef37a_92000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalString(0);
  arg_0_ = *arg_0;
  *arg_0 = (char*) _CORBA_String_helper::empty_string;
  *arg_0 = _n.unmarshalString(0);
  (MCBS::CBS_LocalTime&)*arg_1 <<= _n;

}

const char* const _0RL_cd_b0bf56c1e31ef37a_92000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_a2000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b0bf56c1e31ef37a_92000000* tcd = (_0RL_cd_b0bf56c1e31ef37a_92000000*)cd;
  _impl_iCBS_Task* impl = (_impl_iCBS_Task*) svnt->_ptrToInterface(iCBS_Task::_PD_repoId);
  tcd->result = impl->isTraced(*tcd->arg_0, *tcd->arg_1);


}

char* _objref_iCBS_Task::isTraced(::CORBA::String_INOUT_arg hostName, ::MCBS::CBS_LocalTime& startTime)
{
  _0RL_cd_b0bf56c1e31ef37a_92000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_a2000000, "isTraced", 9);
  _call_desc.arg_0 = &(char*&) hostName;
  _call_desc.arg_1 = &(::MCBS::CBS_LocalTime&) startTime;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}


//
// Code for iCBS_Task::enableTracing

// Proxy call descriptor class. Mangled signature:
//  _cstring_i_cstring_o_cMCBS_mCBS__LocalTime
class _0RL_cd_b0bf56c1e31ef37a_b2000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b0bf56c1e31ef37a_b2000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0_;
  const char* arg_0;
  MCBS::CBS_LocalTime arg_1_;
  MCBS::CBS_LocalTime* arg_1;
  ::CORBA::String_var result;
};

void _0RL_cd_b0bf56c1e31ef37a_b2000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);

}

void _0RL_cd_b0bf56c1e31ef37a_b2000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();

}

void _0RL_cd_b0bf56c1e31ef37a_b2000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalString(result,0);
  (const MCBS::CBS_LocalTime&) *arg_1 >>= _n;

}

void _0RL_cd_b0bf56c1e31ef37a_b2000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalString(0);
  (MCBS::CBS_LocalTime&)*arg_1 <<= _n;

}

const char* const _0RL_cd_b0bf56c1e31ef37a_b2000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_c2000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b0bf56c1e31ef37a_b2000000* tcd = (_0RL_cd_b0bf56c1e31ef37a_b2000000*)cd;
  _impl_iCBS_Task* impl = (_impl_iCBS_Task*) svnt->_ptrToInterface(iCBS_Task::_PD_repoId);
  tcd->result = impl->enableTracing(tcd->arg_0, *tcd->arg_1);


}

char* _objref_iCBS_Task::enableTracing(const char* hostName, ::MCBS::CBS_LocalTime& startTime)
{
  _0RL_cd_b0bf56c1e31ef37a_b2000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_c2000000, "enableTracing", 14);
  _call_desc.arg_0 = hostName;
  _call_desc.arg_1 = &(::MCBS::CBS_LocalTime&) startTime;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}


//
// Code for iCBS_Task::disableTracing

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_d2000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_iCBS_Task* impl = (_impl_iCBS_Task*) svnt->_ptrToInterface(iCBS_Task::_PD_repoId);
  impl->disableTracing();


}

void _objref_iCBS_Task::disableTracing()
{
  _0RL_cd_b0bf56c1e31ef37a_81000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_d2000000, "disableTracing", 15);


  _invoke(_call_desc);



}


//
// Code for iCBS_Task::isTracingEnabled

// Proxy call descriptor class. Mangled signature:
//  _cboolean
class _0RL_cd_b0bf56c1e31ef37a_e2000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b0bf56c1e31ef37a_e2000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Boolean result;
};

void _0RL_cd_b0bf56c1e31ef37a_e2000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_b0bf56c1e31ef37a_e2000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_b0bf56c1e31ef37a_e2000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_b0bf56c1e31ef37a_f2000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b0bf56c1e31ef37a_e2000000* tcd = (_0RL_cd_b0bf56c1e31ef37a_e2000000*)cd;
  _impl_iCBS_Task* impl = (_impl_iCBS_Task*) svnt->_ptrToInterface(iCBS_Task::_PD_repoId);
  tcd->result = impl->isTracingEnabled();


}

::CORBA::Boolean _objref_iCBS_Task::isTracingEnabled()
{
  _0RL_cd_b0bf56c1e31ef37a_e2000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_f2000000, "isTracingEnabled", 17);


  _invoke(_call_desc);
  return _call_desc.result;


}

_pof_iCBS_Task::~_pof_iCBS_Task() {}


omniObjRef*
_pof_iCBS_Task::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::_objref_iCBS_Task(ior, id);
}


::CORBA::Boolean
_pof_iCBS_Task::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::iCBS_Task::_PD_repoId))
    return 1;
  
  return 0;
}

const _pof_iCBS_Task _the_pof_iCBS__Task;

_impl_iCBS_Task::~_impl_iCBS_Task() {}


::CORBA::Boolean
_impl_iCBS_Task::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if (omni::strMatch(op, "_get_name")) {

    _0RL_cd_b0bf56c1e31ef37a_20000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_30000000, "_get_name", 10, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "_get_startTime")) {

    _0RL_cd_b0bf56c1e31ef37a_40000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_50000000, "_get_startTime", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "_get_taskStateDetail")) {

    _0RL_cd_b0bf56c1e31ef37a_60000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_70000000, "_get_taskStateDetail", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "_get_subtaskDetails")) {

    _0RL_cd_b0bf56c1e31ef37a_80000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_90000000, "_get_subtaskDetails", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "_get_traceLevel")) {

    _0RL_cd_b0bf56c1e31ef37a_a0000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_b0000000, "_get_traceLevel", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "_set_traceLevel")) {

    _0RL_cd_b0bf56c1e31ef37a_c0000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_d0000000, "_set_traceLevel", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "_get_subtasks")) {

    _0RL_cd_b0bf56c1e31ef37a_e0000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_f0000000, "_get_subtasks", 14, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "_get_subtaskNames")) {

    _0RL_cd_b0bf56c1e31ef37a_01000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_11000000, "_get_subtaskNames", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "_get_activableServer")) {

    _0RL_cd_b0bf56c1e31ef37a_21000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_31000000, "_get_activableServer", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "getTaskStateInfo")) {

    _0RL_cd_b0bf56c1e31ef37a_41000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_51000000, "getTaskStateInfo", 17, 1);
    _call_desc.arg_1 = &_call_desc.arg_1_;
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "startUp")) {

    _0RL_cd_b0bf56c1e31ef37a_61000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_71000000, "startUp", 8, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "runDown")) {

    _0RL_cd_b0bf56c1e31ef37a_81000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_91000000, "runDown", 8, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "getOwnRunState")) {

    _0RL_cd_b0bf56c1e31ef37a_a1000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_b1000000, "getOwnRunState", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "getOverallRunState")) {

    _0RL_cd_b0bf56c1e31ef37a_a1000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_c1000000, "getOverallRunState", 19, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "getOwnWorkState")) {

    _0RL_cd_b0bf56c1e31ef37a_d1000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_e1000000, "getOwnWorkState", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "ping")) {

    _0RL_cd_b0bf56c1e31ef37a_f1000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_02000000, "ping", 5, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "getOverallTaskState")) {

    _0RL_cd_b0bf56c1e31ef37a_12000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_22000000, "getOverallTaskState", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "getSubtaskProperties")) {

    _0RL_cd_b0bf56c1e31ef37a_32000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_42000000, "getSubtaskProperties", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "setSubtaskProperties")) {

    _0RL_cd_b0bf56c1e31ef37a_52000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_62000000, "setSubtaskProperties", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "showTrace")) {

    _0RL_cd_b0bf56c1e31ef37a_72000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_82000000, "showTrace", 10, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "isTraced")) {

    _0RL_cd_b0bf56c1e31ef37a_92000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_a2000000, "isTraced", 9, 1);
    _call_desc.arg_1 = &_call_desc.arg_1_;
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "enableTracing")) {

    _0RL_cd_b0bf56c1e31ef37a_b2000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_c2000000, "enableTracing", 14, 1);
    _call_desc.arg_1 = &_call_desc.arg_1_;
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "disableTracing")) {

    _0RL_cd_b0bf56c1e31ef37a_81000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_d2000000, "disableTracing", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "isTracingEnabled")) {

    _0RL_cd_b0bf56c1e31ef37a_e2000000 _call_desc(_0RL_lcfn_b0bf56c1e31ef37a_f2000000, "isTracingEnabled", 17, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
_impl_iCBS_Task::_ptrToInterface(const char* id)
{
  if (id == ::iCBS_Task::_PD_repoId)
    return (::_impl_iCBS_Task*) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::iCBS_Task::_PD_repoId))
    return (::_impl_iCBS_Task*) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
_impl_iCBS_Task::_mostDerivedRepoId()
{
  return ::iCBS_Task::_PD_repoId;
}

POA_iCBS_TaskOutput::~POA_iCBS_TaskOutput() {}

POA_iCBS_Task::~POA_iCBS_Task() {}

