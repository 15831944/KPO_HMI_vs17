// This file is generated by omniidl (C++ backend)- omniORB_4_2. Do not edit.
#ifndef __CBS__Component_hh__
#define __CBS__Component_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_CBS__Component
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_CBS__Component
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_CBS__Component
#endif



#ifndef __CBS__Common_hh_EXTERNAL_GUARD__
#define __CBS__Common_hh_EXTERNAL_GUARD__
#include <CBS_Common_s.hh>
#endif
#ifndef __CBS__Activation_hh_EXTERNAL_GUARD__
#define __CBS__Activation_hh_EXTERNAL_GUARD__
#include <CBS_Activation_s.hh>
#endif
#ifndef __CBS__Tasks_hh_EXTERNAL_GUARD__
#define __CBS__Tasks_hh_EXTERNAL_GUARD__
#include <CBS_Tasks_s.hh>
#endif



#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif



#ifndef __iCBS__Registry__
#define __iCBS__Registry__
class iCBS_Registry;
class _objref_iCBS_Registry;
class _impl_iCBS_Registry;

typedef _objref_iCBS_Registry* iCBS_Registry_ptr;
typedef iCBS_Registry_ptr iCBS_RegistryRef;

class iCBS_Registry_Helper {
public:
  typedef iCBS_Registry_ptr _ptr_type;

  static _ptr_type _nil();
  static _CORBA_Boolean is_nil(_ptr_type);
  static void release(_ptr_type);
  static void duplicate(_ptr_type);
  static void marshalObjRef(_ptr_type, cdrStream&);
  static _ptr_type unmarshalObjRef(cdrStream&);
};

typedef _CORBA_ObjRef_Var<_objref_iCBS_Registry, iCBS_Registry_Helper> iCBS_Registry_var;
typedef _CORBA_ObjRef_OUT_arg<_objref_iCBS_Registry,iCBS_Registry_Helper > iCBS_Registry_out;

#endif

enum CBS_RunMode { OnlineMode, OfflineMode /*, __max_CBS_RunMode=0xffffffff */ };
typedef CBS_RunMode& CBS_RunMode_out;

_CORBA_GLOBAL_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_CBS_RunMode;

#ifndef __iCBS__Component__
#define __iCBS__Component__
class iCBS_Component;
class _objref_iCBS_Component;
class _impl_iCBS_Component;

typedef _objref_iCBS_Component* iCBS_Component_ptr;
typedef iCBS_Component_ptr iCBS_ComponentRef;

class iCBS_Component_Helper {
public:
  typedef iCBS_Component_ptr _ptr_type;

  static _ptr_type _nil();
  static _CORBA_Boolean is_nil(_ptr_type);
  static void release(_ptr_type);
  static void duplicate(_ptr_type);
  static void marshalObjRef(_ptr_type, cdrStream&);
  static _ptr_type unmarshalObjRef(cdrStream&);
};

typedef _CORBA_ObjRef_Var<_objref_iCBS_Component, iCBS_Component_Helper> iCBS_Component_var;
typedef _CORBA_ObjRef_OUT_arg<_objref_iCBS_Component,iCBS_Component_Helper > iCBS_Component_out;

#endif

// interface iCBS_Component
class iCBS_Component {
public:
  // Declarations for this interface type.
  typedef iCBS_Component_ptr _ptr_type;
  typedef iCBS_Component_var _var_type;

  static _ptr_type _duplicate(_ptr_type);
  static _ptr_type _narrow(::CORBA::Object_ptr);
  static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
  
  static _ptr_type _nil();

  static inline void _marshalObjRef(_ptr_type, cdrStream&);

  static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
    omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
    if (o)
      return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
    else
      return _nil();
  }

  static inline _ptr_type _fromObjRef(omniObjRef* o) {
    if (o)
      return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
    else
      return _nil();
  }

  static _core_attr const char* _PD_repoId;

  // Other IDL defined within this scope.
  
};

class _objref_iCBS_Component :
  public virtual _objref_iCBS_Task
{
public:
  // IDL operations
  CBS_RunMode runMode();
  void setOffline(const ::MCBS::CBS_LocalTime& startTime);
  ::CORBA::Boolean registerSelf(::iCBS_Registry_ptr registry);
  ::CORBA::Boolean updateSelf(::iCBS_Registry_ptr registry);
  iCBS_Task::CBS_TaskState compState(::CORBA::String_out hostName);

  // Constructors
  inline _objref_iCBS_Component()  { _PR_setobj(0); }  // nil
  _objref_iCBS_Component(omniIOR*, omniIdentity*);

protected:
  virtual ~_objref_iCBS_Component();

  
private:
  virtual void* _ptrToObjRef(const char*);

  _objref_iCBS_Component(const _objref_iCBS_Component&);
  _objref_iCBS_Component& operator = (const _objref_iCBS_Component&);
  // not implemented

  friend class iCBS_Component;
};

class _pof_iCBS_Component : public _OMNI_NS(proxyObjectFactory) {
public:
  inline _pof_iCBS_Component() : _OMNI_NS(proxyObjectFactory)(iCBS_Component::_PD_repoId) {}
  virtual ~_pof_iCBS_Component();

  virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
  virtual _CORBA_Boolean is_a(const char*) const;
};

class _impl_iCBS_Component :
  public virtual _impl_iCBS_Task
{
public:
  virtual ~_impl_iCBS_Component();

  virtual CBS_RunMode runMode() = 0;
  virtual void setOffline(const ::MCBS::CBS_LocalTime& startTime) = 0;
  virtual ::CORBA::Boolean registerSelf(::iCBS_Registry_ptr registry) = 0;
  virtual ::CORBA::Boolean updateSelf(::iCBS_Registry_ptr registry) = 0;
  virtual iCBS_Task::CBS_TaskState compState(::CORBA::String_out hostName) = 0;
  
public:  // Really protected, workaround for xlC
  virtual _CORBA_Boolean _dispatch(omniCallHandle&);

private:
  virtual void* _ptrToInterface(const char*);
  virtual const char* _mostDerivedRepoId();
  
};


_CORBA_GLOBAL_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_iCBS_Component;

_CORBA_GLOBAL_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_CBS_ComponentSeq;

class CBS_ComponentSeq_var;

class CBS_ComponentSeq : public _CORBA_Unbounded_Sequence_ObjRef< _objref_iCBS_Component, _CORBA_ObjRef_Element< _objref_iCBS_Component, iCBS_Component_Helper> , iCBS_Component_Helper >  {
public:
  typedef CBS_ComponentSeq_var _var_type;
  inline CBS_ComponentSeq() {}
  inline CBS_ComponentSeq(const CBS_ComponentSeq& _s)
    : _CORBA_Unbounded_Sequence_ObjRef< _objref_iCBS_Component, _CORBA_ObjRef_Element< _objref_iCBS_Component, iCBS_Component_Helper> , iCBS_Component_Helper > (_s) {}

  inline CBS_ComponentSeq(_CORBA_ULong _max)
    : _CORBA_Unbounded_Sequence_ObjRef< _objref_iCBS_Component, _CORBA_ObjRef_Element< _objref_iCBS_Component, iCBS_Component_Helper> , iCBS_Component_Helper > (_max) {}
  inline CBS_ComponentSeq(_CORBA_ULong _max, _CORBA_ULong _len, iCBS_Component_ptr* _val, _CORBA_Boolean _rel=0)
    : _CORBA_Unbounded_Sequence_ObjRef< _objref_iCBS_Component, _CORBA_ObjRef_Element< _objref_iCBS_Component, iCBS_Component_Helper> , iCBS_Component_Helper > (_max, _len, _val, _rel) {}



  inline CBS_ComponentSeq& operator = (const CBS_ComponentSeq& _s) {
    _CORBA_Unbounded_Sequence_ObjRef< _objref_iCBS_Component, _CORBA_ObjRef_Element< _objref_iCBS_Component, iCBS_Component_Helper> , iCBS_Component_Helper > ::operator=(_s);
    return *this;
  }
};

class CBS_ComponentSeq_out;

class CBS_ComponentSeq_var {
public:
  inline CBS_ComponentSeq_var() : _pd_seq(0) {}
  inline CBS_ComponentSeq_var(CBS_ComponentSeq* _s) : _pd_seq(_s) {}
  inline CBS_ComponentSeq_var(const CBS_ComponentSeq_var& _s) {
    if (_s._pd_seq)  _pd_seq = new CBS_ComponentSeq(*_s._pd_seq);
    else             _pd_seq = 0;
  }
  inline ~CBS_ComponentSeq_var() { if (_pd_seq)  delete _pd_seq; }
    
  inline CBS_ComponentSeq_var& operator = (CBS_ComponentSeq* _s) {
    if (_pd_seq)  delete _pd_seq;
    _pd_seq = _s;
    return *this;
  }
  inline CBS_ComponentSeq_var& operator = (const CBS_ComponentSeq_var& _s) {
    if (&_s != this) {
      if (_s._pd_seq) {
        if (!_pd_seq)  _pd_seq = new CBS_ComponentSeq;
        *_pd_seq = *_s._pd_seq;
      }
      else if (_pd_seq) {
        delete _pd_seq;
        _pd_seq = 0;
      }
    }
    return *this;
  }
  inline _CORBA_ObjRef_Element< _objref_iCBS_Component, iCBS_Component_Helper>  operator [] (_CORBA_ULong _s) {
    return (*_pd_seq)[_s];
  }



  inline CBS_ComponentSeq* operator -> () { return _pd_seq; }
  inline const CBS_ComponentSeq* operator -> () const { return _pd_seq; }
#if defined(__GNUG__)
  inline operator CBS_ComponentSeq& () const { return *_pd_seq; }
#else
  inline operator const CBS_ComponentSeq& () const { return *_pd_seq; }
  inline operator CBS_ComponentSeq& () { return *_pd_seq; }
#endif
    
  inline const CBS_ComponentSeq& in() const { return *_pd_seq; }
  inline CBS_ComponentSeq&       inout()    { return *_pd_seq; }
  inline CBS_ComponentSeq*&      out() {
    if (_pd_seq) { delete _pd_seq; _pd_seq = 0; }
    return _pd_seq;
  }
  inline CBS_ComponentSeq* _retn() { CBS_ComponentSeq* tmp = _pd_seq; _pd_seq = 0; return tmp; }
    
  friend class CBS_ComponentSeq_out;
  
private:
  CBS_ComponentSeq* _pd_seq;
};

class CBS_ComponentSeq_out {
public:
  inline CBS_ComponentSeq_out(CBS_ComponentSeq*& _s) : _data(_s) { _data = 0; }
  inline CBS_ComponentSeq_out(CBS_ComponentSeq_var& _s)
    : _data(_s._pd_seq) { _s = (CBS_ComponentSeq*) 0; }
  inline CBS_ComponentSeq_out(const CBS_ComponentSeq_out& _s) : _data(_s._data) {}
  inline CBS_ComponentSeq_out& operator = (const CBS_ComponentSeq_out& _s) {
    _data = _s._data;
    return *this;
  }
  inline CBS_ComponentSeq_out& operator = (CBS_ComponentSeq* _s) {
    _data = _s;
    return *this;
  }
  inline operator CBS_ComponentSeq*&()  { return _data; }
  inline CBS_ComponentSeq*& ptr()       { return _data; }
  inline CBS_ComponentSeq* operator->() { return _data; }

  inline _CORBA_ObjRef_Element< _objref_iCBS_Component, iCBS_Component_Helper>  operator [] (_CORBA_ULong _i) {
    return (*_data)[_i];
  }



  CBS_ComponentSeq*& _data;

private:
  CBS_ComponentSeq_out();
  CBS_ComponentSeq_out& operator=(const CBS_ComponentSeq_var&);
};



class POA_iCBS_Component :
  public virtual _impl_iCBS_Component,
  public virtual POA_iCBS_Task
{
public:
  virtual ~POA_iCBS_Component();

  inline ::iCBS_Component_ptr _this() {
    return (::iCBS_Component_ptr) _do_this(::iCBS_Component::_PD_repoId);
  }
};







#undef _core_attr
#undef _dyn_attr

inline void operator >>=(CBS_RunMode _e, cdrStream& s) {
  ::operator>>=((::CORBA::ULong)_e, s);
}

inline void operator <<= (CBS_RunMode& _e, cdrStream& s) {
  ::CORBA::ULong _0RL_e;
  ::operator<<=(_0RL_e,s);
  if (_0RL_e <= OfflineMode) {
    _e = (CBS_RunMode) _0RL_e;
  }
  else {
    OMNIORB_THROW(MARSHAL,_OMNI_NS(MARSHAL_InvalidEnumValue),
                  (::CORBA::CompletionStatus)s.completion());
  }
}

void operator<<=(::CORBA::Any& _a, CBS_RunMode _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, CBS_RunMode& _s);

void operator<<=(::CORBA::Any& _a, iCBS_Component_ptr _s);
void operator<<=(::CORBA::Any& _a, iCBS_Component_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, iCBS_Component_ptr& _s);

void operator<<=(::CORBA::Any& _a, const CBS_ComponentSeq& _s);
void operator<<=(::CORBA::Any& _a, CBS_ComponentSeq* _sp);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, CBS_ComponentSeq*& _sp);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const CBS_ComponentSeq*& _sp);



inline void
iCBS_Component::_marshalObjRef(::iCBS_Component_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}



#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_CBS__Component
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_CBS__Component
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_CBS__Component
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_CBS__Component
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_CBS__Component
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_CBS__Component
#endif

#endif  // __CBS__Component_hh__

