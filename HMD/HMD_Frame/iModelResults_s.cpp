// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "iModelResults_s.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



iModelResults_ptr iModelResults_Helper::_nil() {
  return ::iModelResults::_nil();
}

::CORBA::Boolean iModelResults_Helper::is_nil(::iModelResults_ptr p) {
  return ::CORBA::is_nil(p);

}

void iModelResults_Helper::release(::iModelResults_ptr p) {
  ::CORBA::release(p);
}

void iModelResults_Helper::marshalObjRef(::iModelResults_ptr obj, cdrStream& s) {
  ::iModelResults::_marshalObjRef(obj, s);
}

iModelResults_ptr iModelResults_Helper::unmarshalObjRef(cdrStream& s) {
  return ::iModelResults::_unmarshalObjRef(s);
}

void iModelResults_Helper::duplicate(::iModelResults_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

iModelResults_ptr
iModelResults::_duplicate(::iModelResults_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

iModelResults_ptr
iModelResults::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


iModelResults_ptr
iModelResults::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

iModelResults_ptr
iModelResults::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_iModelResults _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_iModelResults* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_iModelResults;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* iModelResults::_PD_repoId = "IDL:iModelResults:1.0";


_objref_iModelResults::~_objref_iModelResults() {
  
}


_objref_iModelResults::_objref_iModelResults(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::iModelResults::_PD_repoId, ior, id, 1),
   _objref_iSMC_DataProvider(ior, id)
   
{
  _PR_setobj(this);
}

void*
_objref_iModelResults::_ptrToObjRef(const char* id)
{
  if( id == ::iModelResults::_PD_repoId )
    return (::iModelResults_ptr) this;
  if( id == ::iSMC_DataProvider::_PD_repoId )
    return (::iSMC_DataProvider_ptr) this;

  if( id == ::iData_Provider::_PD_repoId )
    return (::iData_Provider_ptr) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::iModelResults::_PD_repoId) )
    return (::iModelResults_ptr) this;
  if( omni::strMatch(id, ::iSMC_DataProvider::_PD_repoId) )
    return (::iSMC_DataProvider_ptr) this;

  if( omni::strMatch(id, ::iData_Provider::_PD_repoId) )
    return (::iData_Provider_ptr) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

_pof_iModelResults::~_pof_iModelResults() {}


omniObjRef*
_pof_iModelResults::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::_objref_iModelResults(ior, id);
}


::CORBA::Boolean
_pof_iModelResults::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::iModelResults::_PD_repoId) )
    return 1;
  if( omni::ptrStrMatch(id, iSMC_DataProvider::_PD_repoId) )
    return 1;

  if( omni::ptrStrMatch(id, iData_Provider::_PD_repoId) )
    return 1;


  return 0;
}

const _pof_iModelResults _the_pof_iModelResults;

_impl_iModelResults::~_impl_iModelResults() {}


::CORBA::Boolean
_impl_iModelResults::_dispatch(omniCallHandle& _handle)
{
  

  
#ifndef _MSC_VER
  if( _impl_iSMC_DataProvider::_dispatch(_handle) ) {
    return 1;
  }
#else
  // Work-around for incorrect MSVC code generation.
  if( ((_impl_iSMC_DataProvider*)this)->
      _impl_iSMC_DataProvider::_dispatch(_handle) ) {
    return 1;
  }
#endif


  return 0;
}

void*
_impl_iModelResults::_ptrToInterface(const char* id)
{
  if( id == ::iModelResults::_PD_repoId )
    return (::_impl_iModelResults*) this;
  if( id == ::iSMC_DataProvider::_PD_repoId )
    return (::_impl_iSMC_DataProvider*) this;

  if( id == ::iData_Provider::_PD_repoId )
    return (::_impl_iData_Provider*) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::iModelResults::_PD_repoId) )
    return (::_impl_iModelResults*) this;
  if( omni::strMatch(id, ::iSMC_DataProvider::_PD_repoId) )
    return (::_impl_iSMC_DataProvider*) this;

  if( omni::strMatch(id, ::iData_Provider::_PD_repoId) )
    return (::_impl_iData_Provider*) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
_impl_iModelResults::_mostDerivedRepoId()
{
  return ::iModelResults::_PD_repoId;
}

POA_iModelResults::~POA_iModelResults() {}

