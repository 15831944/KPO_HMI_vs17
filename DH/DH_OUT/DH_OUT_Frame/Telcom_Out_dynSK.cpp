// This file is generated by omniidl (C++ backend) - omniORB_4_2. Do not edit.

#include "Telcom_Out_s.hh"

OMNI_USING_NAMESPACE(omni)

static const char* _0RL_dyn_library_version = omniORB_4_2_dyn;

static ::CORBA::TypeCode::_Tracker _0RL_tcTrack(__FILE__);

static CORBA::PR_structMember _0RL_structmember_HeaderType[] = {
  {"MessageLength", CORBA::TypeCode::PR_string_tc(0, &_0RL_tcTrack)},
  {"MessageId", CORBA::TypeCode::PR_string_tc(0, &_0RL_tcTrack)},
  {"MessageCount", CORBA::TypeCode::PR_string_tc(0, &_0RL_tcTrack)},
  {"UnitNo", CORBA::TypeCode::PR_string_tc(0, &_0RL_tcTrack)}
};

#ifdef _0RL_tc_HeaderType
#  undef _0RL_tc_HeaderType
#endif
static CORBA::TypeCode_ptr _0RL_tc_HeaderType = CORBA::TypeCode::PR_struct_tc("IDL:HeaderType:1.0", "HeaderType", _0RL_structmember_HeaderType, 4, &_0RL_tcTrack);

const CORBA::TypeCode_ptr _tc_HeaderType = _0RL_tc_HeaderType;


static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF01_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF01/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF01 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__L2LF01_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF01::_tc_t_CreateTime = _0RL_tc_Telegram__L2LF01_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF03_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF03/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF03 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__L2LF03_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF03::_tc_t_CreateTime = _0RL_tc_Telegram__L2LF03_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF03_mt__ProdDate = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF03/t_ProdDate:1.0", "t_ProdDate", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF03 { 
  const ::CORBA::TypeCode_ptr _tc_t_ProdDate = _0RL_tc_Telegram__L2LF03_mt__ProdDate;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF03::_tc_t_ProdDate = _0RL_tc_Telegram__L2LF03_mt__ProdDate;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF03_mt__DepTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF03/t_DepTime:1.0", "t_DepTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF03 { 
  const ::CORBA::TypeCode_ptr _tc_t_DepTime = _0RL_tc_Telegram__L2LF03_mt__DepTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF03::_tc_t_DepTime = _0RL_tc_Telegram__L2LF03_mt__DepTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF03_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF03/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF03 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__L2LF03_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF03::_tc_t_Spare = _0RL_tc_Telegram__L2LF03_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF05_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF05/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF05 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__L2LF05_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF05::_tc_t_CreateTime = _0RL_tc_Telegram__L2LF05_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF05_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF05/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF05 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__L2LF05_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF05::_tc_t_Spare = _0RL_tc_Telegram__L2LF05_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF06_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF06/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF06 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__L2LF06_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF06::_tc_t_CreateTime = _0RL_tc_Telegram__L2LF06_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF06_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF06/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF06 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__L2LF06_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF06::_tc_t_Spare = _0RL_tc_Telegram__L2LF06_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF07_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF07/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF07 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__L2LF07_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF07::_tc_t_CreateTime = _0RL_tc_Telegram__L2LF07_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF07_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF07/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF07 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__L2LF07_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF07::_tc_t_Spare = _0RL_tc_Telegram__L2LF07_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF20_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF20/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF20 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__L2LF20_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF20::_tc_t_CreateTime = _0RL_tc_Telegram__L2LF20_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF20_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF20/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF20 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__L2LF20_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF20::_tc_t_Spare = _0RL_tc_Telegram__L2LF20_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF22_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF22/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF22 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__L2LF22_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF22::_tc_t_CreateTime = _0RL_tc_Telegram__L2LF22_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF22_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF22/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF22 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__L2LF22_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF22::_tc_t_Spare = _0RL_tc_Telegram__L2LF22_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF23_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF23/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF23 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__L2LF23_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF23::_tc_t_CreateTime = _0RL_tc_Telegram__L2LF23_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF23_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF23/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF23 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__L2LF23_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF23::_tc_t_Spare = _0RL_tc_Telegram__L2LF23_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF25_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF25/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF25 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__L2LF25_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF25::_tc_t_CreateTime = _0RL_tc_Telegram__L2LF25_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF25_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF25/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF25 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__L2LF25_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF25::_tc_t_Spare = _0RL_tc_Telegram__L2LF25_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF30_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF30/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF30 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__L2LF30_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF30::_tc_t_CreateTime = _0RL_tc_Telegram__L2LF30_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF30_mt__Enabled = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF30/t_Enabled:1.0", "t_Enabled", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF30 { 
  const ::CORBA::TypeCode_ptr _tc_t_Enabled = _0RL_tc_Telegram__L2LF30_mt__Enabled;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF30::_tc_t_Enabled = _0RL_tc_Telegram__L2LF30_mt__Enabled;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF30_mt__RemDurStep = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF30/t_RemDurStep:1.0", "t_RemDurStep", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_double_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF30 { 
  const ::CORBA::TypeCode_ptr _tc_t_RemDurStep = _0RL_tc_Telegram__L2LF30_mt__RemDurStep;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF30::_tc_t_RemDurStep = _0RL_tc_Telegram__L2LF30_mt__RemDurStep;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF30_mt__ElecEnergyStep = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF30/t_ElecEnergyStep:1.0", "t_ElecEnergyStep", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF30 { 
  const ::CORBA::TypeCode_ptr _tc_t_ElecEnergyStep = _0RL_tc_Telegram__L2LF30_mt__ElecEnergyStep;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF30::_tc_t_ElecEnergyStep = _0RL_tc_Telegram__L2LF30_mt__ElecEnergyStep;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF30_mt__TempEndStep = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF30/t_TempEndStep:1.0", "t_TempEndStep", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF30 { 
  const ::CORBA::TypeCode_ptr _tc_t_TempEndStep = _0RL_tc_Telegram__L2LF30_mt__TempEndStep;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF30::_tc_t_TempEndStep = _0RL_tc_Telegram__L2LF30_mt__TempEndStep;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF30_mt__AimVoltTap = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF30/t_AimVoltTap:1.0", "t_AimVoltTap", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF30 { 
  const ::CORBA::TypeCode_ptr _tc_t_AimVoltTap = _0RL_tc_Telegram__L2LF30_mt__AimVoltTap;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF30::_tc_t_AimVoltTap = _0RL_tc_Telegram__L2LF30_mt__AimVoltTap;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF30_mt__AimCurveNo = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF30/t_AimCurveNo:1.0", "t_AimCurveNo", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF30 { 
  const ::CORBA::TypeCode_ptr _tc_t_AimCurveNo = _0RL_tc_Telegram__L2LF30_mt__AimCurveNo;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF30::_tc_t_AimCurveNo = _0RL_tc_Telegram__L2LF30_mt__AimCurveNo;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF30_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF30/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF30 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__L2LF30_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF30::_tc_t_Spare = _0RL_tc_Telegram__L2LF30_mt__Spare;
#endif

static CORBA::PR_structMember _0RL_structmember_Telegram__L2LF30__ELEC__PATT_msENTRY[] = {
  {"MessageCount", CORBA::TypeCode::PR_long_tc()},
  {"MessageIndex", CORBA::TypeCode::PR_long_tc()},
  {"HeatId", CORBA::TypeCode::PR_string_tc(0, &_0RL_tcTrack)},
  {"TreatId", CORBA::TypeCode::PR_string_tc(0, &_0RL_tcTrack)},
  {"ActivityType", CORBA::TypeCode::PR_long_tc()},
  {"StepNo", CORBA::TypeCode::PR_long_tc()},
  {"Enabled", CORBA::TypeCode::PR_long_tc()},
  {"RemDurStep", CORBA::TypeCode::PR_double_tc()},
  {"ElecEnergyStep", CORBA::TypeCode::PR_long_tc()},
  {"TempEndStep", CORBA::TypeCode::PR_long_tc()},
  {"AimVoltTap", CORBA::TypeCode::PR_long_tc()},
  {"AimCurveNo", CORBA::TypeCode::PR_long_tc()},
  {"Spare_1", CORBA::TypeCode::PR_long_tc()},
  {"Spare_2", CORBA::TypeCode::PR_long_tc()}
};

#ifdef _0RL_tc_Telegram__L2LF30__ELEC__PATT_msENTRY
#  undef _0RL_tc_Telegram__L2LF30__ELEC__PATT_msENTRY
#endif
static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF30__ELEC__PATT_msENTRY = CORBA::TypeCode::PR_struct_tc("IDL:Telegram_L2LF30_ELEC_PATT/sENTRY:1.0", "sENTRY", _0RL_structmember_Telegram__L2LF30__ELEC__PATT_msENTRY, 14, &_0RL_tcTrack);

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF30_ELEC_PATT { 
  const ::CORBA::TypeCode_ptr _tc_sENTRY = _0RL_tc_Telegram__L2LF30__ELEC__PATT_msENTRY;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF30_ELEC_PATT::_tc_sENTRY = _0RL_tc_Telegram__L2LF30__ELEC__PATT_msENTRY;
#endif






static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF30__ELEC__PATT_mt__ENTRY = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF30_ELEC_PATT/t_ENTRY:1.0", "t_ENTRY", CORBA::TypeCode::PR_sequence_tc(0, _0RL_tc_Telegram__L2LF30__ELEC__PATT_msENTRY, &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF30_ELEC_PATT { 
  const ::CORBA::TypeCode_ptr _tc_t_ENTRY = _0RL_tc_Telegram__L2LF30__ELEC__PATT_mt__ENTRY;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF30_ELEC_PATT::_tc_t_ENTRY = _0RL_tc_Telegram__L2LF30__ELEC__PATT_mt__ENTRY;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF31_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF31/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF31 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__L2LF31_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF31::_tc_t_CreateTime = _0RL_tc_Telegram__L2LF31_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF31_mt__PhaseNo = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF31/t_PhaseNo:1.0", "t_PhaseNo", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF31 { 
  const ::CORBA::TypeCode_ptr _tc_t_PhaseNo = _0RL_tc_Telegram__L2LF31_mt__PhaseNo;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF31::_tc_t_PhaseNo = _0RL_tc_Telegram__L2LF31_mt__PhaseNo;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF31_mt__Enabled = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF31/t_Enabled:1.0", "t_Enabled", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF31 { 
  const ::CORBA::TypeCode_ptr _tc_t_Enabled = _0RL_tc_Telegram__L2LF31_mt__Enabled;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF31::_tc_t_Enabled = _0RL_tc_Telegram__L2LF31_mt__Enabled;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF31_mt__Duration = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF31/t_Duration:1.0", "t_Duration", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_double_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF31 { 
  const ::CORBA::TypeCode_ptr _tc_t_Duration = _0RL_tc_Telegram__L2LF31_mt__Duration;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF31::_tc_t_Duration = _0RL_tc_Telegram__L2LF31_mt__Duration;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF31_mt__StirrInt = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF31/t_StirrInt:1.0", "t_StirrInt", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF31 { 
  const ::CORBA::TypeCode_ptr _tc_t_StirrInt = _0RL_tc_Telegram__L2LF31_mt__StirrInt;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF31::_tc_t_StirrInt = _0RL_tc_Telegram__L2LF31_mt__StirrInt;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF31_mt__StirrGasFlow = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF31/t_StirrGasFlow:1.0", "t_StirrGasFlow", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_double_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF31 { 
  const ::CORBA::TypeCode_ptr _tc_t_StirrGasFlow = _0RL_tc_Telegram__L2LF31_mt__StirrGasFlow;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF31::_tc_t_StirrGasFlow = _0RL_tc_Telegram__L2LF31_mt__StirrGasFlow;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF31_mt__StirrGasType = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF31/t_StirrGasType:1.0", "t_StirrGasType", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF31 { 
  const ::CORBA::TypeCode_ptr _tc_t_StirrGasType = _0RL_tc_Telegram__L2LF31_mt__StirrGasType;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF31::_tc_t_StirrGasType = _0RL_tc_Telegram__L2LF31_mt__StirrGasType;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF31_mt__StepPriority = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF31/t_StepPriority:1.0", "t_StepPriority", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF31 { 
  const ::CORBA::TypeCode_ptr _tc_t_StepPriority = _0RL_tc_Telegram__L2LF31_mt__StepPriority;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF31::_tc_t_StepPriority = _0RL_tc_Telegram__L2LF31_mt__StepPriority;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF31_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF31/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF31 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__L2LF31_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF31::_tc_t_Spare = _0RL_tc_Telegram__L2LF31_mt__Spare;
#endif

static CORBA::PR_structMember _0RL_structmember_Telegram__L2LF31__STIRR__PATT_msENTRY[] = {
  {"MessageCount", CORBA::TypeCode::PR_long_tc()},
  {"MessageIndex", CORBA::TypeCode::PR_long_tc()},
  {"HeatId", CORBA::TypeCode::PR_string_tc(0, &_0RL_tcTrack)},
  {"TreatId", CORBA::TypeCode::PR_string_tc(0, &_0RL_tcTrack)},
  {"PhaseNo", CORBA::TypeCode::PR_long_tc()},
  {"Enabled", CORBA::TypeCode::PR_long_tc()},
  {"Duration", CORBA::TypeCode::PR_double_tc()},
  {"StirrInt", CORBA::TypeCode::PR_long_tc()},
  {"StirrGasFlow", CORBA::TypeCode::PR_double_tc()},
  {"StirrGasType", CORBA::TypeCode::PR_long_tc()},
  {"StepPriority", CORBA::TypeCode::PR_long_tc()},
  {"Spare_1", CORBA::TypeCode::PR_long_tc()},
  {"Spare_2", CORBA::TypeCode::PR_long_tc()}
};

#ifdef _0RL_tc_Telegram__L2LF31__STIRR__PATT_msENTRY
#  undef _0RL_tc_Telegram__L2LF31__STIRR__PATT_msENTRY
#endif
static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF31__STIRR__PATT_msENTRY = CORBA::TypeCode::PR_struct_tc("IDL:Telegram_L2LF31_STIRR_PATT/sENTRY:1.0", "sENTRY", _0RL_structmember_Telegram__L2LF31__STIRR__PATT_msENTRY, 13, &_0RL_tcTrack);

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF31_STIRR_PATT { 
  const ::CORBA::TypeCode_ptr _tc_sENTRY = _0RL_tc_Telegram__L2LF31__STIRR__PATT_msENTRY;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF31_STIRR_PATT::_tc_sENTRY = _0RL_tc_Telegram__L2LF31__STIRR__PATT_msENTRY;
#endif






static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF31__STIRR__PATT_mt__ENTRY = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF31_STIRR_PATT/t_ENTRY:1.0", "t_ENTRY", CORBA::TypeCode::PR_sequence_tc(0, _0RL_tc_Telegram__L2LF31__STIRR__PATT_msENTRY, &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF31_STIRR_PATT { 
  const ::CORBA::TypeCode_ptr _tc_t_ENTRY = _0RL_tc_Telegram__L2LF31__STIRR__PATT_mt__ENTRY;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF31_STIRR_PATT::_tc_t_ENTRY = _0RL_tc_Telegram__L2LF31__STIRR__PATT_mt__ENTRY;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF40_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF40/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF40 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__L2LF40_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF40::_tc_t_CreateTime = _0RL_tc_Telegram__L2LF40_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF40_mt__ParamName = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF40/t_ParamName:1.0", "t_ParamName", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_string_tc(0, &_0RL_tcTrack), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF40 { 
  const ::CORBA::TypeCode_ptr _tc_t_ParamName = _0RL_tc_Telegram__L2LF40_mt__ParamName;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF40::_tc_t_ParamName = _0RL_tc_Telegram__L2LF40_mt__ParamName;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF40_mt__ParamValue = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF40/t_ParamValue:1.0", "t_ParamValue", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_double_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF40 { 
  const ::CORBA::TypeCode_ptr _tc_t_ParamValue = _0RL_tc_Telegram__L2LF40_mt__ParamValue;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF40::_tc_t_ParamValue = _0RL_tc_Telegram__L2LF40_mt__ParamValue;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF40_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF40/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF40 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__L2LF40_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF40::_tc_t_Spare = _0RL_tc_Telegram__L2LF40_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF70_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF70/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF70 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__L2LF70_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF70::_tc_t_CreateTime = _0RL_tc_Telegram__L2LF70_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF70_mt__MatCode = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF70/t_MatCode:1.0", "t_MatCode", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_string_tc(0, &_0RL_tcTrack), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF70 { 
  const ::CORBA::TypeCode_ptr _tc_t_MatCode = _0RL_tc_Telegram__L2LF70_mt__MatCode;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF70::_tc_t_MatCode = _0RL_tc_Telegram__L2LF70_mt__MatCode;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF70_mt__MatWeight = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF70/t_MatWeight:1.0", "t_MatWeight", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF70 { 
  const ::CORBA::TypeCode_ptr _tc_t_MatWeight = _0RL_tc_Telegram__L2LF70_mt__MatWeight;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF70::_tc_t_MatWeight = _0RL_tc_Telegram__L2LF70_mt__MatWeight;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF70_mt__MatSequence = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF70/t_MatSequence:1.0", "t_MatSequence", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF70 { 
  const ::CORBA::TypeCode_ptr _tc_t_MatSequence = _0RL_tc_Telegram__L2LF70_mt__MatSequence;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF70::_tc_t_MatSequence = _0RL_tc_Telegram__L2LF70_mt__MatSequence;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF70_mt__FeedRate = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF70/t_FeedRate:1.0", "t_FeedRate", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF70 { 
  const ::CORBA::TypeCode_ptr _tc_t_FeedRate = _0RL_tc_Telegram__L2LF70_mt__FeedRate;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF70::_tc_t_FeedRate = _0RL_tc_Telegram__L2LF70_mt__FeedRate;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF70_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF70/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF70 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__L2LF70_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF70::_tc_t_Spare = _0RL_tc_Telegram__L2LF70_mt__Spare;
#endif

static CORBA::PR_structMember _0RL_structmember_Telegram__L2LF70__MAT__HANDL_msENTRY[] = {
  {"MessageCount", CORBA::TypeCode::PR_long_tc()},
  {"MessageIndex", CORBA::TypeCode::PR_long_tc()},
  {"HeatId", CORBA::TypeCode::PR_string_tc(0, &_0RL_tcTrack)},
  {"TreatId", CORBA::TypeCode::PR_string_tc(0, &_0RL_tcTrack)},
  {"Source", CORBA::TypeCode::PR_long_tc()},
  {"RecipeNo", CORBA::TypeCode::PR_long_tc()},
  {"MatCode", CORBA::TypeCode::PR_string_tc(0, &_0RL_tcTrack)},
  {"MatWeight", CORBA::TypeCode::PR_long_tc()},
  {"MatSequence", CORBA::TypeCode::PR_long_tc()},
  {"FeedRate", CORBA::TypeCode::PR_long_tc()},
  {"Spare_1", CORBA::TypeCode::PR_long_tc()},
  {"Spare_2", CORBA::TypeCode::PR_long_tc()}
};

#ifdef _0RL_tc_Telegram__L2LF70__MAT__HANDL_msENTRY
#  undef _0RL_tc_Telegram__L2LF70__MAT__HANDL_msENTRY
#endif
static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF70__MAT__HANDL_msENTRY = CORBA::TypeCode::PR_struct_tc("IDL:Telegram_L2LF70_MAT_HANDL/sENTRY:1.0", "sENTRY", _0RL_structmember_Telegram__L2LF70__MAT__HANDL_msENTRY, 12, &_0RL_tcTrack);

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF70_MAT_HANDL { 
  const ::CORBA::TypeCode_ptr _tc_sENTRY = _0RL_tc_Telegram__L2LF70__MAT__HANDL_msENTRY;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF70_MAT_HANDL::_tc_sENTRY = _0RL_tc_Telegram__L2LF70__MAT__HANDL_msENTRY;
#endif






static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF70__MAT__HANDL_mt__ENTRY = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF70_MAT_HANDL/t_ENTRY:1.0", "t_ENTRY", CORBA::TypeCode::PR_sequence_tc(0, _0RL_tc_Telegram__L2LF70__MAT__HANDL_msENTRY, &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF70_MAT_HANDL { 
  const ::CORBA::TypeCode_ptr _tc_t_ENTRY = _0RL_tc_Telegram__L2LF70__MAT__HANDL_mt__ENTRY;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF70_MAT_HANDL::_tc_t_ENTRY = _0RL_tc_Telegram__L2LF70__MAT__HANDL_mt__ENTRY;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF71_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF71/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF71 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__L2LF71_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF71::_tc_t_CreateTime = _0RL_tc_Telegram__L2LF71_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF71_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF71/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF71 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__L2LF71_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF71::_tc_t_Spare = _0RL_tc_Telegram__L2LF71_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF72_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF72/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF72 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__L2LF72_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF72::_tc_t_CreateTime = _0RL_tc_Telegram__L2LF72_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__L2LF72_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_L2LF72/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_L2LF72 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__L2LF72_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_L2LF72::_tc_t_Spare = _0RL_tc_Telegram__L2LF72_mt__Spare;
#endif

static void _0RL_HeaderType_marshal_fn(cdrStream& _s, void* _v)
{
  HeaderType* _p = (HeaderType*)_v;
  *_p >>= _s;
}
static void _0RL_HeaderType_unmarshal_fn(cdrStream& _s, void*& _v)
{
  HeaderType* _p = new HeaderType;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_HeaderType_destructor_fn(void* _v)
{
  HeaderType* _p = (HeaderType*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const HeaderType& _s)
{
  HeaderType* _p = new HeaderType(_s);
  _a.PR_insert(_0RL_tc_HeaderType,
               _0RL_HeaderType_marshal_fn,
               _0RL_HeaderType_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, HeaderType* _sp)
{
  _a.PR_insert(_0RL_tc_HeaderType,
               _0RL_HeaderType_marshal_fn,
               _0RL_HeaderType_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, HeaderType*& _sp)
{
  return _a >>= (const HeaderType*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const HeaderType*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_HeaderType,
                    _0RL_HeaderType_unmarshal_fn,
                    _0RL_HeaderType_marshal_fn,
                    _0RL_HeaderType_destructor_fn,
                    _v)) {
    _sp = (const HeaderType*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF01_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF01::t_CreateTime* _p = (Telegram_L2LF01::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF01_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF01::t_CreateTime* _p = new Telegram_L2LF01::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF01_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_L2LF01::t_CreateTime* _p = (Telegram_L2LF01::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF01::t_CreateTime& _s)
{
  Telegram_L2LF01::t_CreateTime* _p = new Telegram_L2LF01::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF01_mt__CreateTime,
               _0RL_Telegram__L2LF01_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF01_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF01::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF01_mt__CreateTime,
               _0RL_Telegram__L2LF01_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF01_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF01::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_L2LF01::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF01::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF01_mt__CreateTime,
                    _0RL_Telegram__L2LF01_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__L2LF01_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__L2LF01_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF01::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF03_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF03::t_CreateTime* _p = (Telegram_L2LF03::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF03_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF03::t_CreateTime* _p = new Telegram_L2LF03::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF03_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_L2LF03::t_CreateTime* _p = (Telegram_L2LF03::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF03::t_CreateTime& _s)
{
  Telegram_L2LF03::t_CreateTime* _p = new Telegram_L2LF03::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF03_mt__CreateTime,
               _0RL_Telegram__L2LF03_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF03_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF03::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF03_mt__CreateTime,
               _0RL_Telegram__L2LF03_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF03_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF03::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_L2LF03::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF03::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF03_mt__CreateTime,
                    _0RL_Telegram__L2LF03_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__L2LF03_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__L2LF03_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF03::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF03_mt__ProdDate_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF03::t_ProdDate* _p = (Telegram_L2LF03::t_ProdDate*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF03_mt__ProdDate_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF03::t_ProdDate* _p = new Telegram_L2LF03::t_ProdDate;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF03_mt__ProdDate_destructor_fn(void* _v)
{
  Telegram_L2LF03::t_ProdDate* _p = (Telegram_L2LF03::t_ProdDate*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF03::t_ProdDate& _s)
{
  Telegram_L2LF03::t_ProdDate* _p = new Telegram_L2LF03::t_ProdDate(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF03_mt__ProdDate,
               _0RL_Telegram__L2LF03_mt__ProdDate_marshal_fn,
               _0RL_Telegram__L2LF03_mt__ProdDate_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF03::t_ProdDate* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF03_mt__ProdDate,
               _0RL_Telegram__L2LF03_mt__ProdDate_marshal_fn,
               _0RL_Telegram__L2LF03_mt__ProdDate_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF03::t_ProdDate*& _sp)
{
  return _a >>= (const Telegram_L2LF03::t_ProdDate*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF03::t_ProdDate*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF03_mt__ProdDate,
                    _0RL_Telegram__L2LF03_mt__ProdDate_unmarshal_fn,
                    _0RL_Telegram__L2LF03_mt__ProdDate_marshal_fn,
                    _0RL_Telegram__L2LF03_mt__ProdDate_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF03::t_ProdDate*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF03_mt__DepTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF03::t_DepTime* _p = (Telegram_L2LF03::t_DepTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF03_mt__DepTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF03::t_DepTime* _p = new Telegram_L2LF03::t_DepTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF03_mt__DepTime_destructor_fn(void* _v)
{
  Telegram_L2LF03::t_DepTime* _p = (Telegram_L2LF03::t_DepTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF03::t_DepTime& _s)
{
  Telegram_L2LF03::t_DepTime* _p = new Telegram_L2LF03::t_DepTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF03_mt__DepTime,
               _0RL_Telegram__L2LF03_mt__DepTime_marshal_fn,
               _0RL_Telegram__L2LF03_mt__DepTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF03::t_DepTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF03_mt__DepTime,
               _0RL_Telegram__L2LF03_mt__DepTime_marshal_fn,
               _0RL_Telegram__L2LF03_mt__DepTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF03::t_DepTime*& _sp)
{
  return _a >>= (const Telegram_L2LF03::t_DepTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF03::t_DepTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF03_mt__DepTime,
                    _0RL_Telegram__L2LF03_mt__DepTime_unmarshal_fn,
                    _0RL_Telegram__L2LF03_mt__DepTime_marshal_fn,
                    _0RL_Telegram__L2LF03_mt__DepTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF03::t_DepTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF03_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF03::t_Spare* _p = (Telegram_L2LF03::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF03_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF03::t_Spare* _p = new Telegram_L2LF03::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF03_mt__Spare_destructor_fn(void* _v)
{
  Telegram_L2LF03::t_Spare* _p = (Telegram_L2LF03::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF03::t_Spare& _s)
{
  Telegram_L2LF03::t_Spare* _p = new Telegram_L2LF03::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF03_mt__Spare,
               _0RL_Telegram__L2LF03_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF03_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF03::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF03_mt__Spare,
               _0RL_Telegram__L2LF03_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF03_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF03::t_Spare*& _sp)
{
  return _a >>= (const Telegram_L2LF03::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF03::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF03_mt__Spare,
                    _0RL_Telegram__L2LF03_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__L2LF03_mt__Spare_marshal_fn,
                    _0RL_Telegram__L2LF03_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF03::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF05_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF05::t_CreateTime* _p = (Telegram_L2LF05::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF05_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF05::t_CreateTime* _p = new Telegram_L2LF05::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF05_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_L2LF05::t_CreateTime* _p = (Telegram_L2LF05::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF05::t_CreateTime& _s)
{
  Telegram_L2LF05::t_CreateTime* _p = new Telegram_L2LF05::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF05_mt__CreateTime,
               _0RL_Telegram__L2LF05_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF05_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF05::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF05_mt__CreateTime,
               _0RL_Telegram__L2LF05_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF05_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF05::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_L2LF05::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF05::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF05_mt__CreateTime,
                    _0RL_Telegram__L2LF05_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__L2LF05_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__L2LF05_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF05::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF05_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF05::t_Spare* _p = (Telegram_L2LF05::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF05_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF05::t_Spare* _p = new Telegram_L2LF05::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF05_mt__Spare_destructor_fn(void* _v)
{
  Telegram_L2LF05::t_Spare* _p = (Telegram_L2LF05::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF05::t_Spare& _s)
{
  Telegram_L2LF05::t_Spare* _p = new Telegram_L2LF05::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF05_mt__Spare,
               _0RL_Telegram__L2LF05_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF05_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF05::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF05_mt__Spare,
               _0RL_Telegram__L2LF05_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF05_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF05::t_Spare*& _sp)
{
  return _a >>= (const Telegram_L2LF05::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF05::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF05_mt__Spare,
                    _0RL_Telegram__L2LF05_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__L2LF05_mt__Spare_marshal_fn,
                    _0RL_Telegram__L2LF05_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF05::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF06_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF06::t_CreateTime* _p = (Telegram_L2LF06::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF06_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF06::t_CreateTime* _p = new Telegram_L2LF06::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF06_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_L2LF06::t_CreateTime* _p = (Telegram_L2LF06::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF06::t_CreateTime& _s)
{
  Telegram_L2LF06::t_CreateTime* _p = new Telegram_L2LF06::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF06_mt__CreateTime,
               _0RL_Telegram__L2LF06_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF06_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF06::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF06_mt__CreateTime,
               _0RL_Telegram__L2LF06_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF06_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF06::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_L2LF06::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF06::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF06_mt__CreateTime,
                    _0RL_Telegram__L2LF06_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__L2LF06_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__L2LF06_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF06::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF06_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF06::t_Spare* _p = (Telegram_L2LF06::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF06_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF06::t_Spare* _p = new Telegram_L2LF06::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF06_mt__Spare_destructor_fn(void* _v)
{
  Telegram_L2LF06::t_Spare* _p = (Telegram_L2LF06::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF06::t_Spare& _s)
{
  Telegram_L2LF06::t_Spare* _p = new Telegram_L2LF06::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF06_mt__Spare,
               _0RL_Telegram__L2LF06_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF06_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF06::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF06_mt__Spare,
               _0RL_Telegram__L2LF06_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF06_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF06::t_Spare*& _sp)
{
  return _a >>= (const Telegram_L2LF06::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF06::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF06_mt__Spare,
                    _0RL_Telegram__L2LF06_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__L2LF06_mt__Spare_marshal_fn,
                    _0RL_Telegram__L2LF06_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF06::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF07_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF07::t_CreateTime* _p = (Telegram_L2LF07::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF07_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF07::t_CreateTime* _p = new Telegram_L2LF07::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF07_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_L2LF07::t_CreateTime* _p = (Telegram_L2LF07::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF07::t_CreateTime& _s)
{
  Telegram_L2LF07::t_CreateTime* _p = new Telegram_L2LF07::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF07_mt__CreateTime,
               _0RL_Telegram__L2LF07_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF07_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF07::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF07_mt__CreateTime,
               _0RL_Telegram__L2LF07_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF07_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF07::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_L2LF07::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF07::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF07_mt__CreateTime,
                    _0RL_Telegram__L2LF07_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__L2LF07_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__L2LF07_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF07::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF07_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF07::t_Spare* _p = (Telegram_L2LF07::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF07_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF07::t_Spare* _p = new Telegram_L2LF07::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF07_mt__Spare_destructor_fn(void* _v)
{
  Telegram_L2LF07::t_Spare* _p = (Telegram_L2LF07::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF07::t_Spare& _s)
{
  Telegram_L2LF07::t_Spare* _p = new Telegram_L2LF07::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF07_mt__Spare,
               _0RL_Telegram__L2LF07_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF07_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF07::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF07_mt__Spare,
               _0RL_Telegram__L2LF07_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF07_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF07::t_Spare*& _sp)
{
  return _a >>= (const Telegram_L2LF07::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF07::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF07_mt__Spare,
                    _0RL_Telegram__L2LF07_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__L2LF07_mt__Spare_marshal_fn,
                    _0RL_Telegram__L2LF07_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF07::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF20_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF20::t_CreateTime* _p = (Telegram_L2LF20::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF20_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF20::t_CreateTime* _p = new Telegram_L2LF20::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF20_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_L2LF20::t_CreateTime* _p = (Telegram_L2LF20::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF20::t_CreateTime& _s)
{
  Telegram_L2LF20::t_CreateTime* _p = new Telegram_L2LF20::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF20_mt__CreateTime,
               _0RL_Telegram__L2LF20_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF20_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF20::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF20_mt__CreateTime,
               _0RL_Telegram__L2LF20_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF20_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF20::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_L2LF20::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF20::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF20_mt__CreateTime,
                    _0RL_Telegram__L2LF20_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__L2LF20_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__L2LF20_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF20::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF20_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF20::t_Spare* _p = (Telegram_L2LF20::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF20_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF20::t_Spare* _p = new Telegram_L2LF20::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF20_mt__Spare_destructor_fn(void* _v)
{
  Telegram_L2LF20::t_Spare* _p = (Telegram_L2LF20::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF20::t_Spare& _s)
{
  Telegram_L2LF20::t_Spare* _p = new Telegram_L2LF20::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF20_mt__Spare,
               _0RL_Telegram__L2LF20_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF20_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF20::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF20_mt__Spare,
               _0RL_Telegram__L2LF20_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF20_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF20::t_Spare*& _sp)
{
  return _a >>= (const Telegram_L2LF20::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF20::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF20_mt__Spare,
                    _0RL_Telegram__L2LF20_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__L2LF20_mt__Spare_marshal_fn,
                    _0RL_Telegram__L2LF20_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF20::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF22_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF22::t_CreateTime* _p = (Telegram_L2LF22::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF22_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF22::t_CreateTime* _p = new Telegram_L2LF22::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF22_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_L2LF22::t_CreateTime* _p = (Telegram_L2LF22::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF22::t_CreateTime& _s)
{
  Telegram_L2LF22::t_CreateTime* _p = new Telegram_L2LF22::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF22_mt__CreateTime,
               _0RL_Telegram__L2LF22_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF22_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF22::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF22_mt__CreateTime,
               _0RL_Telegram__L2LF22_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF22_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF22::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_L2LF22::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF22::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF22_mt__CreateTime,
                    _0RL_Telegram__L2LF22_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__L2LF22_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__L2LF22_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF22::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF22_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF22::t_Spare* _p = (Telegram_L2LF22::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF22_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF22::t_Spare* _p = new Telegram_L2LF22::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF22_mt__Spare_destructor_fn(void* _v)
{
  Telegram_L2LF22::t_Spare* _p = (Telegram_L2LF22::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF22::t_Spare& _s)
{
  Telegram_L2LF22::t_Spare* _p = new Telegram_L2LF22::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF22_mt__Spare,
               _0RL_Telegram__L2LF22_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF22_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF22::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF22_mt__Spare,
               _0RL_Telegram__L2LF22_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF22_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF22::t_Spare*& _sp)
{
  return _a >>= (const Telegram_L2LF22::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF22::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF22_mt__Spare,
                    _0RL_Telegram__L2LF22_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__L2LF22_mt__Spare_marshal_fn,
                    _0RL_Telegram__L2LF22_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF22::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF23_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF23::t_CreateTime* _p = (Telegram_L2LF23::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF23_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF23::t_CreateTime* _p = new Telegram_L2LF23::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF23_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_L2LF23::t_CreateTime* _p = (Telegram_L2LF23::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF23::t_CreateTime& _s)
{
  Telegram_L2LF23::t_CreateTime* _p = new Telegram_L2LF23::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF23_mt__CreateTime,
               _0RL_Telegram__L2LF23_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF23_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF23::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF23_mt__CreateTime,
               _0RL_Telegram__L2LF23_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF23_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF23::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_L2LF23::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF23::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF23_mt__CreateTime,
                    _0RL_Telegram__L2LF23_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__L2LF23_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__L2LF23_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF23::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF23_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF23::t_Spare* _p = (Telegram_L2LF23::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF23_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF23::t_Spare* _p = new Telegram_L2LF23::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF23_mt__Spare_destructor_fn(void* _v)
{
  Telegram_L2LF23::t_Spare* _p = (Telegram_L2LF23::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF23::t_Spare& _s)
{
  Telegram_L2LF23::t_Spare* _p = new Telegram_L2LF23::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF23_mt__Spare,
               _0RL_Telegram__L2LF23_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF23_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF23::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF23_mt__Spare,
               _0RL_Telegram__L2LF23_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF23_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF23::t_Spare*& _sp)
{
  return _a >>= (const Telegram_L2LF23::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF23::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF23_mt__Spare,
                    _0RL_Telegram__L2LF23_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__L2LF23_mt__Spare_marshal_fn,
                    _0RL_Telegram__L2LF23_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF23::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF25_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF25::t_CreateTime* _p = (Telegram_L2LF25::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF25_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF25::t_CreateTime* _p = new Telegram_L2LF25::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF25_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_L2LF25::t_CreateTime* _p = (Telegram_L2LF25::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF25::t_CreateTime& _s)
{
  Telegram_L2LF25::t_CreateTime* _p = new Telegram_L2LF25::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF25_mt__CreateTime,
               _0RL_Telegram__L2LF25_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF25_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF25::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF25_mt__CreateTime,
               _0RL_Telegram__L2LF25_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF25_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF25::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_L2LF25::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF25::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF25_mt__CreateTime,
                    _0RL_Telegram__L2LF25_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__L2LF25_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__L2LF25_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF25::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF25_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF25::t_Spare* _p = (Telegram_L2LF25::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF25_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF25::t_Spare* _p = new Telegram_L2LF25::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF25_mt__Spare_destructor_fn(void* _v)
{
  Telegram_L2LF25::t_Spare* _p = (Telegram_L2LF25::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF25::t_Spare& _s)
{
  Telegram_L2LF25::t_Spare* _p = new Telegram_L2LF25::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF25_mt__Spare,
               _0RL_Telegram__L2LF25_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF25_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF25::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF25_mt__Spare,
               _0RL_Telegram__L2LF25_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF25_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF25::t_Spare*& _sp)
{
  return _a >>= (const Telegram_L2LF25::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF25::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF25_mt__Spare,
                    _0RL_Telegram__L2LF25_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__L2LF25_mt__Spare_marshal_fn,
                    _0RL_Telegram__L2LF25_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF25::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF30_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF30::t_CreateTime* _p = (Telegram_L2LF30::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF30_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF30::t_CreateTime* _p = new Telegram_L2LF30::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF30_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_L2LF30::t_CreateTime* _p = (Telegram_L2LF30::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF30::t_CreateTime& _s)
{
  Telegram_L2LF30::t_CreateTime* _p = new Telegram_L2LF30::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF30_mt__CreateTime,
               _0RL_Telegram__L2LF30_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF30_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF30::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF30_mt__CreateTime,
               _0RL_Telegram__L2LF30_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF30_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF30::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_L2LF30::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF30::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF30_mt__CreateTime,
                    _0RL_Telegram__L2LF30_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__L2LF30_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__L2LF30_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF30::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF30_mt__Enabled_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF30::t_Enabled* _p = (Telegram_L2LF30::t_Enabled*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF30_mt__Enabled_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF30::t_Enabled* _p = new Telegram_L2LF30::t_Enabled;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF30_mt__Enabled_destructor_fn(void* _v)
{
  Telegram_L2LF30::t_Enabled* _p = (Telegram_L2LF30::t_Enabled*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF30::t_Enabled& _s)
{
  Telegram_L2LF30::t_Enabled* _p = new Telegram_L2LF30::t_Enabled(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF30_mt__Enabled,
               _0RL_Telegram__L2LF30_mt__Enabled_marshal_fn,
               _0RL_Telegram__L2LF30_mt__Enabled_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF30::t_Enabled* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF30_mt__Enabled,
               _0RL_Telegram__L2LF30_mt__Enabled_marshal_fn,
               _0RL_Telegram__L2LF30_mt__Enabled_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF30::t_Enabled*& _sp)
{
  return _a >>= (const Telegram_L2LF30::t_Enabled*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF30::t_Enabled*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF30_mt__Enabled,
                    _0RL_Telegram__L2LF30_mt__Enabled_unmarshal_fn,
                    _0RL_Telegram__L2LF30_mt__Enabled_marshal_fn,
                    _0RL_Telegram__L2LF30_mt__Enabled_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF30::t_Enabled*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF30_mt__RemDurStep_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF30::t_RemDurStep* _p = (Telegram_L2LF30::t_RemDurStep*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF30_mt__RemDurStep_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF30::t_RemDurStep* _p = new Telegram_L2LF30::t_RemDurStep;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF30_mt__RemDurStep_destructor_fn(void* _v)
{
  Telegram_L2LF30::t_RemDurStep* _p = (Telegram_L2LF30::t_RemDurStep*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF30::t_RemDurStep& _s)
{
  Telegram_L2LF30::t_RemDurStep* _p = new Telegram_L2LF30::t_RemDurStep(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF30_mt__RemDurStep,
               _0RL_Telegram__L2LF30_mt__RemDurStep_marshal_fn,
               _0RL_Telegram__L2LF30_mt__RemDurStep_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF30::t_RemDurStep* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF30_mt__RemDurStep,
               _0RL_Telegram__L2LF30_mt__RemDurStep_marshal_fn,
               _0RL_Telegram__L2LF30_mt__RemDurStep_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF30::t_RemDurStep*& _sp)
{
  return _a >>= (const Telegram_L2LF30::t_RemDurStep*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF30::t_RemDurStep*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF30_mt__RemDurStep,
                    _0RL_Telegram__L2LF30_mt__RemDurStep_unmarshal_fn,
                    _0RL_Telegram__L2LF30_mt__RemDurStep_marshal_fn,
                    _0RL_Telegram__L2LF30_mt__RemDurStep_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF30::t_RemDurStep*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF30_mt__ElecEnergyStep_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF30::t_ElecEnergyStep* _p = (Telegram_L2LF30::t_ElecEnergyStep*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF30_mt__ElecEnergyStep_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF30::t_ElecEnergyStep* _p = new Telegram_L2LF30::t_ElecEnergyStep;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF30_mt__ElecEnergyStep_destructor_fn(void* _v)
{
  Telegram_L2LF30::t_ElecEnergyStep* _p = (Telegram_L2LF30::t_ElecEnergyStep*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF30::t_ElecEnergyStep& _s)
{
  Telegram_L2LF30::t_ElecEnergyStep* _p = new Telegram_L2LF30::t_ElecEnergyStep(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF30_mt__ElecEnergyStep,
               _0RL_Telegram__L2LF30_mt__ElecEnergyStep_marshal_fn,
               _0RL_Telegram__L2LF30_mt__ElecEnergyStep_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF30::t_ElecEnergyStep* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF30_mt__ElecEnergyStep,
               _0RL_Telegram__L2LF30_mt__ElecEnergyStep_marshal_fn,
               _0RL_Telegram__L2LF30_mt__ElecEnergyStep_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF30::t_ElecEnergyStep*& _sp)
{
  return _a >>= (const Telegram_L2LF30::t_ElecEnergyStep*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF30::t_ElecEnergyStep*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF30_mt__ElecEnergyStep,
                    _0RL_Telegram__L2LF30_mt__ElecEnergyStep_unmarshal_fn,
                    _0RL_Telegram__L2LF30_mt__ElecEnergyStep_marshal_fn,
                    _0RL_Telegram__L2LF30_mt__ElecEnergyStep_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF30::t_ElecEnergyStep*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF30_mt__TempEndStep_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF30::t_TempEndStep* _p = (Telegram_L2LF30::t_TempEndStep*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF30_mt__TempEndStep_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF30::t_TempEndStep* _p = new Telegram_L2LF30::t_TempEndStep;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF30_mt__TempEndStep_destructor_fn(void* _v)
{
  Telegram_L2LF30::t_TempEndStep* _p = (Telegram_L2LF30::t_TempEndStep*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF30::t_TempEndStep& _s)
{
  Telegram_L2LF30::t_TempEndStep* _p = new Telegram_L2LF30::t_TempEndStep(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF30_mt__TempEndStep,
               _0RL_Telegram__L2LF30_mt__TempEndStep_marshal_fn,
               _0RL_Telegram__L2LF30_mt__TempEndStep_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF30::t_TempEndStep* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF30_mt__TempEndStep,
               _0RL_Telegram__L2LF30_mt__TempEndStep_marshal_fn,
               _0RL_Telegram__L2LF30_mt__TempEndStep_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF30::t_TempEndStep*& _sp)
{
  return _a >>= (const Telegram_L2LF30::t_TempEndStep*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF30::t_TempEndStep*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF30_mt__TempEndStep,
                    _0RL_Telegram__L2LF30_mt__TempEndStep_unmarshal_fn,
                    _0RL_Telegram__L2LF30_mt__TempEndStep_marshal_fn,
                    _0RL_Telegram__L2LF30_mt__TempEndStep_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF30::t_TempEndStep*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF30_mt__AimVoltTap_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF30::t_AimVoltTap* _p = (Telegram_L2LF30::t_AimVoltTap*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF30_mt__AimVoltTap_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF30::t_AimVoltTap* _p = new Telegram_L2LF30::t_AimVoltTap;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF30_mt__AimVoltTap_destructor_fn(void* _v)
{
  Telegram_L2LF30::t_AimVoltTap* _p = (Telegram_L2LF30::t_AimVoltTap*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF30::t_AimVoltTap& _s)
{
  Telegram_L2LF30::t_AimVoltTap* _p = new Telegram_L2LF30::t_AimVoltTap(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF30_mt__AimVoltTap,
               _0RL_Telegram__L2LF30_mt__AimVoltTap_marshal_fn,
               _0RL_Telegram__L2LF30_mt__AimVoltTap_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF30::t_AimVoltTap* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF30_mt__AimVoltTap,
               _0RL_Telegram__L2LF30_mt__AimVoltTap_marshal_fn,
               _0RL_Telegram__L2LF30_mt__AimVoltTap_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF30::t_AimVoltTap*& _sp)
{
  return _a >>= (const Telegram_L2LF30::t_AimVoltTap*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF30::t_AimVoltTap*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF30_mt__AimVoltTap,
                    _0RL_Telegram__L2LF30_mt__AimVoltTap_unmarshal_fn,
                    _0RL_Telegram__L2LF30_mt__AimVoltTap_marshal_fn,
                    _0RL_Telegram__L2LF30_mt__AimVoltTap_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF30::t_AimVoltTap*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF30_mt__AimCurveNo_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF30::t_AimCurveNo* _p = (Telegram_L2LF30::t_AimCurveNo*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF30_mt__AimCurveNo_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF30::t_AimCurveNo* _p = new Telegram_L2LF30::t_AimCurveNo;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF30_mt__AimCurveNo_destructor_fn(void* _v)
{
  Telegram_L2LF30::t_AimCurveNo* _p = (Telegram_L2LF30::t_AimCurveNo*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF30::t_AimCurveNo& _s)
{
  Telegram_L2LF30::t_AimCurveNo* _p = new Telegram_L2LF30::t_AimCurveNo(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF30_mt__AimCurveNo,
               _0RL_Telegram__L2LF30_mt__AimCurveNo_marshal_fn,
               _0RL_Telegram__L2LF30_mt__AimCurveNo_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF30::t_AimCurveNo* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF30_mt__AimCurveNo,
               _0RL_Telegram__L2LF30_mt__AimCurveNo_marshal_fn,
               _0RL_Telegram__L2LF30_mt__AimCurveNo_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF30::t_AimCurveNo*& _sp)
{
  return _a >>= (const Telegram_L2LF30::t_AimCurveNo*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF30::t_AimCurveNo*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF30_mt__AimCurveNo,
                    _0RL_Telegram__L2LF30_mt__AimCurveNo_unmarshal_fn,
                    _0RL_Telegram__L2LF30_mt__AimCurveNo_marshal_fn,
                    _0RL_Telegram__L2LF30_mt__AimCurveNo_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF30::t_AimCurveNo*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF30_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF30::t_Spare* _p = (Telegram_L2LF30::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF30_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF30::t_Spare* _p = new Telegram_L2LF30::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF30_mt__Spare_destructor_fn(void* _v)
{
  Telegram_L2LF30::t_Spare* _p = (Telegram_L2LF30::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF30::t_Spare& _s)
{
  Telegram_L2LF30::t_Spare* _p = new Telegram_L2LF30::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF30_mt__Spare,
               _0RL_Telegram__L2LF30_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF30_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF30::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF30_mt__Spare,
               _0RL_Telegram__L2LF30_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF30_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF30::t_Spare*& _sp)
{
  return _a >>= (const Telegram_L2LF30::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF30::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF30_mt__Spare,
                    _0RL_Telegram__L2LF30_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__L2LF30_mt__Spare_marshal_fn,
                    _0RL_Telegram__L2LF30_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF30::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF30__ELEC__PATT_msENTRY_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF30_ELEC_PATT::sENTRY* _p = (Telegram_L2LF30_ELEC_PATT::sENTRY*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF30__ELEC__PATT_msENTRY_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF30_ELEC_PATT::sENTRY* _p = new Telegram_L2LF30_ELEC_PATT::sENTRY;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF30__ELEC__PATT_msENTRY_destructor_fn(void* _v)
{
  Telegram_L2LF30_ELEC_PATT::sENTRY* _p = (Telegram_L2LF30_ELEC_PATT::sENTRY*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF30_ELEC_PATT::sENTRY& _s)
{
  Telegram_L2LF30_ELEC_PATT::sENTRY* _p = new Telegram_L2LF30_ELEC_PATT::sENTRY(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF30__ELEC__PATT_msENTRY,
               _0RL_Telegram__L2LF30__ELEC__PATT_msENTRY_marshal_fn,
               _0RL_Telegram__L2LF30__ELEC__PATT_msENTRY_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF30_ELEC_PATT::sENTRY* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF30__ELEC__PATT_msENTRY,
               _0RL_Telegram__L2LF30__ELEC__PATT_msENTRY_marshal_fn,
               _0RL_Telegram__L2LF30__ELEC__PATT_msENTRY_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF30_ELEC_PATT::sENTRY*& _sp)
{
  return _a >>= (const Telegram_L2LF30_ELEC_PATT::sENTRY*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF30_ELEC_PATT::sENTRY*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF30__ELEC__PATT_msENTRY,
                    _0RL_Telegram__L2LF30__ELEC__PATT_msENTRY_unmarshal_fn,
                    _0RL_Telegram__L2LF30__ELEC__PATT_msENTRY_marshal_fn,
                    _0RL_Telegram__L2LF30__ELEC__PATT_msENTRY_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF30_ELEC_PATT::sENTRY*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF30__ELEC__PATT_mt__ENTRY_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF30_ELEC_PATT::t_ENTRY* _p = (Telegram_L2LF30_ELEC_PATT::t_ENTRY*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF30__ELEC__PATT_mt__ENTRY_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF30_ELEC_PATT::t_ENTRY* _p = new Telegram_L2LF30_ELEC_PATT::t_ENTRY;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF30__ELEC__PATT_mt__ENTRY_destructor_fn(void* _v)
{
  Telegram_L2LF30_ELEC_PATT::t_ENTRY* _p = (Telegram_L2LF30_ELEC_PATT::t_ENTRY*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF30_ELEC_PATT::t_ENTRY& _s)
{
  Telegram_L2LF30_ELEC_PATT::t_ENTRY* _p = new Telegram_L2LF30_ELEC_PATT::t_ENTRY(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF30__ELEC__PATT_mt__ENTRY,
               _0RL_Telegram__L2LF30__ELEC__PATT_mt__ENTRY_marshal_fn,
               _0RL_Telegram__L2LF30__ELEC__PATT_mt__ENTRY_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF30_ELEC_PATT::t_ENTRY* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF30__ELEC__PATT_mt__ENTRY,
               _0RL_Telegram__L2LF30__ELEC__PATT_mt__ENTRY_marshal_fn,
               _0RL_Telegram__L2LF30__ELEC__PATT_mt__ENTRY_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF30_ELEC_PATT::t_ENTRY*& _sp)
{
  return _a >>= (const Telegram_L2LF30_ELEC_PATT::t_ENTRY*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF30_ELEC_PATT::t_ENTRY*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF30__ELEC__PATT_mt__ENTRY,
                    _0RL_Telegram__L2LF30__ELEC__PATT_mt__ENTRY_unmarshal_fn,
                    _0RL_Telegram__L2LF30__ELEC__PATT_mt__ENTRY_marshal_fn,
                    _0RL_Telegram__L2LF30__ELEC__PATT_mt__ENTRY_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF30_ELEC_PATT::t_ENTRY*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF31_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF31::t_CreateTime* _p = (Telegram_L2LF31::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF31_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF31::t_CreateTime* _p = new Telegram_L2LF31::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF31_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_L2LF31::t_CreateTime* _p = (Telegram_L2LF31::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF31::t_CreateTime& _s)
{
  Telegram_L2LF31::t_CreateTime* _p = new Telegram_L2LF31::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF31_mt__CreateTime,
               _0RL_Telegram__L2LF31_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF31_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF31::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF31_mt__CreateTime,
               _0RL_Telegram__L2LF31_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF31_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF31::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_L2LF31::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF31::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF31_mt__CreateTime,
                    _0RL_Telegram__L2LF31_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__L2LF31_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__L2LF31_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF31::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF31_mt__PhaseNo_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF31::t_PhaseNo* _p = (Telegram_L2LF31::t_PhaseNo*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF31_mt__PhaseNo_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF31::t_PhaseNo* _p = new Telegram_L2LF31::t_PhaseNo;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF31_mt__PhaseNo_destructor_fn(void* _v)
{
  Telegram_L2LF31::t_PhaseNo* _p = (Telegram_L2LF31::t_PhaseNo*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF31::t_PhaseNo& _s)
{
  Telegram_L2LF31::t_PhaseNo* _p = new Telegram_L2LF31::t_PhaseNo(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF31_mt__PhaseNo,
               _0RL_Telegram__L2LF31_mt__PhaseNo_marshal_fn,
               _0RL_Telegram__L2LF31_mt__PhaseNo_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF31::t_PhaseNo* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF31_mt__PhaseNo,
               _0RL_Telegram__L2LF31_mt__PhaseNo_marshal_fn,
               _0RL_Telegram__L2LF31_mt__PhaseNo_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF31::t_PhaseNo*& _sp)
{
  return _a >>= (const Telegram_L2LF31::t_PhaseNo*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF31::t_PhaseNo*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF31_mt__PhaseNo,
                    _0RL_Telegram__L2LF31_mt__PhaseNo_unmarshal_fn,
                    _0RL_Telegram__L2LF31_mt__PhaseNo_marshal_fn,
                    _0RL_Telegram__L2LF31_mt__PhaseNo_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF31::t_PhaseNo*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF31_mt__Enabled_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF31::t_Enabled* _p = (Telegram_L2LF31::t_Enabled*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF31_mt__Enabled_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF31::t_Enabled* _p = new Telegram_L2LF31::t_Enabled;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF31_mt__Enabled_destructor_fn(void* _v)
{
  Telegram_L2LF31::t_Enabled* _p = (Telegram_L2LF31::t_Enabled*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF31::t_Enabled& _s)
{
  Telegram_L2LF31::t_Enabled* _p = new Telegram_L2LF31::t_Enabled(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF31_mt__Enabled,
               _0RL_Telegram__L2LF31_mt__Enabled_marshal_fn,
               _0RL_Telegram__L2LF31_mt__Enabled_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF31::t_Enabled* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF31_mt__Enabled,
               _0RL_Telegram__L2LF31_mt__Enabled_marshal_fn,
               _0RL_Telegram__L2LF31_mt__Enabled_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF31::t_Enabled*& _sp)
{
  return _a >>= (const Telegram_L2LF31::t_Enabled*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF31::t_Enabled*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF31_mt__Enabled,
                    _0RL_Telegram__L2LF31_mt__Enabled_unmarshal_fn,
                    _0RL_Telegram__L2LF31_mt__Enabled_marshal_fn,
                    _0RL_Telegram__L2LF31_mt__Enabled_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF31::t_Enabled*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF31_mt__Duration_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF31::t_Duration* _p = (Telegram_L2LF31::t_Duration*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF31_mt__Duration_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF31::t_Duration* _p = new Telegram_L2LF31::t_Duration;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF31_mt__Duration_destructor_fn(void* _v)
{
  Telegram_L2LF31::t_Duration* _p = (Telegram_L2LF31::t_Duration*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF31::t_Duration& _s)
{
  Telegram_L2LF31::t_Duration* _p = new Telegram_L2LF31::t_Duration(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF31_mt__Duration,
               _0RL_Telegram__L2LF31_mt__Duration_marshal_fn,
               _0RL_Telegram__L2LF31_mt__Duration_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF31::t_Duration* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF31_mt__Duration,
               _0RL_Telegram__L2LF31_mt__Duration_marshal_fn,
               _0RL_Telegram__L2LF31_mt__Duration_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF31::t_Duration*& _sp)
{
  return _a >>= (const Telegram_L2LF31::t_Duration*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF31::t_Duration*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF31_mt__Duration,
                    _0RL_Telegram__L2LF31_mt__Duration_unmarshal_fn,
                    _0RL_Telegram__L2LF31_mt__Duration_marshal_fn,
                    _0RL_Telegram__L2LF31_mt__Duration_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF31::t_Duration*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF31_mt__StirrInt_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF31::t_StirrInt* _p = (Telegram_L2LF31::t_StirrInt*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF31_mt__StirrInt_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF31::t_StirrInt* _p = new Telegram_L2LF31::t_StirrInt;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF31_mt__StirrInt_destructor_fn(void* _v)
{
  Telegram_L2LF31::t_StirrInt* _p = (Telegram_L2LF31::t_StirrInt*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF31::t_StirrInt& _s)
{
  Telegram_L2LF31::t_StirrInt* _p = new Telegram_L2LF31::t_StirrInt(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF31_mt__StirrInt,
               _0RL_Telegram__L2LF31_mt__StirrInt_marshal_fn,
               _0RL_Telegram__L2LF31_mt__StirrInt_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF31::t_StirrInt* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF31_mt__StirrInt,
               _0RL_Telegram__L2LF31_mt__StirrInt_marshal_fn,
               _0RL_Telegram__L2LF31_mt__StirrInt_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF31::t_StirrInt*& _sp)
{
  return _a >>= (const Telegram_L2LF31::t_StirrInt*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF31::t_StirrInt*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF31_mt__StirrInt,
                    _0RL_Telegram__L2LF31_mt__StirrInt_unmarshal_fn,
                    _0RL_Telegram__L2LF31_mt__StirrInt_marshal_fn,
                    _0RL_Telegram__L2LF31_mt__StirrInt_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF31::t_StirrInt*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF31_mt__StirrGasFlow_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF31::t_StirrGasFlow* _p = (Telegram_L2LF31::t_StirrGasFlow*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF31_mt__StirrGasFlow_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF31::t_StirrGasFlow* _p = new Telegram_L2LF31::t_StirrGasFlow;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF31_mt__StirrGasFlow_destructor_fn(void* _v)
{
  Telegram_L2LF31::t_StirrGasFlow* _p = (Telegram_L2LF31::t_StirrGasFlow*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF31::t_StirrGasFlow& _s)
{
  Telegram_L2LF31::t_StirrGasFlow* _p = new Telegram_L2LF31::t_StirrGasFlow(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF31_mt__StirrGasFlow,
               _0RL_Telegram__L2LF31_mt__StirrGasFlow_marshal_fn,
               _0RL_Telegram__L2LF31_mt__StirrGasFlow_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF31::t_StirrGasFlow* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF31_mt__StirrGasFlow,
               _0RL_Telegram__L2LF31_mt__StirrGasFlow_marshal_fn,
               _0RL_Telegram__L2LF31_mt__StirrGasFlow_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF31::t_StirrGasFlow*& _sp)
{
  return _a >>= (const Telegram_L2LF31::t_StirrGasFlow*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF31::t_StirrGasFlow*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF31_mt__StirrGasFlow,
                    _0RL_Telegram__L2LF31_mt__StirrGasFlow_unmarshal_fn,
                    _0RL_Telegram__L2LF31_mt__StirrGasFlow_marshal_fn,
                    _0RL_Telegram__L2LF31_mt__StirrGasFlow_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF31::t_StirrGasFlow*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF31_mt__StirrGasType_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF31::t_StirrGasType* _p = (Telegram_L2LF31::t_StirrGasType*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF31_mt__StirrGasType_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF31::t_StirrGasType* _p = new Telegram_L2LF31::t_StirrGasType;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF31_mt__StirrGasType_destructor_fn(void* _v)
{
  Telegram_L2LF31::t_StirrGasType* _p = (Telegram_L2LF31::t_StirrGasType*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF31::t_StirrGasType& _s)
{
  Telegram_L2LF31::t_StirrGasType* _p = new Telegram_L2LF31::t_StirrGasType(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF31_mt__StirrGasType,
               _0RL_Telegram__L2LF31_mt__StirrGasType_marshal_fn,
               _0RL_Telegram__L2LF31_mt__StirrGasType_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF31::t_StirrGasType* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF31_mt__StirrGasType,
               _0RL_Telegram__L2LF31_mt__StirrGasType_marshal_fn,
               _0RL_Telegram__L2LF31_mt__StirrGasType_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF31::t_StirrGasType*& _sp)
{
  return _a >>= (const Telegram_L2LF31::t_StirrGasType*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF31::t_StirrGasType*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF31_mt__StirrGasType,
                    _0RL_Telegram__L2LF31_mt__StirrGasType_unmarshal_fn,
                    _0RL_Telegram__L2LF31_mt__StirrGasType_marshal_fn,
                    _0RL_Telegram__L2LF31_mt__StirrGasType_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF31::t_StirrGasType*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF31_mt__StepPriority_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF31::t_StepPriority* _p = (Telegram_L2LF31::t_StepPriority*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF31_mt__StepPriority_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF31::t_StepPriority* _p = new Telegram_L2LF31::t_StepPriority;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF31_mt__StepPriority_destructor_fn(void* _v)
{
  Telegram_L2LF31::t_StepPriority* _p = (Telegram_L2LF31::t_StepPriority*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF31::t_StepPriority& _s)
{
  Telegram_L2LF31::t_StepPriority* _p = new Telegram_L2LF31::t_StepPriority(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF31_mt__StepPriority,
               _0RL_Telegram__L2LF31_mt__StepPriority_marshal_fn,
               _0RL_Telegram__L2LF31_mt__StepPriority_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF31::t_StepPriority* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF31_mt__StepPriority,
               _0RL_Telegram__L2LF31_mt__StepPriority_marshal_fn,
               _0RL_Telegram__L2LF31_mt__StepPriority_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF31::t_StepPriority*& _sp)
{
  return _a >>= (const Telegram_L2LF31::t_StepPriority*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF31::t_StepPriority*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF31_mt__StepPriority,
                    _0RL_Telegram__L2LF31_mt__StepPriority_unmarshal_fn,
                    _0RL_Telegram__L2LF31_mt__StepPriority_marshal_fn,
                    _0RL_Telegram__L2LF31_mt__StepPriority_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF31::t_StepPriority*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF31_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF31::t_Spare* _p = (Telegram_L2LF31::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF31_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF31::t_Spare* _p = new Telegram_L2LF31::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF31_mt__Spare_destructor_fn(void* _v)
{
  Telegram_L2LF31::t_Spare* _p = (Telegram_L2LF31::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF31::t_Spare& _s)
{
  Telegram_L2LF31::t_Spare* _p = new Telegram_L2LF31::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF31_mt__Spare,
               _0RL_Telegram__L2LF31_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF31_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF31::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF31_mt__Spare,
               _0RL_Telegram__L2LF31_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF31_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF31::t_Spare*& _sp)
{
  return _a >>= (const Telegram_L2LF31::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF31::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF31_mt__Spare,
                    _0RL_Telegram__L2LF31_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__L2LF31_mt__Spare_marshal_fn,
                    _0RL_Telegram__L2LF31_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF31::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF31__STIRR__PATT_msENTRY_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF31_STIRR_PATT::sENTRY* _p = (Telegram_L2LF31_STIRR_PATT::sENTRY*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF31__STIRR__PATT_msENTRY_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF31_STIRR_PATT::sENTRY* _p = new Telegram_L2LF31_STIRR_PATT::sENTRY;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF31__STIRR__PATT_msENTRY_destructor_fn(void* _v)
{
  Telegram_L2LF31_STIRR_PATT::sENTRY* _p = (Telegram_L2LF31_STIRR_PATT::sENTRY*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF31_STIRR_PATT::sENTRY& _s)
{
  Telegram_L2LF31_STIRR_PATT::sENTRY* _p = new Telegram_L2LF31_STIRR_PATT::sENTRY(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF31__STIRR__PATT_msENTRY,
               _0RL_Telegram__L2LF31__STIRR__PATT_msENTRY_marshal_fn,
               _0RL_Telegram__L2LF31__STIRR__PATT_msENTRY_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF31_STIRR_PATT::sENTRY* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF31__STIRR__PATT_msENTRY,
               _0RL_Telegram__L2LF31__STIRR__PATT_msENTRY_marshal_fn,
               _0RL_Telegram__L2LF31__STIRR__PATT_msENTRY_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF31_STIRR_PATT::sENTRY*& _sp)
{
  return _a >>= (const Telegram_L2LF31_STIRR_PATT::sENTRY*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF31_STIRR_PATT::sENTRY*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF31__STIRR__PATT_msENTRY,
                    _0RL_Telegram__L2LF31__STIRR__PATT_msENTRY_unmarshal_fn,
                    _0RL_Telegram__L2LF31__STIRR__PATT_msENTRY_marshal_fn,
                    _0RL_Telegram__L2LF31__STIRR__PATT_msENTRY_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF31_STIRR_PATT::sENTRY*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF31__STIRR__PATT_mt__ENTRY_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF31_STIRR_PATT::t_ENTRY* _p = (Telegram_L2LF31_STIRR_PATT::t_ENTRY*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF31__STIRR__PATT_mt__ENTRY_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF31_STIRR_PATT::t_ENTRY* _p = new Telegram_L2LF31_STIRR_PATT::t_ENTRY;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF31__STIRR__PATT_mt__ENTRY_destructor_fn(void* _v)
{
  Telegram_L2LF31_STIRR_PATT::t_ENTRY* _p = (Telegram_L2LF31_STIRR_PATT::t_ENTRY*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF31_STIRR_PATT::t_ENTRY& _s)
{
  Telegram_L2LF31_STIRR_PATT::t_ENTRY* _p = new Telegram_L2LF31_STIRR_PATT::t_ENTRY(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF31__STIRR__PATT_mt__ENTRY,
               _0RL_Telegram__L2LF31__STIRR__PATT_mt__ENTRY_marshal_fn,
               _0RL_Telegram__L2LF31__STIRR__PATT_mt__ENTRY_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF31_STIRR_PATT::t_ENTRY* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF31__STIRR__PATT_mt__ENTRY,
               _0RL_Telegram__L2LF31__STIRR__PATT_mt__ENTRY_marshal_fn,
               _0RL_Telegram__L2LF31__STIRR__PATT_mt__ENTRY_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF31_STIRR_PATT::t_ENTRY*& _sp)
{
  return _a >>= (const Telegram_L2LF31_STIRR_PATT::t_ENTRY*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF31_STIRR_PATT::t_ENTRY*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF31__STIRR__PATT_mt__ENTRY,
                    _0RL_Telegram__L2LF31__STIRR__PATT_mt__ENTRY_unmarshal_fn,
                    _0RL_Telegram__L2LF31__STIRR__PATT_mt__ENTRY_marshal_fn,
                    _0RL_Telegram__L2LF31__STIRR__PATT_mt__ENTRY_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF31_STIRR_PATT::t_ENTRY*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF40_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF40::t_CreateTime* _p = (Telegram_L2LF40::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF40_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF40::t_CreateTime* _p = new Telegram_L2LF40::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF40_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_L2LF40::t_CreateTime* _p = (Telegram_L2LF40::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF40::t_CreateTime& _s)
{
  Telegram_L2LF40::t_CreateTime* _p = new Telegram_L2LF40::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF40_mt__CreateTime,
               _0RL_Telegram__L2LF40_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF40_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF40::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF40_mt__CreateTime,
               _0RL_Telegram__L2LF40_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF40_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF40::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_L2LF40::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF40::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF40_mt__CreateTime,
                    _0RL_Telegram__L2LF40_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__L2LF40_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__L2LF40_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF40::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF40_mt__ParamName_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF40::t_ParamName* _p = (Telegram_L2LF40::t_ParamName*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF40_mt__ParamName_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF40::t_ParamName* _p = new Telegram_L2LF40::t_ParamName;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF40_mt__ParamName_destructor_fn(void* _v)
{
  Telegram_L2LF40::t_ParamName* _p = (Telegram_L2LF40::t_ParamName*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF40::t_ParamName& _s)
{
  Telegram_L2LF40::t_ParamName* _p = new Telegram_L2LF40::t_ParamName(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF40_mt__ParamName,
               _0RL_Telegram__L2LF40_mt__ParamName_marshal_fn,
               _0RL_Telegram__L2LF40_mt__ParamName_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF40::t_ParamName* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF40_mt__ParamName,
               _0RL_Telegram__L2LF40_mt__ParamName_marshal_fn,
               _0RL_Telegram__L2LF40_mt__ParamName_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF40::t_ParamName*& _sp)
{
  return _a >>= (const Telegram_L2LF40::t_ParamName*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF40::t_ParamName*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF40_mt__ParamName,
                    _0RL_Telegram__L2LF40_mt__ParamName_unmarshal_fn,
                    _0RL_Telegram__L2LF40_mt__ParamName_marshal_fn,
                    _0RL_Telegram__L2LF40_mt__ParamName_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF40::t_ParamName*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF40_mt__ParamValue_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF40::t_ParamValue* _p = (Telegram_L2LF40::t_ParamValue*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF40_mt__ParamValue_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF40::t_ParamValue* _p = new Telegram_L2LF40::t_ParamValue;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF40_mt__ParamValue_destructor_fn(void* _v)
{
  Telegram_L2LF40::t_ParamValue* _p = (Telegram_L2LF40::t_ParamValue*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF40::t_ParamValue& _s)
{
  Telegram_L2LF40::t_ParamValue* _p = new Telegram_L2LF40::t_ParamValue(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF40_mt__ParamValue,
               _0RL_Telegram__L2LF40_mt__ParamValue_marshal_fn,
               _0RL_Telegram__L2LF40_mt__ParamValue_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF40::t_ParamValue* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF40_mt__ParamValue,
               _0RL_Telegram__L2LF40_mt__ParamValue_marshal_fn,
               _0RL_Telegram__L2LF40_mt__ParamValue_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF40::t_ParamValue*& _sp)
{
  return _a >>= (const Telegram_L2LF40::t_ParamValue*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF40::t_ParamValue*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF40_mt__ParamValue,
                    _0RL_Telegram__L2LF40_mt__ParamValue_unmarshal_fn,
                    _0RL_Telegram__L2LF40_mt__ParamValue_marshal_fn,
                    _0RL_Telegram__L2LF40_mt__ParamValue_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF40::t_ParamValue*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF40_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF40::t_Spare* _p = (Telegram_L2LF40::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF40_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF40::t_Spare* _p = new Telegram_L2LF40::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF40_mt__Spare_destructor_fn(void* _v)
{
  Telegram_L2LF40::t_Spare* _p = (Telegram_L2LF40::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF40::t_Spare& _s)
{
  Telegram_L2LF40::t_Spare* _p = new Telegram_L2LF40::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF40_mt__Spare,
               _0RL_Telegram__L2LF40_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF40_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF40::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF40_mt__Spare,
               _0RL_Telegram__L2LF40_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF40_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF40::t_Spare*& _sp)
{
  return _a >>= (const Telegram_L2LF40::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF40::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF40_mt__Spare,
                    _0RL_Telegram__L2LF40_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__L2LF40_mt__Spare_marshal_fn,
                    _0RL_Telegram__L2LF40_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF40::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF70_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF70::t_CreateTime* _p = (Telegram_L2LF70::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF70_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF70::t_CreateTime* _p = new Telegram_L2LF70::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF70_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_L2LF70::t_CreateTime* _p = (Telegram_L2LF70::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF70::t_CreateTime& _s)
{
  Telegram_L2LF70::t_CreateTime* _p = new Telegram_L2LF70::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF70_mt__CreateTime,
               _0RL_Telegram__L2LF70_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF70_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF70::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF70_mt__CreateTime,
               _0RL_Telegram__L2LF70_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF70_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF70::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_L2LF70::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF70::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF70_mt__CreateTime,
                    _0RL_Telegram__L2LF70_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__L2LF70_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__L2LF70_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF70::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF70_mt__MatCode_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF70::t_MatCode* _p = (Telegram_L2LF70::t_MatCode*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF70_mt__MatCode_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF70::t_MatCode* _p = new Telegram_L2LF70::t_MatCode;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF70_mt__MatCode_destructor_fn(void* _v)
{
  Telegram_L2LF70::t_MatCode* _p = (Telegram_L2LF70::t_MatCode*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF70::t_MatCode& _s)
{
  Telegram_L2LF70::t_MatCode* _p = new Telegram_L2LF70::t_MatCode(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF70_mt__MatCode,
               _0RL_Telegram__L2LF70_mt__MatCode_marshal_fn,
               _0RL_Telegram__L2LF70_mt__MatCode_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF70::t_MatCode* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF70_mt__MatCode,
               _0RL_Telegram__L2LF70_mt__MatCode_marshal_fn,
               _0RL_Telegram__L2LF70_mt__MatCode_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF70::t_MatCode*& _sp)
{
  return _a >>= (const Telegram_L2LF70::t_MatCode*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF70::t_MatCode*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF70_mt__MatCode,
                    _0RL_Telegram__L2LF70_mt__MatCode_unmarshal_fn,
                    _0RL_Telegram__L2LF70_mt__MatCode_marshal_fn,
                    _0RL_Telegram__L2LF70_mt__MatCode_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF70::t_MatCode*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF70_mt__MatWeight_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF70::t_MatWeight* _p = (Telegram_L2LF70::t_MatWeight*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF70_mt__MatWeight_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF70::t_MatWeight* _p = new Telegram_L2LF70::t_MatWeight;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF70_mt__MatWeight_destructor_fn(void* _v)
{
  Telegram_L2LF70::t_MatWeight* _p = (Telegram_L2LF70::t_MatWeight*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF70::t_MatWeight& _s)
{
  Telegram_L2LF70::t_MatWeight* _p = new Telegram_L2LF70::t_MatWeight(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF70_mt__MatWeight,
               _0RL_Telegram__L2LF70_mt__MatWeight_marshal_fn,
               _0RL_Telegram__L2LF70_mt__MatWeight_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF70::t_MatWeight* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF70_mt__MatWeight,
               _0RL_Telegram__L2LF70_mt__MatWeight_marshal_fn,
               _0RL_Telegram__L2LF70_mt__MatWeight_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF70::t_MatWeight*& _sp)
{
  return _a >>= (const Telegram_L2LF70::t_MatWeight*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF70::t_MatWeight*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF70_mt__MatWeight,
                    _0RL_Telegram__L2LF70_mt__MatWeight_unmarshal_fn,
                    _0RL_Telegram__L2LF70_mt__MatWeight_marshal_fn,
                    _0RL_Telegram__L2LF70_mt__MatWeight_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF70::t_MatWeight*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF70_mt__MatSequence_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF70::t_MatSequence* _p = (Telegram_L2LF70::t_MatSequence*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF70_mt__MatSequence_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF70::t_MatSequence* _p = new Telegram_L2LF70::t_MatSequence;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF70_mt__MatSequence_destructor_fn(void* _v)
{
  Telegram_L2LF70::t_MatSequence* _p = (Telegram_L2LF70::t_MatSequence*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF70::t_MatSequence& _s)
{
  Telegram_L2LF70::t_MatSequence* _p = new Telegram_L2LF70::t_MatSequence(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF70_mt__MatSequence,
               _0RL_Telegram__L2LF70_mt__MatSequence_marshal_fn,
               _0RL_Telegram__L2LF70_mt__MatSequence_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF70::t_MatSequence* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF70_mt__MatSequence,
               _0RL_Telegram__L2LF70_mt__MatSequence_marshal_fn,
               _0RL_Telegram__L2LF70_mt__MatSequence_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF70::t_MatSequence*& _sp)
{
  return _a >>= (const Telegram_L2LF70::t_MatSequence*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF70::t_MatSequence*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF70_mt__MatSequence,
                    _0RL_Telegram__L2LF70_mt__MatSequence_unmarshal_fn,
                    _0RL_Telegram__L2LF70_mt__MatSequence_marshal_fn,
                    _0RL_Telegram__L2LF70_mt__MatSequence_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF70::t_MatSequence*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF70_mt__FeedRate_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF70::t_FeedRate* _p = (Telegram_L2LF70::t_FeedRate*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF70_mt__FeedRate_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF70::t_FeedRate* _p = new Telegram_L2LF70::t_FeedRate;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF70_mt__FeedRate_destructor_fn(void* _v)
{
  Telegram_L2LF70::t_FeedRate* _p = (Telegram_L2LF70::t_FeedRate*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF70::t_FeedRate& _s)
{
  Telegram_L2LF70::t_FeedRate* _p = new Telegram_L2LF70::t_FeedRate(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF70_mt__FeedRate,
               _0RL_Telegram__L2LF70_mt__FeedRate_marshal_fn,
               _0RL_Telegram__L2LF70_mt__FeedRate_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF70::t_FeedRate* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF70_mt__FeedRate,
               _0RL_Telegram__L2LF70_mt__FeedRate_marshal_fn,
               _0RL_Telegram__L2LF70_mt__FeedRate_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF70::t_FeedRate*& _sp)
{
  return _a >>= (const Telegram_L2LF70::t_FeedRate*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF70::t_FeedRate*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF70_mt__FeedRate,
                    _0RL_Telegram__L2LF70_mt__FeedRate_unmarshal_fn,
                    _0RL_Telegram__L2LF70_mt__FeedRate_marshal_fn,
                    _0RL_Telegram__L2LF70_mt__FeedRate_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF70::t_FeedRate*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF70_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF70::t_Spare* _p = (Telegram_L2LF70::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF70_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF70::t_Spare* _p = new Telegram_L2LF70::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF70_mt__Spare_destructor_fn(void* _v)
{
  Telegram_L2LF70::t_Spare* _p = (Telegram_L2LF70::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF70::t_Spare& _s)
{
  Telegram_L2LF70::t_Spare* _p = new Telegram_L2LF70::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF70_mt__Spare,
               _0RL_Telegram__L2LF70_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF70_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF70::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF70_mt__Spare,
               _0RL_Telegram__L2LF70_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF70_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF70::t_Spare*& _sp)
{
  return _a >>= (const Telegram_L2LF70::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF70::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF70_mt__Spare,
                    _0RL_Telegram__L2LF70_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__L2LF70_mt__Spare_marshal_fn,
                    _0RL_Telegram__L2LF70_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF70::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF70__MAT__HANDL_msENTRY_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF70_MAT_HANDL::sENTRY* _p = (Telegram_L2LF70_MAT_HANDL::sENTRY*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF70__MAT__HANDL_msENTRY_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF70_MAT_HANDL::sENTRY* _p = new Telegram_L2LF70_MAT_HANDL::sENTRY;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF70__MAT__HANDL_msENTRY_destructor_fn(void* _v)
{
  Telegram_L2LF70_MAT_HANDL::sENTRY* _p = (Telegram_L2LF70_MAT_HANDL::sENTRY*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF70_MAT_HANDL::sENTRY& _s)
{
  Telegram_L2LF70_MAT_HANDL::sENTRY* _p = new Telegram_L2LF70_MAT_HANDL::sENTRY(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF70__MAT__HANDL_msENTRY,
               _0RL_Telegram__L2LF70__MAT__HANDL_msENTRY_marshal_fn,
               _0RL_Telegram__L2LF70__MAT__HANDL_msENTRY_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF70_MAT_HANDL::sENTRY* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF70__MAT__HANDL_msENTRY,
               _0RL_Telegram__L2LF70__MAT__HANDL_msENTRY_marshal_fn,
               _0RL_Telegram__L2LF70__MAT__HANDL_msENTRY_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF70_MAT_HANDL::sENTRY*& _sp)
{
  return _a >>= (const Telegram_L2LF70_MAT_HANDL::sENTRY*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF70_MAT_HANDL::sENTRY*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF70__MAT__HANDL_msENTRY,
                    _0RL_Telegram__L2LF70__MAT__HANDL_msENTRY_unmarshal_fn,
                    _0RL_Telegram__L2LF70__MAT__HANDL_msENTRY_marshal_fn,
                    _0RL_Telegram__L2LF70__MAT__HANDL_msENTRY_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF70_MAT_HANDL::sENTRY*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF70__MAT__HANDL_mt__ENTRY_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF70_MAT_HANDL::t_ENTRY* _p = (Telegram_L2LF70_MAT_HANDL::t_ENTRY*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF70__MAT__HANDL_mt__ENTRY_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF70_MAT_HANDL::t_ENTRY* _p = new Telegram_L2LF70_MAT_HANDL::t_ENTRY;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF70__MAT__HANDL_mt__ENTRY_destructor_fn(void* _v)
{
  Telegram_L2LF70_MAT_HANDL::t_ENTRY* _p = (Telegram_L2LF70_MAT_HANDL::t_ENTRY*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF70_MAT_HANDL::t_ENTRY& _s)
{
  Telegram_L2LF70_MAT_HANDL::t_ENTRY* _p = new Telegram_L2LF70_MAT_HANDL::t_ENTRY(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF70__MAT__HANDL_mt__ENTRY,
               _0RL_Telegram__L2LF70__MAT__HANDL_mt__ENTRY_marshal_fn,
               _0RL_Telegram__L2LF70__MAT__HANDL_mt__ENTRY_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF70_MAT_HANDL::t_ENTRY* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF70__MAT__HANDL_mt__ENTRY,
               _0RL_Telegram__L2LF70__MAT__HANDL_mt__ENTRY_marshal_fn,
               _0RL_Telegram__L2LF70__MAT__HANDL_mt__ENTRY_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF70_MAT_HANDL::t_ENTRY*& _sp)
{
  return _a >>= (const Telegram_L2LF70_MAT_HANDL::t_ENTRY*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF70_MAT_HANDL::t_ENTRY*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF70__MAT__HANDL_mt__ENTRY,
                    _0RL_Telegram__L2LF70__MAT__HANDL_mt__ENTRY_unmarshal_fn,
                    _0RL_Telegram__L2LF70__MAT__HANDL_mt__ENTRY_marshal_fn,
                    _0RL_Telegram__L2LF70__MAT__HANDL_mt__ENTRY_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF70_MAT_HANDL::t_ENTRY*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF71_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF71::t_CreateTime* _p = (Telegram_L2LF71::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF71_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF71::t_CreateTime* _p = new Telegram_L2LF71::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF71_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_L2LF71::t_CreateTime* _p = (Telegram_L2LF71::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF71::t_CreateTime& _s)
{
  Telegram_L2LF71::t_CreateTime* _p = new Telegram_L2LF71::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF71_mt__CreateTime,
               _0RL_Telegram__L2LF71_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF71_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF71::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF71_mt__CreateTime,
               _0RL_Telegram__L2LF71_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF71_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF71::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_L2LF71::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF71::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF71_mt__CreateTime,
                    _0RL_Telegram__L2LF71_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__L2LF71_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__L2LF71_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF71::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF71_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF71::t_Spare* _p = (Telegram_L2LF71::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF71_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF71::t_Spare* _p = new Telegram_L2LF71::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF71_mt__Spare_destructor_fn(void* _v)
{
  Telegram_L2LF71::t_Spare* _p = (Telegram_L2LF71::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF71::t_Spare& _s)
{
  Telegram_L2LF71::t_Spare* _p = new Telegram_L2LF71::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF71_mt__Spare,
               _0RL_Telegram__L2LF71_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF71_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF71::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF71_mt__Spare,
               _0RL_Telegram__L2LF71_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF71_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF71::t_Spare*& _sp)
{
  return _a >>= (const Telegram_L2LF71::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF71::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF71_mt__Spare,
                    _0RL_Telegram__L2LF71_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__L2LF71_mt__Spare_marshal_fn,
                    _0RL_Telegram__L2LF71_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF71::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF72_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF72::t_CreateTime* _p = (Telegram_L2LF72::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF72_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF72::t_CreateTime* _p = new Telegram_L2LF72::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF72_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_L2LF72::t_CreateTime* _p = (Telegram_L2LF72::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF72::t_CreateTime& _s)
{
  Telegram_L2LF72::t_CreateTime* _p = new Telegram_L2LF72::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF72_mt__CreateTime,
               _0RL_Telegram__L2LF72_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF72_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF72::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF72_mt__CreateTime,
               _0RL_Telegram__L2LF72_mt__CreateTime_marshal_fn,
               _0RL_Telegram__L2LF72_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF72::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_L2LF72::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF72::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF72_mt__CreateTime,
                    _0RL_Telegram__L2LF72_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__L2LF72_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__L2LF72_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF72::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__L2LF72_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_L2LF72::t_Spare* _p = (Telegram_L2LF72::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__L2LF72_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_L2LF72::t_Spare* _p = new Telegram_L2LF72::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__L2LF72_mt__Spare_destructor_fn(void* _v)
{
  Telegram_L2LF72::t_Spare* _p = (Telegram_L2LF72::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_L2LF72::t_Spare& _s)
{
  Telegram_L2LF72::t_Spare* _p = new Telegram_L2LF72::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__L2LF72_mt__Spare,
               _0RL_Telegram__L2LF72_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF72_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_L2LF72::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__L2LF72_mt__Spare,
               _0RL_Telegram__L2LF72_mt__Spare_marshal_fn,
               _0RL_Telegram__L2LF72_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_L2LF72::t_Spare*& _sp)
{
  return _a >>= (const Telegram_L2LF72::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_L2LF72::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__L2LF72_mt__Spare,
                    _0RL_Telegram__L2LF72_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__L2LF72_mt__Spare_marshal_fn,
                    _0RL_Telegram__L2LF72_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_L2LF72::t_Spare*)_v;
    return 1;
  }
  return 0;
}

