// This file is generated by omniidl (C++ backend)- omniORB_4_2. Do not edit.

#include "Telcom_Out_s.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_2;



void
HeaderType::operator>>= (cdrStream &_n) const
{
  _n.marshalString(MessageLength,0);
  _n.marshalString(MessageId,0);
  _n.marshalString(MessageCount,0);
  _n.marshalString(UnitNo,0);

}

void
HeaderType::operator<<= (cdrStream &_n)
{
  MessageLength = _n.unmarshalString(0);
  MessageId = _n.unmarshalString(0);
  MessageCount = _n.unmarshalString(0);
  UnitNo = _n.unmarshalString(0);

}

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_Head { 
  extern const char * MessageLength = "MessageLength";
} 
#else
const char * Telegram_Head::MessageLength = "MessageLength";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_Head { 
  extern const char * MessageId = "MessageId";
} 
#else
const char * Telegram_Head::MessageId = "MessageId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_Head { 
  extern const char * MessageCount = "MessageCount";
} 
#else
const char * Telegram_Head::MessageCount = "MessageCount";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_Head { 
  extern const char * UnitNo = "UnitNo";
} 
#else
const char * Telegram_Head::UnitNo = "UnitNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF00 { 
  extern const char * MessageLength = "MessageLength";
} 
#else
const char * Telegram_L2LF00::MessageLength = "MessageLength";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF00 { 
  extern const char * MessageId = "MessageId";
} 
#else
const char * Telegram_L2LF00::MessageId = "MessageId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF00 { 
  extern const char * MessageCount = "MessageCount";
} 
#else
const char * Telegram_L2LF00::MessageCount = "MessageCount";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF00 { 
  extern const char * UnitNo = "UnitNo";
} 
#else
const char * Telegram_L2LF00::UnitNo = "UnitNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF00 { 
  extern const char * Status = "Status";
} 
#else
const char * Telegram_L2LF00::Status = "Status";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF00 { 
  extern const char * RcvMsgId = "RcvMsgId";
} 
#else
const char * Telegram_L2LF00::RcvMsgId = "RcvMsgId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF00 { 
  extern const char * ErrInf = "ErrInf";
} 
#else
const char * Telegram_L2LF00::ErrInf = "ErrInf";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF00 { 
  extern const char * ErrMess = "ErrMess";
} 
#else
const char * Telegram_L2LF00::ErrMess = "ErrMess";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF01 { 
  extern const char * MessageLength = "MessageLength";
} 
#else
const char * Telegram_L2LF01::MessageLength = "MessageLength";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF01 { 
  extern const char * MessageId = "MessageId";
} 
#else
const char * Telegram_L2LF01::MessageId = "MessageId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF01 { 
  extern const char * MessageCount = "MessageCount";
} 
#else
const char * Telegram_L2LF01::MessageCount = "MessageCount";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF01 { 
  extern const char * UnitNo = "UnitNo";
} 
#else
const char * Telegram_L2LF01::UnitNo = "UnitNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF01 { 
  extern const char * CreateTime = "CreateTime";
} 
#else
const char * Telegram_L2LF01::CreateTime = "CreateTime";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF01_WATCH_DOG { 
  extern const char * MessageLength = "MessageLength";
} 
#else
const char * Telegram_L2LF01_WATCH_DOG::MessageLength = "MessageLength";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF01_WATCH_DOG { 
  extern const char * MessageId = "MessageId";
} 
#else
const char * Telegram_L2LF01_WATCH_DOG::MessageId = "MessageId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF01_WATCH_DOG { 
  extern const char * MessageCount = "MessageCount";
} 
#else
const char * Telegram_L2LF01_WATCH_DOG::MessageCount = "MessageCount";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF01_WATCH_DOG { 
  extern const char * UnitNo = "UnitNo";
} 
#else
const char * Telegram_L2LF01_WATCH_DOG::UnitNo = "UnitNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF01_WATCH_DOG { 
  extern const char * CreateTime = "CreateTime";
} 
#else
const char * Telegram_L2LF01_WATCH_DOG::CreateTime = "CreateTime";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * MessageLength = "MessageLength";
} 
#else
const char * Telegram_L2LF03::MessageLength = "MessageLength";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * MessageId = "MessageId";
} 
#else
const char * Telegram_L2LF03::MessageId = "MessageId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * MessageCount = "MessageCount";
} 
#else
const char * Telegram_L2LF03::MessageCount = "MessageCount";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * UnitNo = "UnitNo";
} 
#else
const char * Telegram_L2LF03::UnitNo = "UnitNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * CreateTime = "CreateTime";
} 
#else
const char * Telegram_L2LF03::CreateTime = "CreateTime";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * HeatId = "HeatId";
} 
#else
const char * Telegram_L2LF03::HeatId = "HeatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * TreatId = "TreatId";
} 
#else
const char * Telegram_L2LF03::TreatId = "TreatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * ProdOrderId = "ProdOrderId";
} 
#else
const char * Telegram_L2LF03::ProdOrderId = "ProdOrderId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * SteelGradeCode = "SteelGradeCode";
} 
#else
const char * Telegram_L2LF03::SteelGradeCode = "SteelGradeCode";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * ProdDate = "ProdDate";
} 
#else
const char * Telegram_L2LF03::ProdDate = "ProdDate";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * DepTime = "DepTime";
} 
#else
const char * Telegram_L2LF03::DepTime = "DepTime";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * CarNo = "CarNo";
} 
#else
const char * Telegram_L2LF03::CarNo = "CarNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * LadleId = "LadleId";
} 
#else
const char * Telegram_L2LF03::LadleId = "LadleId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * ShiftCode = "ShiftCode";
} 
#else
const char * Telegram_L2LF03::ShiftCode = "ShiftCode";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * CrewCode = "CrewCode";
} 
#else
const char * Telegram_L2LF03::CrewCode = "CrewCode";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * OperCode = "OperCode";
} 
#else
const char * Telegram_L2LF03::OperCode = "OperCode";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * RouteCode = "RouteCode";
} 
#else
const char * Telegram_L2LF03::RouteCode = "RouteCode";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * AimTemp = "AimTemp";
} 
#else
const char * Telegram_L2LF03::AimTemp = "AimTemp";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * UpdateFlag = "UpdateFlag";
} 
#else
const char * Telegram_L2LF03::UpdateFlag = "UpdateFlag";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * LadleTareWeight = "LadleTareWeight";
} 
#else
const char * Telegram_L2LF03::LadleTareWeight = "LadleTareWeight";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * LadleGrossWeight = "LadleGrossWeight";
} 
#else
const char * Telegram_L2LF03::LadleGrossWeight = "LadleGrossWeight";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * SteelWeight = "SteelWeight";
} 
#else
const char * Telegram_L2LF03::SteelWeight = "SteelWeight";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * HeatIdCust = "HeatIdCust";
} 
#else
const char * Telegram_L2LF03::HeatIdCust = "HeatIdCust";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * TreatIdCust = "TreatIdCust";
} 
#else
const char * Telegram_L2LF03::TreatIdCust = "TreatIdCust";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF03 { 
  extern const char * Spare = "Spare";
} 
#else
const char * Telegram_L2LF03::Spare = "Spare";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF05 { 
  extern const char * MessageLength = "MessageLength";
} 
#else
const char * Telegram_L2LF05::MessageLength = "MessageLength";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF05 { 
  extern const char * MessageId = "MessageId";
} 
#else
const char * Telegram_L2LF05::MessageId = "MessageId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF05 { 
  extern const char * MessageCount = "MessageCount";
} 
#else
const char * Telegram_L2LF05::MessageCount = "MessageCount";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF05 { 
  extern const char * UnitNo = "UnitNo";
} 
#else
const char * Telegram_L2LF05::UnitNo = "UnitNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF05 { 
  extern const char * CreateTime = "CreateTime";
} 
#else
const char * Telegram_L2LF05::CreateTime = "CreateTime";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF05 { 
  extern const char * HeatId = "HeatId";
} 
#else
const char * Telegram_L2LF05::HeatId = "HeatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF05 { 
  extern const char * TreatId = "TreatId";
} 
#else
const char * Telegram_L2LF05::TreatId = "TreatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF05 { 
  extern const char * StirrActivity = "StirrActivity";
} 
#else
const char * Telegram_L2LF05::StirrActivity = "StirrActivity";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF05 { 
  extern const char * StirrGasType = "StirrGasType";
} 
#else
const char * Telegram_L2LF05::StirrGasType = "StirrGasType";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF05 { 
  extern const char * StirrInt = "StirrInt";
} 
#else
const char * Telegram_L2LF05::StirrInt = "StirrInt";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF05 { 
  extern const char * Spare = "Spare";
} 
#else
const char * Telegram_L2LF05::Spare = "Spare";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF06 { 
  extern const char * MessageLength = "MessageLength";
} 
#else
const char * Telegram_L2LF06::MessageLength = "MessageLength";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF06 { 
  extern const char * MessageId = "MessageId";
} 
#else
const char * Telegram_L2LF06::MessageId = "MessageId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF06 { 
  extern const char * MessageCount = "MessageCount";
} 
#else
const char * Telegram_L2LF06::MessageCount = "MessageCount";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF06 { 
  extern const char * UnitNo = "UnitNo";
} 
#else
const char * Telegram_L2LF06::UnitNo = "UnitNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF06 { 
  extern const char * CreateTime = "CreateTime";
} 
#else
const char * Telegram_L2LF06::CreateTime = "CreateTime";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF06 { 
  extern const char * HeatId = "HeatId";
} 
#else
const char * Telegram_L2LF06::HeatId = "HeatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF06 { 
  extern const char * TreatId = "TreatId";
} 
#else
const char * Telegram_L2LF06::TreatId = "TreatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF06 { 
  extern const char * Spare = "Spare";
} 
#else
const char * Telegram_L2LF06::Spare = "Spare";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF07 { 
  extern const char * MessageLength = "MessageLength";
} 
#else
const char * Telegram_L2LF07::MessageLength = "MessageLength";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF07 { 
  extern const char * MessageId = "MessageId";
} 
#else
const char * Telegram_L2LF07::MessageId = "MessageId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF07 { 
  extern const char * MessageCount = "MessageCount";
} 
#else
const char * Telegram_L2LF07::MessageCount = "MessageCount";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF07 { 
  extern const char * UnitNo = "UnitNo";
} 
#else
const char * Telegram_L2LF07::UnitNo = "UnitNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF07 { 
  extern const char * CreateTime = "CreateTime";
} 
#else
const char * Telegram_L2LF07::CreateTime = "CreateTime";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF07 { 
  extern const char * HeatId = "HeatId";
} 
#else
const char * Telegram_L2LF07::HeatId = "HeatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF07 { 
  extern const char * TreatId = "TreatId";
} 
#else
const char * Telegram_L2LF07::TreatId = "TreatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF07 { 
  extern const char * ModeElec = "ModeElec";
} 
#else
const char * Telegram_L2LF07::ModeElec = "ModeElec";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF07 { 
  extern const char * ModeStirr = "ModeStirr";
} 
#else
const char * Telegram_L2LF07::ModeStirr = "ModeStirr";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF07 { 
  extern const char * ModeMat = "ModeMat";
} 
#else
const char * Telegram_L2LF07::ModeMat = "ModeMat";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF07 { 
  extern const char * Spare = "Spare";
} 
#else
const char * Telegram_L2LF07::Spare = "Spare";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF20 { 
  extern const char * MessageLength = "MessageLength";
} 
#else
const char * Telegram_L2LF20::MessageLength = "MessageLength";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF20 { 
  extern const char * MessageId = "MessageId";
} 
#else
const char * Telegram_L2LF20::MessageId = "MessageId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF20 { 
  extern const char * MessageCount = "MessageCount";
} 
#else
const char * Telegram_L2LF20::MessageCount = "MessageCount";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF20 { 
  extern const char * UnitNo = "UnitNo";
} 
#else
const char * Telegram_L2LF20::UnitNo = "UnitNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF20 { 
  extern const char * CreateTime = "CreateTime";
} 
#else
const char * Telegram_L2LF20::CreateTime = "CreateTime";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF20 { 
  extern const char * HeatId = "HeatId";
} 
#else
const char * Telegram_L2LF20::HeatId = "HeatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF20 { 
  extern const char * TreatId = "TreatId";
} 
#else
const char * Telegram_L2LF20::TreatId = "TreatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF20 { 
  extern const char * AimVoltTap = "AimVoltTap";
} 
#else
const char * Telegram_L2LF20::AimVoltTap = "AimVoltTap";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF20 { 
  extern const char * AimCurveNo = "AimCurveNo";
} 
#else
const char * Telegram_L2LF20::AimCurveNo = "AimCurveNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF20 { 
  extern const char * Spare = "Spare";
} 
#else
const char * Telegram_L2LF20::Spare = "Spare";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF20_VOLTAGE_TAP { 
  extern const char * MessageLength = "MessageLength";
} 
#else
const char * Telegram_L2LF20_VOLTAGE_TAP::MessageLength = "MessageLength";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF20_VOLTAGE_TAP { 
  extern const char * MessageId = "MessageId";
} 
#else
const char * Telegram_L2LF20_VOLTAGE_TAP::MessageId = "MessageId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF20_VOLTAGE_TAP { 
  extern const char * MessageCount = "MessageCount";
} 
#else
const char * Telegram_L2LF20_VOLTAGE_TAP::MessageCount = "MessageCount";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF20_VOLTAGE_TAP { 
  extern const char * UnitNo = "UnitNo";
} 
#else
const char * Telegram_L2LF20_VOLTAGE_TAP::UnitNo = "UnitNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF20_VOLTAGE_TAP { 
  extern const char * CreateTime = "CreateTime";
} 
#else
const char * Telegram_L2LF20_VOLTAGE_TAP::CreateTime = "CreateTime";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF20_VOLTAGE_TAP { 
  extern const char * HeatId = "HeatId";
} 
#else
const char * Telegram_L2LF20_VOLTAGE_TAP::HeatId = "HeatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF20_VOLTAGE_TAP { 
  extern const char * TreatId = "TreatId";
} 
#else
const char * Telegram_L2LF20_VOLTAGE_TAP::TreatId = "TreatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF20_VOLTAGE_TAP { 
  extern const char * AimVoltTap = "AimVoltTap";
} 
#else
const char * Telegram_L2LF20_VOLTAGE_TAP::AimVoltTap = "AimVoltTap";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF20_VOLTAGE_TAP { 
  extern const char * AimCurveNo = "AimCurveNo";
} 
#else
const char * Telegram_L2LF20_VOLTAGE_TAP::AimCurveNo = "AimCurveNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF20_VOLTAGE_TAP { 
  extern const char * Spare = "Spare";
} 
#else
const char * Telegram_L2LF20_VOLTAGE_TAP::Spare = "Spare";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF22 { 
  extern const char * MessageLength = "MessageLength";
} 
#else
const char * Telegram_L2LF22::MessageLength = "MessageLength";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF22 { 
  extern const char * MessageId = "MessageId";
} 
#else
const char * Telegram_L2LF22::MessageId = "MessageId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF22 { 
  extern const char * MessageCount = "MessageCount";
} 
#else
const char * Telegram_L2LF22::MessageCount = "MessageCount";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF22 { 
  extern const char * UnitNo = "UnitNo";
} 
#else
const char * Telegram_L2LF22::UnitNo = "UnitNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF22 { 
  extern const char * CreateTime = "CreateTime";
} 
#else
const char * Telegram_L2LF22::CreateTime = "CreateTime";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF22 { 
  extern const char * HeatId = "HeatId";
} 
#else
const char * Telegram_L2LF22::HeatId = "HeatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF22 { 
  extern const char * TreatId = "TreatId";
} 
#else
const char * Telegram_L2LF22::TreatId = "TreatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF22 { 
  extern const char * Spare = "Spare";
} 
#else
const char * Telegram_L2LF22::Spare = "Spare";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF23 { 
  extern const char * MessageLength = "MessageLength";
} 
#else
const char * Telegram_L2LF23::MessageLength = "MessageLength";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF23 { 
  extern const char * MessageId = "MessageId";
} 
#else
const char * Telegram_L2LF23::MessageId = "MessageId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF23 { 
  extern const char * MessageCount = "MessageCount";
} 
#else
const char * Telegram_L2LF23::MessageCount = "MessageCount";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF23 { 
  extern const char * UnitNo = "UnitNo";
} 
#else
const char * Telegram_L2LF23::UnitNo = "UnitNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF23 { 
  extern const char * CreateTime = "CreateTime";
} 
#else
const char * Telegram_L2LF23::CreateTime = "CreateTime";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF23 { 
  extern const char * HeatId = "HeatId";
} 
#else
const char * Telegram_L2LF23::HeatId = "HeatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF23 { 
  extern const char * TreatId = "TreatId";
} 
#else
const char * Telegram_L2LF23::TreatId = "TreatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF23 { 
  extern const char * ActionFlag = "ActionFlag";
} 
#else
const char * Telegram_L2LF23::ActionFlag = "ActionFlag";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF23 { 
  extern const char * Spare = "Spare";
} 
#else
const char * Telegram_L2LF23::Spare = "Spare";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF25 { 
  extern const char * MessageLength = "MessageLength";
} 
#else
const char * Telegram_L2LF25::MessageLength = "MessageLength";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF25 { 
  extern const char * MessageId = "MessageId";
} 
#else
const char * Telegram_L2LF25::MessageId = "MessageId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF25 { 
  extern const char * MessageCount = "MessageCount";
} 
#else
const char * Telegram_L2LF25::MessageCount = "MessageCount";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF25 { 
  extern const char * UnitNo = "UnitNo";
} 
#else
const char * Telegram_L2LF25::UnitNo = "UnitNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF25 { 
  extern const char * CreateTime = "CreateTime";
} 
#else
const char * Telegram_L2LF25::CreateTime = "CreateTime";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF25 { 
  extern const char * HeatId = "HeatId";
} 
#else
const char * Telegram_L2LF25::HeatId = "HeatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF25 { 
  extern const char * TreatId = "TreatId";
} 
#else
const char * Telegram_L2LF25::TreatId = "TreatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF25 { 
  extern const char * Type = "Type";
} 
#else
const char * Telegram_L2LF25::Type = "Type";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF25 { 
  extern const char * Spare = "Spare";
} 
#else
const char * Telegram_L2LF25::Spare = "Spare";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF30 { 
  extern const char * MessageLength = "MessageLength";
} 
#else
const char * Telegram_L2LF30::MessageLength = "MessageLength";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF30 { 
  extern const char * MessageId = "MessageId";
} 
#else
const char * Telegram_L2LF30::MessageId = "MessageId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF30 { 
  extern const char * MessageCount = "MessageCount";
} 
#else
const char * Telegram_L2LF30::MessageCount = "MessageCount";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF30 { 
  extern const char * UnitNo = "UnitNo";
} 
#else
const char * Telegram_L2LF30::UnitNo = "UnitNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF30 { 
  extern const char * CreateTime = "CreateTime";
} 
#else
const char * Telegram_L2LF30::CreateTime = "CreateTime";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF30 { 
  extern const char * HeatId = "HeatId";
} 
#else
const char * Telegram_L2LF30::HeatId = "HeatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF30 { 
  extern const char * TreatId = "TreatId";
} 
#else
const char * Telegram_L2LF30::TreatId = "TreatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF30 { 
  extern const char * Enabled = "Enabled";
} 
#else
const char * Telegram_L2LF30::Enabled = "Enabled";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF30 { 
  extern const char * RemDurStep = "RemDurStep";
} 
#else
const char * Telegram_L2LF30::RemDurStep = "RemDurStep";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF30 { 
  extern const char * ElecEnergyStep = "ElecEnergyStep";
} 
#else
const char * Telegram_L2LF30::ElecEnergyStep = "ElecEnergyStep";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF30 { 
  extern const char * TempEndStep = "TempEndStep";
} 
#else
const char * Telegram_L2LF30::TempEndStep = "TempEndStep";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF30 { 
  extern const char * AimVoltTap = "AimVoltTap";
} 
#else
const char * Telegram_L2LF30::AimVoltTap = "AimVoltTap";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF30 { 
  extern const char * AimCurveNo = "AimCurveNo";
} 
#else
const char * Telegram_L2LF30::AimCurveNo = "AimCurveNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF30 { 
  extern const char * Spare = "Spare";
} 
#else
const char * Telegram_L2LF30::Spare = "Spare";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF30_ELEC_PATT { 
  extern const char * MessageLength = "MessageLength";
} 
#else
const char * Telegram_L2LF30_ELEC_PATT::MessageLength = "MessageLength";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF30_ELEC_PATT { 
  extern const char * MessageId = "MessageId";
} 
#else
const char * Telegram_L2LF30_ELEC_PATT::MessageId = "MessageId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF30_ELEC_PATT { 
  extern const char * MessageCount = "MessageCount";
} 
#else
const char * Telegram_L2LF30_ELEC_PATT::MessageCount = "MessageCount";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF30_ELEC_PATT { 
  extern const char * UnitNo = "UnitNo";
} 
#else
const char * Telegram_L2LF30_ELEC_PATT::UnitNo = "UnitNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF30_ELEC_PATT { 
  extern const char * CreateTime = "CreateTime";
} 
#else
const char * Telegram_L2LF30_ELEC_PATT::CreateTime = "CreateTime";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF30_ELEC_PATT { 
  extern const char * HeatId = "HeatId";
} 
#else
const char * Telegram_L2LF30_ELEC_PATT::HeatId = "HeatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF30_ELEC_PATT { 
  extern const char * TreatId = "TreatId";
} 
#else
const char * Telegram_L2LF30_ELEC_PATT::TreatId = "TreatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF30_ELEC_PATT { 
  extern const char * ENTRY = "ENTRY";
} 
#else
const char * Telegram_L2LF30_ELEC_PATT::ENTRY = "ENTRY";
#endif

void
Telegram_L2LF30_ELEC_PATT::sENTRY::operator>>= (cdrStream &_n) const
{
  MessageCount >>= _n;
  MessageIndex >>= _n;
  _n.marshalString(HeatId,0);
  _n.marshalString(TreatId,0);
  ActivityType >>= _n;
  StepNo >>= _n;
  Enabled >>= _n;
  RemDurStep >>= _n;
  ElecEnergyStep >>= _n;
  TempEndStep >>= _n;
  AimVoltTap >>= _n;
  AimCurveNo >>= _n;
  Spare_1 >>= _n;
  Spare_2 >>= _n;

}

void
Telegram_L2LF30_ELEC_PATT::sENTRY::operator<<= (cdrStream &_n)
{
  (::CORBA::Long&)MessageCount <<= _n;
  (::CORBA::Long&)MessageIndex <<= _n;
  HeatId = _n.unmarshalString(0);
  TreatId = _n.unmarshalString(0);
  (::CORBA::Long&)ActivityType <<= _n;
  (::CORBA::Long&)StepNo <<= _n;
  (::CORBA::Long&)Enabled <<= _n;
  (::CORBA::Double&)RemDurStep <<= _n;
  (::CORBA::Long&)ElecEnergyStep <<= _n;
  (::CORBA::Long&)TempEndStep <<= _n;
  (::CORBA::Long&)AimVoltTap <<= _n;
  (::CORBA::Long&)AimCurveNo <<= _n;
  (::CORBA::Long&)Spare_1 <<= _n;
  (::CORBA::Long&)Spare_2 <<= _n;

}

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF31 { 
  extern const char * MessageLength = "MessageLength";
} 
#else
const char * Telegram_L2LF31::MessageLength = "MessageLength";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF31 { 
  extern const char * MessageId = "MessageId";
} 
#else
const char * Telegram_L2LF31::MessageId = "MessageId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF31 { 
  extern const char * MessageCount = "MessageCount";
} 
#else
const char * Telegram_L2LF31::MessageCount = "MessageCount";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF31 { 
  extern const char * UnitNo = "UnitNo";
} 
#else
const char * Telegram_L2LF31::UnitNo = "UnitNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF31 { 
  extern const char * CreateTime = "CreateTime";
} 
#else
const char * Telegram_L2LF31::CreateTime = "CreateTime";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF31 { 
  extern const char * HeatId = "HeatId";
} 
#else
const char * Telegram_L2LF31::HeatId = "HeatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF31 { 
  extern const char * TreatId = "TreatId";
} 
#else
const char * Telegram_L2LF31::TreatId = "TreatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF31 { 
  extern const char * PhaseNo = "PhaseNo";
} 
#else
const char * Telegram_L2LF31::PhaseNo = "PhaseNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF31 { 
  extern const char * Enabled = "Enabled";
} 
#else
const char * Telegram_L2LF31::Enabled = "Enabled";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF31 { 
  extern const char * Duration = "Duration";
} 
#else
const char * Telegram_L2LF31::Duration = "Duration";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF31 { 
  extern const char * StirrInt = "StirrInt";
} 
#else
const char * Telegram_L2LF31::StirrInt = "StirrInt";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF31 { 
  extern const char * StirrGasFlow = "StirrGasFlow";
} 
#else
const char * Telegram_L2LF31::StirrGasFlow = "StirrGasFlow";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF31 { 
  extern const char * StirrGasType = "StirrGasType";
} 
#else
const char * Telegram_L2LF31::StirrGasType = "StirrGasType";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF31 { 
  extern const char * StepPriority = "StepPriority";
} 
#else
const char * Telegram_L2LF31::StepPriority = "StepPriority";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF31 { 
  extern const char * Spare = "Spare";
} 
#else
const char * Telegram_L2LF31::Spare = "Spare";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF31_STIRR_PATT { 
  extern const char * MessageLength = "MessageLength";
} 
#else
const char * Telegram_L2LF31_STIRR_PATT::MessageLength = "MessageLength";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF31_STIRR_PATT { 
  extern const char * MessageId = "MessageId";
} 
#else
const char * Telegram_L2LF31_STIRR_PATT::MessageId = "MessageId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF31_STIRR_PATT { 
  extern const char * MessageCount = "MessageCount";
} 
#else
const char * Telegram_L2LF31_STIRR_PATT::MessageCount = "MessageCount";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF31_STIRR_PATT { 
  extern const char * UnitNo = "UnitNo";
} 
#else
const char * Telegram_L2LF31_STIRR_PATT::UnitNo = "UnitNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF31_STIRR_PATT { 
  extern const char * CreateTime = "CreateTime";
} 
#else
const char * Telegram_L2LF31_STIRR_PATT::CreateTime = "CreateTime";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF31_STIRR_PATT { 
  extern const char * HeatId = "HeatId";
} 
#else
const char * Telegram_L2LF31_STIRR_PATT::HeatId = "HeatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF31_STIRR_PATT { 
  extern const char * TreatId = "TreatId";
} 
#else
const char * Telegram_L2LF31_STIRR_PATT::TreatId = "TreatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF31_STIRR_PATT { 
  extern const char * ENTRY = "ENTRY";
} 
#else
const char * Telegram_L2LF31_STIRR_PATT::ENTRY = "ENTRY";
#endif

void
Telegram_L2LF31_STIRR_PATT::sENTRY::operator>>= (cdrStream &_n) const
{
  MessageCount >>= _n;
  MessageIndex >>= _n;
  _n.marshalString(HeatId,0);
  _n.marshalString(TreatId,0);
  PhaseNo >>= _n;
  Enabled >>= _n;
  Duration >>= _n;
  StirrInt >>= _n;
  StirrGasFlow >>= _n;
  StirrGasType >>= _n;
  StepPriority >>= _n;
  Spare_1 >>= _n;
  Spare_2 >>= _n;

}

void
Telegram_L2LF31_STIRR_PATT::sENTRY::operator<<= (cdrStream &_n)
{
  (::CORBA::Long&)MessageCount <<= _n;
  (::CORBA::Long&)MessageIndex <<= _n;
  HeatId = _n.unmarshalString(0);
  TreatId = _n.unmarshalString(0);
  (::CORBA::Long&)PhaseNo <<= _n;
  (::CORBA::Long&)Enabled <<= _n;
  (::CORBA::Double&)Duration <<= _n;
  (::CORBA::Long&)StirrInt <<= _n;
  (::CORBA::Double&)StirrGasFlow <<= _n;
  (::CORBA::Long&)StirrGasType <<= _n;
  (::CORBA::Long&)StepPriority <<= _n;
  (::CORBA::Long&)Spare_1 <<= _n;
  (::CORBA::Long&)Spare_2 <<= _n;

}

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF40 { 
  extern const char * MessageLength = "MessageLength";
} 
#else
const char * Telegram_L2LF40::MessageLength = "MessageLength";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF40 { 
  extern const char * MessageId = "MessageId";
} 
#else
const char * Telegram_L2LF40::MessageId = "MessageId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF40 { 
  extern const char * MessageCount = "MessageCount";
} 
#else
const char * Telegram_L2LF40::MessageCount = "MessageCount";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF40 { 
  extern const char * UnitNo = "UnitNo";
} 
#else
const char * Telegram_L2LF40::UnitNo = "UnitNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF40 { 
  extern const char * CreateTime = "CreateTime";
} 
#else
const char * Telegram_L2LF40::CreateTime = "CreateTime";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF40 { 
  extern const char * ParamName = "ParamName";
} 
#else
const char * Telegram_L2LF40::ParamName = "ParamName";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF40 { 
  extern const char * ParamValue = "ParamValue";
} 
#else
const char * Telegram_L2LF40::ParamValue = "ParamValue";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF40 { 
  extern const char * Spare = "Spare";
} 
#else
const char * Telegram_L2LF40::Spare = "Spare";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF70 { 
  extern const char * MessageLength = "MessageLength";
} 
#else
const char * Telegram_L2LF70::MessageLength = "MessageLength";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF70 { 
  extern const char * MessageId = "MessageId";
} 
#else
const char * Telegram_L2LF70::MessageId = "MessageId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF70 { 
  extern const char * MessageCount = "MessageCount";
} 
#else
const char * Telegram_L2LF70::MessageCount = "MessageCount";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF70 { 
  extern const char * UnitNo = "UnitNo";
} 
#else
const char * Telegram_L2LF70::UnitNo = "UnitNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF70 { 
  extern const char * CreateTime = "CreateTime";
} 
#else
const char * Telegram_L2LF70::CreateTime = "CreateTime";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF70 { 
  extern const char * HeatId = "HeatId";
} 
#else
const char * Telegram_L2LF70::HeatId = "HeatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF70 { 
  extern const char * TreatId = "TreatId";
} 
#else
const char * Telegram_L2LF70::TreatId = "TreatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF70 { 
  extern const char * Source = "Source";
} 
#else
const char * Telegram_L2LF70::Source = "Source";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF70 { 
  extern const char * RecipeNo = "RecipeNo";
} 
#else
const char * Telegram_L2LF70::RecipeNo = "RecipeNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF70 { 
  extern const char * MatCode = "MatCode";
} 
#else
const char * Telegram_L2LF70::MatCode = "MatCode";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF70 { 
  extern const char * MatWeight = "MatWeight";
} 
#else
const char * Telegram_L2LF70::MatWeight = "MatWeight";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF70 { 
  extern const char * MatSequence = "MatSequence";
} 
#else
const char * Telegram_L2LF70::MatSequence = "MatSequence";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF70 { 
  extern const char * FeedRate = "FeedRate";
} 
#else
const char * Telegram_L2LF70::FeedRate = "FeedRate";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF70 { 
  extern const char * Spare = "Spare";
} 
#else
const char * Telegram_L2LF70::Spare = "Spare";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF70_MAT_HANDL { 
  extern const char * MessageLength = "MessageLength";
} 
#else
const char * Telegram_L2LF70_MAT_HANDL::MessageLength = "MessageLength";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF70_MAT_HANDL { 
  extern const char * MessageId = "MessageId";
} 
#else
const char * Telegram_L2LF70_MAT_HANDL::MessageId = "MessageId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF70_MAT_HANDL { 
  extern const char * MessageCount = "MessageCount";
} 
#else
const char * Telegram_L2LF70_MAT_HANDL::MessageCount = "MessageCount";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF70_MAT_HANDL { 
  extern const char * UnitNo = "UnitNo";
} 
#else
const char * Telegram_L2LF70_MAT_HANDL::UnitNo = "UnitNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF70_MAT_HANDL { 
  extern const char * CreateTime = "CreateTime";
} 
#else
const char * Telegram_L2LF70_MAT_HANDL::CreateTime = "CreateTime";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF70_MAT_HANDL { 
  extern const char * HeatId = "HeatId";
} 
#else
const char * Telegram_L2LF70_MAT_HANDL::HeatId = "HeatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF70_MAT_HANDL { 
  extern const char * TreatId = "TreatId";
} 
#else
const char * Telegram_L2LF70_MAT_HANDL::TreatId = "TreatId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF70_MAT_HANDL { 
  extern const char * ENTRY = "ENTRY";
} 
#else
const char * Telegram_L2LF70_MAT_HANDL::ENTRY = "ENTRY";
#endif

void
Telegram_L2LF70_MAT_HANDL::sENTRY::operator>>= (cdrStream &_n) const
{
  MessageCount >>= _n;
  MessageIndex >>= _n;
  _n.marshalString(HeatId,0);
  _n.marshalString(TreatId,0);
  Source >>= _n;
  RecipeNo >>= _n;
  _n.marshalString(MatCode,0);
  MatWeight >>= _n;
  MatSequence >>= _n;
  FeedRate >>= _n;
  Spare_1 >>= _n;
  Spare_2 >>= _n;

}

void
Telegram_L2LF70_MAT_HANDL::sENTRY::operator<<= (cdrStream &_n)
{
  (::CORBA::Long&)MessageCount <<= _n;
  (::CORBA::Long&)MessageIndex <<= _n;
  HeatId = _n.unmarshalString(0);
  TreatId = _n.unmarshalString(0);
  (::CORBA::Long&)Source <<= _n;
  (::CORBA::Long&)RecipeNo <<= _n;
  MatCode = _n.unmarshalString(0);
  (::CORBA::Long&)MatWeight <<= _n;
  (::CORBA::Long&)MatSequence <<= _n;
  (::CORBA::Long&)FeedRate <<= _n;
  (::CORBA::Long&)Spare_1 <<= _n;
  (::CORBA::Long&)Spare_2 <<= _n;

}

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF71 { 
  extern const char * MessageLength = "MessageLength";
} 
#else
const char * Telegram_L2LF71::MessageLength = "MessageLength";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF71 { 
  extern const char * MessageId = "MessageId";
} 
#else
const char * Telegram_L2LF71::MessageId = "MessageId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF71 { 
  extern const char * MessageCount = "MessageCount";
} 
#else
const char * Telegram_L2LF71::MessageCount = "MessageCount";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF71 { 
  extern const char * UnitNo = "UnitNo";
} 
#else
const char * Telegram_L2LF71::UnitNo = "UnitNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF71 { 
  extern const char * CreateTime = "CreateTime";
} 
#else
const char * Telegram_L2LF71::CreateTime = "CreateTime";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF71 { 
  extern const char * Spare = "Spare";
} 
#else
const char * Telegram_L2LF71::Spare = "Spare";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF72 { 
  extern const char * MessageLength = "MessageLength";
} 
#else
const char * Telegram_L2LF72::MessageLength = "MessageLength";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF72 { 
  extern const char * MessageId = "MessageId";
} 
#else
const char * Telegram_L2LF72::MessageId = "MessageId";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF72 { 
  extern const char * MessageCount = "MessageCount";
} 
#else
const char * Telegram_L2LF72::MessageCount = "MessageCount";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF72 { 
  extern const char * UnitNo = "UnitNo";
} 
#else
const char * Telegram_L2LF72::UnitNo = "UnitNo";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF72 { 
  extern const char * CreateTime = "CreateTime";
} 
#else
const char * Telegram_L2LF72::CreateTime = "CreateTime";
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace Telegram_L2LF72 { 
  extern const char * Spare = "Spare";
} 
#else
const char * Telegram_L2LF72::Spare = "Spare";
#endif

