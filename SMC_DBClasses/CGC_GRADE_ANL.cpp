//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 


#include "CGC_GRADE_ANL.h"


//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_GRADE_ANL::PLANT("PLANT");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_GRADE_ANL::AIMTYPE("AIMTYPE");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_GRADE_ANL::HMIDESCR("HMIDESCR");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_GRADE_ANL::HMIORDER("HMIORDER");

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_GRADE_ANL::CGC_GRADE_ANL(cCBS_StdConnection* Connection)
:CSMC_DBData("GC_GRADE_ANL",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_GRADE_ANL::CGC_GRADE_ANL(cCBS_Connection* Connection)
:CSMC_DBData("GC_GRADE_ANL",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_GRADE_ANL::CGC_GRADE_ANL()
:CSMC_DBData("GC_GRADE_ANL")
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_GRADE_ANL::~CGC_GRADE_ANL()
{
  //please implement virtual method, to destruct your members
  doOnDestruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Plant identifier
std::string CGC_GRADE_ANL::getPLANT(long Row)
{
  return getString(CGC_GRADE_ANL::PLANT, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_GRADE_ANL::setPLANT(const std::string& value)
{
  setString(CGC_GRADE_ANL::PLANT, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Min, Max, Aim
std::string CGC_GRADE_ANL::getAIMTYPE(long Row)
{
  return getString(CGC_GRADE_ANL::AIMTYPE, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_GRADE_ANL::setAIMTYPE(const std::string& value)
{
  setString(CGC_GRADE_ANL::AIMTYPE, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Text to be shown in HMI
std::string CGC_GRADE_ANL::getHMIDESCR(long Row)
{
  return getString(CGC_GRADE_ANL::HMIDESCR, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_GRADE_ANL::setHMIDESCR(const std::string& value)
{
  setString(CGC_GRADE_ANL::HMIDESCR, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Order to be shown in HMI
long CGC_GRADE_ANL::getHMIORDER(long Row)
{
  return getLong(CGC_GRADE_ANL::HMIORDER, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_GRADE_ANL::setHMIORDER(long value)
{
  setLong(CGC_GRADE_ANL::HMIORDER, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
bool CGC_GRADE_ANL::select(const std::string& PLANT, const std::string& AIMTYPE)
{
  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause(CGC_GRADE_ANL::PLANT,PLANT);
  addWhereClause(CGC_GRADE_ANL::AIMTYPE,AIMTYPE);
  m_Statement += getWhereStatement() + ";";

  return CSMC_DBData::select();
}

//## ------------------------------------END-GENERATED-CODE---------------------- 

//## ------------------------------------YOUR-CODE------------------------------- 


