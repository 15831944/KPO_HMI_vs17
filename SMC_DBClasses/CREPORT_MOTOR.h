//## Copyright (C) 2014 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CREPORT_MOTOR_INCLUDED
#define _INC_CREPORT_MOTOR_INCLUDED

#include "CSMC_DBData.h"

class CREPORT_MOTOR
: public CSMC_DBData

{

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string MOTORID;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PLANT;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string DESCRIPTION;

  //##DBClassCodeUtility ! DO NOT EDIT !
  CREPORT_MOTOR(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CREPORT_MOTOR(cCBS_Connection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CREPORT_MOTOR();

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CREPORT_MOTOR();

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Motor ID
  long getMOTORID(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setMOTORID(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Plant Name
  std::string getPLANT(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPLANT(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Description of Motor
  std::string getDESCRIPTION(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setDESCRIPTION(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(long MOTORID);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 

};

#endif /* _INC_CREPORT_MOTOR_INCLUDED */
