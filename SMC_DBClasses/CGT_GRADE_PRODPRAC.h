//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CGT_GRADE_PRODPRAC_INCLUDED
#define _INC_CGT_GRADE_PRODPRAC_INCLUDED

#include "CSMC_DBData.h"

class CGT_GRADE_PRODPRAC
: public CSMC_DBData
{

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PLANT;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PLANTNO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string STEELGRADECODE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string DESCR_PP;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string HEATING_MODE_NO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PRODPRAC_ID;

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGT_GRADE_PRODPRAC(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGT_GRADE_PRODPRAC(cCBS_Connection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGT_GRADE_PRODPRAC();

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CGT_GRADE_PRODPRAC();

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Plant identifier
  std::string getPLANT(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPLANT(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Plant number
  long getPLANTNO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPLANTNO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Steel grade code
  std::string getSTEELGRADECODE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSTEELGRADECODE(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Name of practice pointer or practice group
  std::string getDESCR_PP(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setDESCR_PP(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getHEATING_MODE_NO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setHEATING_MODE_NO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Production Practice related to Production Description
  long getPRODPRAC_ID(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPRODPRAC_ID(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(const std::string& PLANT, long PLANTNO, const std::string& STEELGRADECODE, const std::string& DESCR_PP, long HEATING_MODE_NO);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 

  bool selectByPlant(const std::string& PLANT, long PLANTNO, long HEATING_MODE_NO);

  bool selectBySteelGrade(const std::string& STEELGRADECODE, const std::string& DESCR_PP, long HEATING_MODE_NO);

  bool deleteProdPrac(const std::string& PLANT, long PLANTNO, const std::string& STEELGRADECODE, const std::string& DESCR_PP, long HEATING_MODE_NO);

  bool writeProdPrac(const std::string& PLANT, long PLANTNO, const std::string& STEELGRADECODE, long HEATING_MODE_NO, std::map< std::string, long> PRODPRAC_ID_LIST , bool Commit);

  bool writeProdPrac(const std::string& PLANT, long PLANTNO, const std::string& STEELGRADECODE, const std::string& DESCR_PP, long HEATING_MODE_NO, long PRODPRAC_ID, bool Commit);

};

#endif /* _INC_CGT_GRADE_PRODPRAC_INCLUDED */
