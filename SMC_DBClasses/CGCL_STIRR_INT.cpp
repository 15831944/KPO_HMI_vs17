//## Copyright (C) 2012 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 


#include "CGCL_STIRR_INT.h"


//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGCL_STIRR_INT::INTENSITY("INTENSITY");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGCL_STIRR_INT::INTDESCRSHORT("INTDESCRSHORT");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGCL_STIRR_INT::INTDESCR("INTDESCR");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGCL_STIRR_INT::STIRRFLOW("STIRRFLOW");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGCL_STIRR_INT::INTCODEMODEL("INTCODEMODEL");

//##DBClassCodeUtility ! DO NOT EDIT !
CGCL_STIRR_INT::CGCL_STIRR_INT(cCBS_StdConnection* Connection)
:CSMC_DBData("GCL_STIRR_INT",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGCL_STIRR_INT::CGCL_STIRR_INT(cCBS_Connection* Connection)
:CSMC_DBData("GCL_STIRR_INT",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGCL_STIRR_INT::CGCL_STIRR_INT()
:CSMC_DBData("GCL_STIRR_INT")
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGCL_STIRR_INT::~CGCL_STIRR_INT()
{
  //please implement virtual method, to destruct your members
  doOnDestruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
long CGCL_STIRR_INT::getINTENSITY(long Row)
{
  return getLong(CGCL_STIRR_INT::INTENSITY, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGCL_STIRR_INT::setINTENSITY(long value)
{
  setLong(CGCL_STIRR_INT::INTENSITY, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CGCL_STIRR_INT::getINTDESCRSHORT(long Row)
{
  return getString(CGCL_STIRR_INT::INTDESCRSHORT, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGCL_STIRR_INT::setINTDESCRSHORT(const std::string& value)
{
  setString(CGCL_STIRR_INT::INTDESCRSHORT, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CGCL_STIRR_INT::getINTDESCR(long Row)
{
  return getString(CGCL_STIRR_INT::INTDESCR, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGCL_STIRR_INT::setINTDESCR(const std::string& value)
{
  setString(CGCL_STIRR_INT::INTDESCR, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CGCL_STIRR_INT::getSTIRRFLOW(long Row)
{
  return getDouble(CGCL_STIRR_INT::STIRRFLOW, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGCL_STIRR_INT::setSTIRRFLOW(double value)
{
  setDouble(CGCL_STIRR_INT::STIRRFLOW, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CGCL_STIRR_INT::getINTCODEMODEL(long Row)
{
  return getString(CGCL_STIRR_INT::INTCODEMODEL, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGCL_STIRR_INT::setINTCODEMODEL(const std::string& value)
{
  setString(CGCL_STIRR_INT::INTCODEMODEL, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
bool CGCL_STIRR_INT::select(long INTENSITY)
{
  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause(CGCL_STIRR_INT::INTENSITY,INTENSITY);
  m_Statement += getWhereStatement() + ";";

  return CSMC_DBData::select();
}

//## ------------------------------------END-GENERATED-CODE---------------------- 

//## ------------------------------------YOUR-CODE------------------------------- 

long CGCL_STIRR_INT::getIntensityFromFlow(double flow)
{
  long   Intensity  = 0;
  double LowerLimit = 0.;
  double UpperLimit = 0.;

  m_Statement = "Select * from " + m_TableName + " ORDER BY STIRRFLOW ASC;";
	
  if ( CSMC_DBData::select() )
  {
    for (int RowCount = 1; RowCount <= CSMC_DBData::getLastRow() ; ++RowCount)
    {

      UpperLimit = getSTIRRFLOW(RowCount);

      // check abs values
      if ( flow >= LowerLimit && flow < UpperLimit)
        break;

      LowerLimit = UpperLimit;
      Intensity  = getINTENSITY(RowCount);

    }
  }

  return Intensity;
}


