//## Copyright (C) 2011 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 


#include "CGC_STATUS.h"


//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_STATUS::STATUSNO("STATUSNO");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_STATUS::PLANT("PLANT");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_STATUS::STATUSNAME("STATUSNAME");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_STATUS::STATUSDESCR("STATUSDESCR");

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_STATUS::CGC_STATUS(cCBS_StdConnection* Connection)
:CSMC_DBData("GC_STATUS",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_STATUS::CGC_STATUS(cCBS_Connection* Connection)
:CSMC_DBData("GC_STATUS",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_STATUS::CGC_STATUS()
:CSMC_DBData("GC_STATUS")
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_STATUS::~CGC_STATUS()
{
  //please implement virtual method, to destruct your members
  doOnDestruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Super-set of the states from GC_HEAT_STAT to be used for the HMI button activation mechanism.
long CGC_STATUS::getSTATUSNO(long Row)
{
  return getLong(CGC_STATUS::STATUSNO, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_STATUS::setSTATUSNO(long value)
{
  setLong(CGC_STATUS::STATUSNO, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Plant identifier
std::string CGC_STATUS::getPLANT(long Row)
{
  return getString(CGC_STATUS::PLANT, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_STATUS::setPLANT(const std::string& value)
{
  setString(CGC_STATUS::PLANT, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Status name, used for generation of definition in header files (one word only)
std::string CGC_STATUS::getSTATUSNAME(long Row)
{
  return getString(CGC_STATUS::STATUSNAME, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_STATUS::setSTATUSNAME(const std::string& value)
{
  setString(CGC_STATUS::STATUSNAME, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Description of Status
std::string CGC_STATUS::getSTATUSDESCR(long Row)
{
  return getString(CGC_STATUS::STATUSDESCR, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_STATUS::setSTATUSDESCR(const std::string& value)
{
  setString(CGC_STATUS::STATUSDESCR, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
bool CGC_STATUS::select(long STATUSNO)
{
  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause(CGC_STATUS::STATUSNO,STATUSNO);
  m_Statement += getWhereStatement() + ";";

  return CSMC_DBData::select();
}

//## ------------------------------------END-GENERATED-CODE---------------------- 

//## ------------------------------------YOUR-CODE------------------------------- 

bool CGC_STATUS::select(const std::string &PLANT, const std::string &STATUSNAME)
{
  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause(CGC_STATUS::PLANT, PLANT);
  addWhereClause(CGC_STATUS::STATUSNAME, STATUSNAME);

  m_Statement += getWhereStatement() + ";";

  return CSMC_DBData::select();  
}


std::string CGC_STATUS::getStatusDescr(long HEATSTATUSNO)
{
  std::string StatusDescr = CSMC_DBData::unspecString;
	
  if( select(HEATSTATUSNO))  
  {
    StatusDescr = getSTATUSDESCR(1);
  }

	return StatusDescr;
}

long CGC_STATUS::getStatusNo(const std::string &PLANT, const std::string &STATUSNAME)
{
  long returnValue = -1;
	
	cleanWhereStatement();
	m_Statement = "Select * from " + m_TableName;

  addWhereClause(CGC_STATUS::PLANT, PLANT);
  addWhereClause(CGC_STATUS::STATUSNAME, STATUSNAME);

  m_Statement += getWhereStatement() + ";";

  if(CSMC_DBData::select())  
  {
    returnValue = getSTATUSNO(1);
  }

	return returnValue;
}



std::vector<long> CGC_STATUS::getPlantRelatedStates(const std::string& PLANT)
{
  std::vector<long> PlantRelatedStates;

  if ( select(PLANT, CSMC_DBData::unspecString) )
  {
    for ( long i = 1; i <= getLastRow(); ++i )
    {
      PlantRelatedStates.push_back(getSTATUSNO(i));
    }
  }

  return PlantRelatedStates;
}


