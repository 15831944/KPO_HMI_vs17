//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 


#include "CGCE_PRACPHASE_STEP.h"


//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGCE_PRACPHASE_STEP::PLANT("PLANT");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGCE_PRACPHASE_STEP::PRACPHASE("PRACPHASE");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGCE_PRACPHASE_STEP::STEPNO("STEPNO");

//##DBClassCodeUtility ! DO NOT EDIT !
CGCE_PRACPHASE_STEP::CGCE_PRACPHASE_STEP(cCBS_StdConnection* Connection)
:CSMC_DBData("GCE_PRACPHASE_STEP",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGCE_PRACPHASE_STEP::CGCE_PRACPHASE_STEP(cCBS_Connection* Connection)
:CSMC_DBData("GCE_PRACPHASE_STEP",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGCE_PRACPHASE_STEP::CGCE_PRACPHASE_STEP()
:CSMC_DBData("GCE_PRACPHASE_STEP")
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGCE_PRACPHASE_STEP::~CGCE_PRACPHASE_STEP()
{
  //please implement virtual method, to destruct your members
  doOnDestruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CGCE_PRACPHASE_STEP::getPLANT(long Row)
{
  return getString(CGCE_PRACPHASE_STEP::PLANT, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGCE_PRACPHASE_STEP::setPLANT(const std::string& value)
{
  setString(CGCE_PRACPHASE_STEP::PLANT, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CGCE_PRACPHASE_STEP::getPRACPHASE(long Row)
{
  return getString(CGCE_PRACPHASE_STEP::PRACPHASE, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGCE_PRACPHASE_STEP::setPRACPHASE(const std::string& value)
{
  setString(CGCE_PRACPHASE_STEP::PRACPHASE, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
long CGCE_PRACPHASE_STEP::getSTEPNO(long Row)
{
  return getLong(CGCE_PRACPHASE_STEP::STEPNO, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGCE_PRACPHASE_STEP::setSTEPNO(long value)
{
  setLong(CGCE_PRACPHASE_STEP::STEPNO, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
bool CGCE_PRACPHASE_STEP::select(const std::string& PLANT, const std::string& PRACPHASE, long STEPNO)
{
  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause(CGCE_PRACPHASE_STEP::PLANT,PLANT);
  addWhereClause(CGCE_PRACPHASE_STEP::PRACPHASE,PRACPHASE);
  addWhereClause(CGCE_PRACPHASE_STEP::STEPNO,STEPNO);
  m_Statement += getWhereStatement() + ";";

  return CSMC_DBData::select();
}

//## ------------------------------------END-GENERATED-CODE---------------------- 

//## ------------------------------------YOUR-CODE------------------------------- 


