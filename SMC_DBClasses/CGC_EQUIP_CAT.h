//## Copyright (C) 2011 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CGC_EQUIP_CAT_INCLUDED
#define _INC_CGC_EQUIP_CAT_INCLUDED

#include "CSMC_DBData.h"

class CGC_EQUIP_CAT
: public CSMC_DBData

{

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string EQUIP_ID;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string EQUIP_TYPE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string EQUIP_ID_CUST;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string EQUIP_NO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string TEXT_;

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGC_EQUIP_CAT(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGC_EQUIP_CAT(cCBS_Connection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGC_EQUIP_CAT();

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CGC_EQUIP_CAT();

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Equipment identification 
  long getEQUIP_ID(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setEQUIP_ID(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Equipment type 
  std::string getEQUIP_TYPE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setEQUIP_TYPE(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Customer specific equipment identification
  std::string getEQUIP_ID_CUST(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setEQUIP_ID_CUST(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Counter for equipment type
  long getEQUIP_NO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setEQUIP_NO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Description of equipment
  std::string getTEXT(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setTEXT(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(long EQUIP_ID);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 

  bool selectByEquipIdList(std::vector<long> EQUIP_ID_LIST);

  std::vector<long> getEquipIdList(const std::string& EQUIP_ID_CUST, const std::string& EQUIP_TYPE);

	//sankar
	bool InsertData(long EQUIP_ID,const std::string &EQUIP_TYPE, const std::string &EQUIP_ID_CUST, long EQUIP_NO,const std::string &TEXT, bool Commit, cCBS_ODBC_DBError &Error);
	long GetMaxEQUIP_ID();


};

#endif /* _INC_CGC_EQUIP_CAT_INCLUDED */
