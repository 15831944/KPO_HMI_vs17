//## Copyright (C) 2011 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 


#include "CPD_LADLE_ROUTES.h"


//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CPD_LADLE_ROUTES::LADLENO("LADLENO");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CPD_LADLE_ROUTES::LADLETYPE("LADLETYPE");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CPD_LADLE_ROUTES::ARRIVAL_PLAN("ARRIVAL_PLAN");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CPD_LADLE_ROUTES::LADLEPOSID("LADLEPOSID");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CPD_LADLE_ROUTES::DEPART_PLAN("DEPART_PLAN");

//##DBClassCodeUtility ! DO NOT EDIT !
CPD_LADLE_ROUTES::CPD_LADLE_ROUTES(cCBS_StdConnection* Connection)
:CSMC_DBData("PD_LADLE_ROUTES",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CPD_LADLE_ROUTES::CPD_LADLE_ROUTES(cCBS_Connection* Connection)
:CSMC_DBData("PD_LADLE_ROUTES",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CPD_LADLE_ROUTES::CPD_LADLE_ROUTES()
:CSMC_DBData("PD_LADLE_ROUTES")
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CPD_LADLE_ROUTES::~CPD_LADLE_ROUTES()
{
  //please implement virtual method, to destruct your members
  doOnDestruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Unique ladle number
long CPD_LADLE_ROUTES::getLADLENO(long Row)
{
  return getLong(CPD_LADLE_ROUTES::LADLENO, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CPD_LADLE_ROUTES::setLADLENO(long value)
{
  setLong(CPD_LADLE_ROUTES::LADLENO, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##e.g. Hot Metal -> H, Teeming -> T
std::string CPD_LADLE_ROUTES::getLADLETYPE(long Row)
{
  return getString(CPD_LADLE_ROUTES::LADLETYPE, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CPD_LADLE_ROUTES::setLADLETYPE(const std::string& value)
{
  setString(CPD_LADLE_ROUTES::LADLETYPE, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Planned arrival time
CDateTime CPD_LADLE_ROUTES::getARRIVAL_PLAN(long Row)
{
  CDateTime D;
  D.fromDBString(getString(CPD_LADLE_ROUTES::ARRIVAL_PLAN, Row));
  return D;
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CPD_LADLE_ROUTES::setARRIVAL_PLAN(const CDateTime& value)
{
 setString(CPD_LADLE_ROUTES::ARRIVAL_PLAN, value.toDBString());
}

//##DBClassCodeUtility ! DO NOT EDIT !
long CPD_LADLE_ROUTES::getLADLEPOSID(long Row)
{
  return getLong(CPD_LADLE_ROUTES::LADLEPOSID, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CPD_LADLE_ROUTES::setLADLEPOSID(long value)
{
  setLong(CPD_LADLE_ROUTES::LADLEPOSID, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Planned departure time
CDateTime CPD_LADLE_ROUTES::getDEPART_PLAN(long Row)
{
  CDateTime D;
  D.fromDBString(getString(CPD_LADLE_ROUTES::DEPART_PLAN, Row));
  return D;
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CPD_LADLE_ROUTES::setDEPART_PLAN(const CDateTime& value)
{
 setString(CPD_LADLE_ROUTES::DEPART_PLAN, value.toDBString());
}

//##DBClassCodeUtility ! DO NOT EDIT !
bool CPD_LADLE_ROUTES::select(long LADLENO, const std::string& LADLETYPE, const CDateTime& ARRIVAL_PLAN)
{
  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause(CPD_LADLE_ROUTES::LADLENO,LADLENO);
  addWhereClause(CPD_LADLE_ROUTES::LADLETYPE,LADLETYPE);
  addWhereClause(CPD_LADLE_ROUTES::ARRIVAL_PLAN,ARRIVAL_PLAN);
  m_Statement += getWhereStatement() + ";";

  return CSMC_DBData::select();
}

//## ------------------------------------END-GENERATED-CODE---------------------- 

//## ------------------------------------YOUR-CODE------------------------------- 


