//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 


#include "CGCL_STIRR_PHASE.h"


//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGCL_STIRR_PHASE::PRACPHASE("PRACPHASE");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGCL_STIRR_PHASE::FLAGDUR("FLAGDUR");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGCL_STIRR_PHASE::PRACPHASEORDERNO("PRACPHASEORDERNO");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGCL_STIRR_PHASE::PRACPHASEDESCR("PRACPHASEDESCR");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGCL_STIRR_PHASE::PRACPHASEMODEL("PRACPHASEMODEL");

//##DBClassCodeUtility ! DO NOT EDIT !
CGCL_STIRR_PHASE::CGCL_STIRR_PHASE(cCBS_StdConnection* Connection)
:CSMC_DBData("GCL_STIRR_PHASE",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGCL_STIRR_PHASE::CGCL_STIRR_PHASE(cCBS_Connection* Connection)
:CSMC_DBData("GCL_STIRR_PHASE",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGCL_STIRR_PHASE::CGCL_STIRR_PHASE()
:CSMC_DBData("GCL_STIRR_PHASE")
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGCL_STIRR_PHASE::~CGCL_STIRR_PHASE()
{
  //please implement virtual method, to destruct your members
  doOnDestruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CGCL_STIRR_PHASE::getPRACPHASE(long Row)
{
  return getString(CGCL_STIRR_PHASE::PRACPHASE, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGCL_STIRR_PHASE::setPRACPHASE(const std::string& value)
{
  setString(CGCL_STIRR_PHASE::PRACPHASE, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
long CGCL_STIRR_PHASE::getFLAGDUR(long Row)
{
  return getLong(CGCL_STIRR_PHASE::FLAGDUR, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGCL_STIRR_PHASE::setFLAGDUR(long value)
{
  setLong(CGCL_STIRR_PHASE::FLAGDUR, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
long CGCL_STIRR_PHASE::getPRACPHASEORDERNO(long Row)
{
  return getLong(CGCL_STIRR_PHASE::PRACPHASEORDERNO, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGCL_STIRR_PHASE::setPRACPHASEORDERNO(long value)
{
  setLong(CGCL_STIRR_PHASE::PRACPHASEORDERNO, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CGCL_STIRR_PHASE::getPRACPHASEDESCR(long Row)
{
  return getString(CGCL_STIRR_PHASE::PRACPHASEDESCR, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGCL_STIRR_PHASE::setPRACPHASEDESCR(const std::string& value)
{
  setString(CGCL_STIRR_PHASE::PRACPHASEDESCR, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CGCL_STIRR_PHASE::getPRACPHASEMODEL(long Row)
{
  return getString(CGCL_STIRR_PHASE::PRACPHASEMODEL, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGCL_STIRR_PHASE::setPRACPHASEMODEL(const std::string& value)
{
  setString(CGCL_STIRR_PHASE::PRACPHASEMODEL, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
bool CGCL_STIRR_PHASE::select(const std::string& PRACPHASE)
{
  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause(CGCL_STIRR_PHASE::PRACPHASE,PRACPHASE);
  m_Statement += getWhereStatement() + ";";

  return CSMC_DBData::select();
}

//## ------------------------------------END-GENERATED-CODE---------------------- 

//## ------------------------------------YOUR-CODE------------------------------- 

bool CGCL_STIRR_PHASE::selectAllOrdered(std::string& ORDERBY)
{
	cleanWhereStatement();
	
	m_Statement = "Select * from " + m_TableName;
	
	m_Statement += " ORDER BY " + ORDERBY + ";";
	
	return CSMC_DBData::select();

}

bool CGCL_STIRR_PHASE::selectByPracPhaseModel(const std::string& PRACPHASEMODEL)
{
  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause(CGCL_STIRR_PHASE::PRACPHASEMODEL,PRACPHASEMODEL);

  m_Statement += getWhereStatement() + ";";

  return CSMC_DBData::select();
}


