//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 


#include "CGC_LADLE_TYPE.h"


//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_LADLE_TYPE::LADLETYPE("LADLETYPE");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_LADLE_TYPE::LADLETYPEDESCR("LADLETYPEDESCR");

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_LADLE_TYPE::CGC_LADLE_TYPE(cCBS_StdConnection* Connection)
:CSMC_DBData("GC_LADLE_TYPE",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_LADLE_TYPE::CGC_LADLE_TYPE(cCBS_Connection* Connection)
:CSMC_DBData("GC_LADLE_TYPE",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_LADLE_TYPE::CGC_LADLE_TYPE()
:CSMC_DBData("GC_LADLE_TYPE")
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_LADLE_TYPE::~CGC_LADLE_TYPE()
{
  //please implement virtual method, to destruct your members
  doOnDestruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##e.g. Hot Metal -> H, Teeming -> T
std::string CGC_LADLE_TYPE::getLADLETYPE(long Row)
{
  return getString(CGC_LADLE_TYPE::LADLETYPE, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_LADLE_TYPE::setLADLETYPE(const std::string& value)
{
  setString(CGC_LADLE_TYPE::LADLETYPE, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CGC_LADLE_TYPE::getLADLETYPEDESCR(long Row)
{
  return getString(CGC_LADLE_TYPE::LADLETYPEDESCR, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_LADLE_TYPE::setLADLETYPEDESCR(const std::string& value)
{
  setString(CGC_LADLE_TYPE::LADLETYPEDESCR, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
bool CGC_LADLE_TYPE::select(const std::string& LADLETYPE)
{
  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause(CGC_LADLE_TYPE::LADLETYPE,LADLETYPE);
  m_Statement += getWhereStatement() + ";";

  return CSMC_DBData::select();
}

//## ------------------------------------END-GENERATED-CODE---------------------- 

//## ------------------------------------YOUR-CODE------------------------------- 

bool CGC_LADLE_TYPE::isValidType(const std::string& LADLETYPE)
{
  return select(LADLETYPE);
}


