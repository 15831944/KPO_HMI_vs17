//## Copyright (C) 2011 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 


#include "CGD_SHIFT_PATTERN.h"


//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGD_SHIFT_PATTERN::PATTERN_NO("PATTERN_NO");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGD_SHIFT_PATTERN::SHIFT_TYPE("SHIFT_TYPE");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGD_SHIFT_PATTERN::SHIFT_ID("SHIFT_ID");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGD_SHIFT_PATTERN::DAY_IN_PATTERN("DAY_IN_PATTERN");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGD_SHIFT_PATTERN::CREW_ID("CREW_ID");

//##DBClassCodeUtility ! DO NOT EDIT !
CGD_SHIFT_PATTERN::CGD_SHIFT_PATTERN(cCBS_StdConnection* Connection)
:CSMC_DBData("GD_SHIFT_PATTERN",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGD_SHIFT_PATTERN::CGD_SHIFT_PATTERN(cCBS_Connection* Connection)
:CSMC_DBData("GD_SHIFT_PATTERN",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGD_SHIFT_PATTERN::CGD_SHIFT_PATTERN()
:CSMC_DBData("GD_SHIFT_PATTERN")
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGD_SHIFT_PATTERN::~CGD_SHIFT_PATTERN()
{
  //please implement virtual method, to destruct your members
  doOnDestruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Identification of pattern 
long CGD_SHIFT_PATTERN::getPATTERN_NO(long Row)
{
  return getLong(CGD_SHIFT_PATTERN::PATTERN_NO, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGD_SHIFT_PATTERN::setPATTERN_NO(long value)
{
  setLong(CGD_SHIFT_PATTERN::PATTERN_NO, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Type of shift from GC_SHIFT_CAT
long CGD_SHIFT_PATTERN::getSHIFT_TYPE(long Row)
{
  return getLong(CGD_SHIFT_PATTERN::SHIFT_TYPE, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGD_SHIFT_PATTERN::setSHIFT_TYPE(long value)
{
  setLong(CGD_SHIFT_PATTERN::SHIFT_TYPE, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Shift code of GC_SHIFT_CAT
std::string CGD_SHIFT_PATTERN::getSHIFT_ID(long Row)
{
  return getString(CGD_SHIFT_PATTERN::SHIFT_ID, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGD_SHIFT_PATTERN::setSHIFT_ID(const std::string& value)
{
  setString(CGD_SHIFT_PATTERN::SHIFT_ID, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Day within this pattern
long CGD_SHIFT_PATTERN::getDAY_IN_PATTERN(long Row)
{
  return getLong(CGD_SHIFT_PATTERN::DAY_IN_PATTERN, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGD_SHIFT_PATTERN::setDAY_IN_PATTERN(long value)
{
  setLong(CGD_SHIFT_PATTERN::DAY_IN_PATTERN, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Crew Id from GC_CREW_CAT
std::string CGD_SHIFT_PATTERN::getCREW_ID(long Row)
{
  return getString(CGD_SHIFT_PATTERN::CREW_ID, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGD_SHIFT_PATTERN::setCREW_ID(const std::string& value)
{
  setString(CGD_SHIFT_PATTERN::CREW_ID, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
bool CGD_SHIFT_PATTERN::select(long PATTERN_NO, long SHIFT_TYPE, const std::string& SHIFT_ID, long DAY_IN_PATTERN)
{
  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause(CGD_SHIFT_PATTERN::PATTERN_NO,PATTERN_NO);
  addWhereClause(CGD_SHIFT_PATTERN::SHIFT_TYPE,SHIFT_TYPE);
  addWhereClause(CGD_SHIFT_PATTERN::SHIFT_ID,SHIFT_ID);
  addWhereClause(CGD_SHIFT_PATTERN::DAY_IN_PATTERN,DAY_IN_PATTERN);
  m_Statement += getWhereStatement() + ";";

  return CSMC_DBData::select();
}

//## ------------------------------------END-GENERATED-CODE---------------------- 

//## ------------------------------------YOUR-CODE------------------------------- 


