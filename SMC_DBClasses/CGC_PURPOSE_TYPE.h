//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CGC_PURPOSE_TYPE_INCLUDED
#define _INC_CGC_PURPOSE_TYPE_INCLUDED

#include "CSMC_DBData.h"

class CGC_PURPOSE_TYPE
: public CSMC_DBData
{

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PURP_TYPENO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string DESCR_SHORT;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string EDIT_ACTIVATION;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string MAT_MIN;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string MAT_MAX;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string DESCRIPTION_C;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string DESCRIPTION;

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGC_PURPOSE_TYPE(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGC_PURPOSE_TYPE(cCBS_Connection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGC_PURPOSE_TYPE();

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CGC_PURPOSE_TYPE();

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Type of purpose, e.g. Material Class, Recipe
  long getPURP_TYPENO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPURP_TYPENO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getDESCR_SHORT(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setDESCR_SHORT(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##HMI: Defines if the purpose can be edited or deleted by the user. The related material can always be edited., 1- edit not possible, 2 - edit possible
  long getEDIT_ACTIVATION(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setEDIT_ACTIVATION(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Defines minimum number of material allowed to be assigned to a purpose
  long getMAT_MIN(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setMAT_MIN(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Defines maximum number of material allowed to be assigned to a purpose
  long getMAT_MAX(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setMAT_MAX(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getDESCRIPTION_C(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setDESCRIPTION_C(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getDESCRIPTION(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setDESCRIPTION(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(long PURP_TYPENO);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 

};

#endif /* _INC_CGC_PURPOSE_TYPE_INCLUDED */
