//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CPP_SHIFT_CREW_ASSIGNMENT_INCLUDED
#define _INC_CPP_SHIFT_CREW_ASSIGNMENT_INCLUDED

#include "CSMC_DBData.h"

class CPP_SHIFT_CREW_ASSIGNMENT
: public CSMC_DBData
{

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string SHIFT_TYPE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string SHIFT_ID;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string SHIFT_START_DATE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string CREW_ID;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PATTERN_NO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string DAY_IN_PATTERN;

  //##DBClassCodeUtility ! DO NOT EDIT !
  CPP_SHIFT_CREW_ASSIGNMENT(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CPP_SHIFT_CREW_ASSIGNMENT(cCBS_Connection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CPP_SHIFT_CREW_ASSIGNMENT();

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CPP_SHIFT_CREW_ASSIGNMENT();

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Shift type
  long getSHIFT_TYPE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSHIFT_TYPE(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Identifier for the shift (e.g. 1=early/2=late/3=night shift)
  std::string getSHIFT_ID(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSHIFT_ID(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Start date of shift as: yyyy-mm-dd
  std::string getSHIFT_START_DATE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSHIFT_START_DATE(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Id of working crew
  std::string getCREW_ID(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setCREW_ID(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Id of shift pattern
  long getPATTERN_NO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPATTERN_NO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Day in pattern from GC_SHIFT_PATTERN
  long getDAY_IN_PATTERN(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setDAY_IN_PATTERN(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(long SHIFT_TYPE, const std::string& SHIFT_ID, const std::string& SHIFT_START_DATE);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 

  bool selectOrdered(long SHIFT_TYPE, const std::string& SHIFT_ID, const CDateTime& SHIFT_START_DATE);

  bool selectOrderedBeforeTime(const CDateTime& DATE);

};

#endif /* _INC_CPP_SHIFT_CREW_ASSIGNMENT_INCLUDED */
