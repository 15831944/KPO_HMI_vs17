//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 


#include "CGTL_PP_EL_STEP.h"


//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGTL_PP_EL_STEP::PLANTNO("PLANTNO");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGTL_PP_EL_STEP::PRACNO("PRACNO");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGTL_PP_EL_STEP::ACTIVITYNAME("ACTIVITYNAME");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGTL_PP_EL_STEP::PRACPHASE("PRACPHASE");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGTL_PP_EL_STEP::STEPNO("STEPNO");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGTL_PP_EL_STEP::DURATION("DURATION");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGTL_PP_EL_STEP::DELTA_TEMP("DELTA_TEMP");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGTL_PP_EL_STEP::VOLTTAP("VOLTTAP");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGTL_PP_EL_STEP::IMPCURVE("IMPCURVE");

//##DBClassCodeUtility ! DO NOT EDIT !
CGTL_PP_EL_STEP::CGTL_PP_EL_STEP(cCBS_StdConnection* Connection)
:CSMC_DBData("GTL_PP_EL_STEP",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGTL_PP_EL_STEP::CGTL_PP_EL_STEP(cCBS_Connection* Connection)
:CSMC_DBData("GTL_PP_EL_STEP",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGTL_PP_EL_STEP::CGTL_PP_EL_STEP()
:CSMC_DBData("GTL_PP_EL_STEP")
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGTL_PP_EL_STEP::~CGTL_PP_EL_STEP()
{
  //please implement virtual method, to destruct your members
  doOnDestruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
long CGTL_PP_EL_STEP::getPLANTNO(long Row)
{
  return getLong(CGTL_PP_EL_STEP::PLANTNO, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGTL_PP_EL_STEP::setPLANTNO(long value)
{
  setLong(CGTL_PP_EL_STEP::PLANTNO, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
long CGTL_PP_EL_STEP::getPRACNO(long Row)
{
  return getLong(CGTL_PP_EL_STEP::PRACNO, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGTL_PP_EL_STEP::setPRACNO(long value)
{
  setLong(CGTL_PP_EL_STEP::PRACNO, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CGTL_PP_EL_STEP::getACTIVITYNAME(long Row)
{
  return getString(CGTL_PP_EL_STEP::ACTIVITYNAME, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGTL_PP_EL_STEP::setACTIVITYNAME(const std::string& value)
{
  setString(CGTL_PP_EL_STEP::ACTIVITYNAME, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CGTL_PP_EL_STEP::getPRACPHASE(long Row)
{
  return getString(CGTL_PP_EL_STEP::PRACPHASE, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGTL_PP_EL_STEP::setPRACPHASE(const std::string& value)
{
  setString(CGTL_PP_EL_STEP::PRACPHASE, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
long CGTL_PP_EL_STEP::getSTEPNO(long Row)
{
  return getLong(CGTL_PP_EL_STEP::STEPNO, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGTL_PP_EL_STEP::setSTEPNO(long value)
{
  setLong(CGTL_PP_EL_STEP::STEPNO, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
long CGTL_PP_EL_STEP::getDURATION(long Row)
{
  return getLong(CGTL_PP_EL_STEP::DURATION, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGTL_PP_EL_STEP::setDURATION(long value)
{
  setLong(CGTL_PP_EL_STEP::DURATION, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
long CGTL_PP_EL_STEP::getDELTA_TEMP(long Row)
{
  return getLong(CGTL_PP_EL_STEP::DELTA_TEMP, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGTL_PP_EL_STEP::setDELTA_TEMP(long value)
{
  setLong(CGTL_PP_EL_STEP::DELTA_TEMP, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
long CGTL_PP_EL_STEP::getVOLTTAP(long Row)
{
  return getLong(CGTL_PP_EL_STEP::VOLTTAP, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGTL_PP_EL_STEP::setVOLTTAP(long value)
{
  setLong(CGTL_PP_EL_STEP::VOLTTAP, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
long CGTL_PP_EL_STEP::getIMPCURVE(long Row)
{
  return getLong(CGTL_PP_EL_STEP::IMPCURVE, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGTL_PP_EL_STEP::setIMPCURVE(long value)
{
  setLong(CGTL_PP_EL_STEP::IMPCURVE, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
bool CGTL_PP_EL_STEP::select(long PLANTNO, long PRACNO, const std::string& ACTIVITYNAME, const std::string& PRACPHASE, long STEPNO)
{
  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause(CGTL_PP_EL_STEP::PLANTNO,PLANTNO);
  addWhereClause(CGTL_PP_EL_STEP::PRACNO,PRACNO);
  addWhereClause(CGTL_PP_EL_STEP::ACTIVITYNAME,ACTIVITYNAME);
  addWhereClause(CGTL_PP_EL_STEP::PRACPHASE,PRACPHASE);
  addWhereClause(CGTL_PP_EL_STEP::STEPNO,STEPNO);
  m_Statement += getWhereStatement() + ";";

  return CSMC_DBData::select();
}

//## ------------------------------------END-GENERATED-CODE---------------------- 

//## ------------------------------------YOUR-CODE------------------------------- 


