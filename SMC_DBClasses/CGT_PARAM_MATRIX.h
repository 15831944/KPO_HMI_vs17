//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CGT_PARAM_MATRIX_INCLUDED
#define _INC_CGT_PARAM_MATRIX_INCLUDED

#include "CSMC_DBData.h"

class CGT_PARAM_MATRIX
: public CSMC_DBData
{

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string UNITGROUPNO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PNAME;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PRACNO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string TYPE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string KEY1;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string KEY2;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string VALUE;

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGT_PARAM_MATRIX(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGT_PARAM_MATRIX(cCBS_Connection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGT_PARAM_MATRIX();

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CGT_PARAM_MATRIX();

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Unit group number, see GC_PLANT_GROUP
  long getUNITGROUPNO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setUNITGROUPNO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Parameter name
  std::string getPNAME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPNAME(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Production Practice Number
  long getPRACNO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPRACNO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Type indicator (1 to 9)
  long getTYPE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setTYPE(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##First key
  std::string getKEY1(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setKEY1(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Second key, not used for single, keyed parameter
  std::string getKEY2(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setKEY2(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Value
  std::string getVALUE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setVALUE(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(long UNITGROUPNO, const std::string& PNAME, long PRACNO, long TYPE, const std::string& KEY1, const std::string& KEY2);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 

  bool selectByPlant(const std::string& PLANT,long PLANTNO, const std::string& PNAME, long PRACNO, long TYPE, const std::string& KEY1, const std::string& KEY2);

  std::vector<long> getUnitGroupList(const std::string& Plant,long PlantNo);

};

#endif /* _INC_CGT_PARAM_MATRIX_INCLUDED */
