//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CGT_RESTRI_INCLUDED
#define _INC_CGT_RESTRI_INCLUDED

#include "CSMC_DBData.h"

class CGT_RESTRI
: public CSMC_DBData
{

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PLANT;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PLANTNO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string DESCR_PP;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PRACNO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string TREATMODENO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string LIQ_ADD_AMOUNT;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string DESCR_E;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string DESCR_C;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string REVTIME;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string USERCODE;

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGT_RESTRI(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGT_RESTRI(cCBS_Connection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGT_RESTRI();

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CGT_RESTRI();

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Plant identifier
  std::string getPLANT(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPLANT(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Plant number
  long getPLANTNO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPLANTNO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Name of practice pointer or practice group
  std::string getDESCR_PP(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setDESCR_PP(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Production Practice Number
  long getPRACNO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPRACNO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Treatment mode number
  long getTREATMODENO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setTREATMODENO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Amount of  liquid addition relative to aim steel weight into EAF/Conarc., AOD, LF... = 0. Unit: % without precision
  long getLIQ_ADD_AMOUNT(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setLIQ_ADD_AMOUNT(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Practice restriction description
  std::string getDESCR_E(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setDESCR_E(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Practice restriction description Customer
  std::string getDESCR_C(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setDESCR_C(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Date and time of last revision
  CDateTime getREVTIME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setREVTIME(const CDateTime& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getUSERCODE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setUSERCODE(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(const std::string& PLANT, long PLANTNO, const std::string& DESCR_PP, long PRACNO, long TREATMODENO, long LIQ_ADD_AMOUNT);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 

  bool selectRestriction(const std::string& PLANT, long PLANTNO, const std::string& DESCR_PP, long PRACNO, long TREATMODENO, long LIQ_ADD_AMOUNT);

  bool selectSpecialized(const std::string& PLANT, long PLANTNO, const std::string& DESCR_PP, long PRACNO, long TREATMODENO, long LIQ_ADD_AMOUNT);

};

#endif /* _INC_CGT_RESTRI_INCLUDED */
