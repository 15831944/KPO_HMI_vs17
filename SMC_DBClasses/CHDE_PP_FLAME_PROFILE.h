//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CHDE_PP_FLAME_PROFILE_INCLUDED
#define _INC_CHDE_PP_FLAME_PROFILE_INCLUDED

#include "CSMC_DBData.h"

class CHDE_PP_FLAME_PROFILE
: public CSMC_DBData
{

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string HEATID;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string TREATID;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PLANT;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string BURNERNAME;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string FLAMEPROFILENO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string OXYGENFLOW;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string GASFLOW;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string AIRFLOW;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string OXYGENGASRATIO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string CORRECTIONPOWER;

  //##DBClassCodeUtility ! DO NOT EDIT !
  CHDE_PP_FLAME_PROFILE(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CHDE_PP_FLAME_PROFILE(cCBS_Connection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CHDE_PP_FLAME_PROFILE();

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CHDE_PP_FLAME_PROFILE();

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getHEATID(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setHEATID(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getTREATID(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setTREATID(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getPLANT(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPLANT(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getBURNERNAME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setBURNERNAME(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getFLAMEPROFILENO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setFLAMEPROFILENO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getOXYGENFLOW(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setOXYGENFLOW(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getGASFLOW(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setGASFLOW(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getAIRFLOW(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setAIRFLOW(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getOXYGENGASRATIO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setOXYGENGASRATIO(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getCORRECTIONPOWER(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setCORRECTIONPOWER(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(const std::string& HEATID, const std::string& TREATID, const std::string& PLANT, const std::string& BURNERNAME, long FLAMEPROFILENO);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 

  bool copy(const std::string& HEATID, const std::string& TREATID, const std::string& PLANT, bool Commit, cCBS_ODBC_DBError &Error);

  bool exists(const std::string& HEATID, const std::string& TREATID, const std::string& PLANT);

};

#endif /* _INC_CHDE_PP_FLAME_PROFILE_INCLUDED */
