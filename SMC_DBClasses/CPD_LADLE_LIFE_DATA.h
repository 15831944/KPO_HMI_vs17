//## Copyright (C) 2010 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CPD_LADLE_LIFE_DATA_INCLUDED
#define _INC_CPD_LADLE_LIFE_DATA_INCLUDED

#include <vector>
#include "CSMC_DBData.h"

class CPD_LADLE_LIFE_DATA
: public CSMC_DBData
{

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string LADLENO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string LADLETYPE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string LADLEPARTCODE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string DATEOFPARTCHG;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string LIFE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PARTTYPE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PARTSIZE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string REVTIME;

  //##DBClassCodeUtility ! DO NOT EDIT !
  CPD_LADLE_LIFE_DATA(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CPD_LADLE_LIFE_DATA(cCBS_Connection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CPD_LADLE_LIFE_DATA();

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CPD_LADLE_LIFE_DATA();

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Unique ladle number
  long getLADLENO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setLADLENO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##e.g. Hot Metal -> H, Teeming -> T
  std::string getLADLETYPE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setLADLETYPE(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Ladle part code
  std::string getLADLEPARTCODE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setLADLEPARTCODE(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Timestamp indication of the part change
  CDateTime getDATEOFPARTCHG(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setDATEOFPARTCHG(const CDateTime& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##No of heats for this part
  long getLIFE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setLIFE(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Specific Type of Part - may be material, age or whatever
  std::string getPARTTYPE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPARTTYPE(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Specific Size of Part may 1, 2, 3, or [cm] or whatever
  long getPARTSIZE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPARTSIZE(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Date and time of last revision
  CDateTime getREVTIME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setREVTIME(const CDateTime& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(long LADLENO, const std::string& LADLETYPE, const std::string& LADLEPARTCODE);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 

  long getLife(long LADLENO, const std::string& LADLETYPE, const std::string& LADLEPARTCODE);

  bool incrLife(long LADLENO, const std::string& LADLETYPE, std::vector<std::string>& LADLEPARTCODES, bool Commit);

  bool incrLife(long LADLENO, const std::string& LADLETYPE, const std::string& LADLEPARTCODE, bool Commit);

  bool setLifeData(long LADLENO, const std::string& LADLETYPE, const std::string& LADLEPARTCODE, long life,bool Commit);
	

};

#endif /* _INC_CPD_LADLE_LIFE_DATA_INCLUDED */
