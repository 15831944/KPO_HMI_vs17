//## Copyright (C) 2011 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 


#include "CGC_CREW_CAT.h"


//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_CREW_CAT::CREW_ID("CREW_ID");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_CREW_CAT::LOCATION("LOCATION");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_CREW_CAT::CREW_DESC("CREW_DESC");

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_CREW_CAT::CGC_CREW_CAT(cCBS_StdConnection* Connection)
:CSMC_DBData("GC_CREW_CAT",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_CREW_CAT::CGC_CREW_CAT(cCBS_Connection* Connection)
:CSMC_DBData("GC_CREW_CAT",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_CREW_CAT::CGC_CREW_CAT()
:CSMC_DBData("GC_CREW_CAT")
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_CREW_CAT::~CGC_CREW_CAT()
{
  //please implement virtual method, to destruct your members
  doOnDestruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Identification of working crew
std::string CGC_CREW_CAT::getCREW_ID(long Row)
{
  return getString(CGC_CREW_CAT::CREW_ID, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_CREW_CAT::setCREW_ID(const std::string& value)
{
  setString(CGC_CREW_CAT::CREW_ID, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Name of location to be used in the crew assignment dialog
std::string CGC_CREW_CAT::getLOCATION(long Row)
{
  return getString(CGC_CREW_CAT::LOCATION, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_CREW_CAT::setLOCATION(const std::string& value)
{
  setString(CGC_CREW_CAT::LOCATION, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Description for working crew
std::string CGC_CREW_CAT::getCREW_DESC(long Row)
{
  return getString(CGC_CREW_CAT::CREW_DESC, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_CREW_CAT::setCREW_DESC(const std::string& value)
{
  setString(CGC_CREW_CAT::CREW_DESC, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
bool CGC_CREW_CAT::select(const std::string& CREW_ID)
{
  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause(CGC_CREW_CAT::CREW_ID,CREW_ID);
  m_Statement += getWhereStatement() + ";";

  return CSMC_DBData::select();
}

//## ------------------------------------END-GENERATED-CODE---------------------- 

//## ------------------------------------YOUR-CODE------------------------------- 

bool CGC_CREW_CAT::selectByLocation(const std::string& CREW_ID, const std::string& LOCATION)
{
  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause(CGC_CREW_CAT::CREW_ID,CREW_ID);
  addWhereClause(CGC_CREW_CAT::LOCATION,LOCATION);

  m_Statement += getWhereStatement() + ";";

  return CSMC_DBData::select();
}


