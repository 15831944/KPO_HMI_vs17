//## Copyright (C) 2010 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CHDL_PHASE_STIRRING_RES_INCLUDED
#define _INC_CHDL_PHASE_STIRRING_RES_INCLUDED

#include "CSMC_DBData.h"

class CHDL_PHASE_STIRRING_RES
: public CSMC_DBData
{

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string HEATID;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string TREATID;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PLANT;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string STIRRPHASE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string STIRRGASTYPE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string STARTTIME;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string DURUNTENDOFPHASE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string DATEUNTENDOFPHASE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string STEPDUR;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string ELEC_ENERGY;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string REVTIME;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string CONS;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string FLOW;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string INTENSITY;

  //##DBClassCodeUtility ! DO NOT EDIT !
  CHDL_PHASE_STIRRING_RES(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CHDL_PHASE_STIRRING_RES(cCBS_Connection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CHDL_PHASE_STIRRING_RES();

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CHDL_PHASE_STIRRING_RES();

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getHEATID(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setHEATID(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getTREATID(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setTREATID(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getPLANT(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPLANT(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getSTIRRPHASE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSTIRRPHASE(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getSTIRRGASTYPE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSTIRRGASTYPE(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getSTARTTIME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSTARTTIME(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getDURUNTENDOFPHASE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setDURUNTENDOFPHASE(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CDateTime getDATEUNTENDOFPHASE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setDATEUNTENDOFPHASE(const CDateTime& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getSTEPDUR(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSTEPDUR(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getELEC_ENERGY(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setELEC_ENERGY(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CDateTime getREVTIME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setREVTIME(const CDateTime& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getCONS(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setCONS(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getFLOW(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setFLOW(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getINTENSITY(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setINTENSITY(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(const std::string& HEATID, const std::string& TREATID, const std::string& PLANT, const std::string& STIRRPHASE);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 

  bool copy(const std::string& HEATID, const std::string& TREATID, const std::string& PLANT, bool pCommit, cCBS_ODBC_DBError &pError);

  bool exists(const std::string& HEATID, const std::string& TREATID, const std::string& PLANT);

};

#endif /* _INC_CHDL_PHASE_STIRRING_RES_INCLUDED */
