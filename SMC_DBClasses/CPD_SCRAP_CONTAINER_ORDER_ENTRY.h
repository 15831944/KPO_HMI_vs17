//## Copyright (C) 2010 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CPD_SCRAP_CONTAINER_ORDER_ENTRY_INCLUDED
#define _INC_CPD_SCRAP_CONTAINER_ORDER_ENTRY_INCLUDED

#include "CSMC_DBData.h"

class CPD_SCRAP_CONTAINER_ORDER_ENTRY
: public CSMC_DBData
{

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PLANT;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PRODORDERID;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string CONTAINERINSEQ;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string MATCHARGESEQ;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string MAT_CODE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string RECIPENAME;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string MATWEIGHT;

  //##DBClassCodeUtility ! DO NOT EDIT !
  CPD_SCRAP_CONTAINER_ORDER_ENTRY(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CPD_SCRAP_CONTAINER_ORDER_ENTRY(cCBS_Connection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CPD_SCRAP_CONTAINER_ORDER_ENTRY();

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CPD_SCRAP_CONTAINER_ORDER_ENTRY();

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Plant identifier
  std::string getPLANT(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPLANT(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Production oder identification
  std::string getPRODORDERID(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPRODORDERID(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Identifies the order within in charging sequence
  long getCONTAINERINSEQ(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setCONTAINERINSEQ(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Charging sequence for the materials in the container
  long getMATCHARGESEQ(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setMATCHARGESEQ(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Material code
  std::string getMAT_CODE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setMAT_CODE(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getRECIPENAME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setRECIPENAME(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Planned weight of charged material
  double getMATWEIGHT(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setMATWEIGHT(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(const std::string& PLANT, const std::string& PRODORDERID, long CONTAINERINSEQ, long MATCHARGESEQ);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 

  bool selectByMatChargeSeq(const std::string& PLANT, const std::string& PRODORDERID, long CONTAINERINSEQ, const std::string& RECIPENAME, const std::string& MAT_CODE, bool ASC = true);

  bool deleteRow(const std::string& PLANT, const std::string& PRODORDERID, long CONTAINERINSEQ, const std::string& MAT_CODE);

};

#endif /* _INC_CPD_SCRAP_CONTAINER_ORDER_ENTRY_INCLUDED */
