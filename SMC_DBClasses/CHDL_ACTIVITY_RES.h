//## Copyright (C) 2010 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CHDL_ACTIVITY_RES_INCLUDED
#define _INC_CHDL_ACTIVITY_RES_INCLUDED

#include "CSMC_DBData.h"

class CHDL_ACTIVITY_RES
: public CSMC_DBData
{

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string HEATID;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string TREATID;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PLANT;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string ACTIVITYNAME;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string STEELMASS;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string SLAGMASS;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string TEMP;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string DURUNTENDOFPHASE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string DATEENDOFPHASE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string REVTIME;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string VOLTTAP;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string IMPCURVE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string ELEC_ENERGY;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string UPDATENO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string STARTTIME;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string STIRR_FLOW;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string STIRR_GAS_TYPE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string STIRR_INTENSITY;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string ENABLE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PRIORITY;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string ORDERNO;

  //##DBClassCodeUtility ! DO NOT EDIT !
  CHDL_ACTIVITY_RES(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CHDL_ACTIVITY_RES(cCBS_Connection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CHDL_ACTIVITY_RES();

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CHDL_ACTIVITY_RES();

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getHEATID(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setHEATID(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getTREATID(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setTREATID(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getPLANT(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPLANT(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getACTIVITYNAME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setACTIVITYNAME(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getSTEELMASS(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSTEELMASS(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getSLAGMASS(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSLAGMASS(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getTEMP(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setTEMP(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getDURUNTENDOFPHASE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setDURUNTENDOFPHASE(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CDateTime getDATEENDOFPHASE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setDATEENDOFPHASE(const CDateTime& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CDateTime getREVTIME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setREVTIME(const CDateTime& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getVOLTTAP(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setVOLTTAP(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getIMPCURVE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setIMPCURVE(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getELEC_ENERGY(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setELEC_ENERGY(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getUPDATENO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setUPDATENO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getSTARTTIME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSTARTTIME(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getSTIRR_FLOW(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSTIRR_FLOW(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getSTIRR_GAS_TYPE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSTIRR_GAS_TYPE(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getSTIRR_INTENSITY(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSTIRR_INTENSITY(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getENABLE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setENABLE(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getPRIORITY(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPRIORITY(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getORDERNO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setORDERNO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(const std::string& HEATID, const std::string& TREATID, const std::string& PLANT, const std::string& ACTIVITYNAME);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 

  bool copy(const std::string& HEATID, const std::string& TREATID, const std::string& PLANT, bool Commit, cCBS_ODBC_DBError &Error);

  bool exists(const std::string& HEATID, const std::string& TREATID, const std::string& PLANT);

};

#endif /* _INC_CHDL_ACTIVITY_RES_INCLUDED */
