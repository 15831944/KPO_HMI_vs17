//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CGT_PURP_INCLUDED
#define _INC_CGT_PURP_INCLUDED

#include "CSMC_DBData.h"

class CGT_PURP
: public CSMC_DBData
{

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string UNITGROUPNO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PURP_CODE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PURP_TYPENO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string DESCRIPTION;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string DESCR_C;

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGT_PURP(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGT_PURP(cCBS_Connection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGT_PURP();

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CGT_PURP();

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Unit group number, see GC_PLANT_GROUP
  long getUNITGROUPNO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setUNITGROUPNO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Purpose code (latest naming convention: Material class)
  std::string getPURP_CODE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPURP_CODE(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Type of purpose, e.g. Material Class, Recipe
  long getPURP_TYPENO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPURP_TYPENO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Description
  std::string getDESCRIPTION(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setDESCRIPTION(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Description Customer
  std::string getDESCR_C(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setDESCR_C(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(long UNITGROUPNO, const std::string& PURP_CODE);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 

  bool selectByPlant(const std::string& PLANT, long PLANTNO, const std::string& PURP_CODE);

  bool deletePurpose(const std::string& PLANT, long PLANTNO, const std::string& PURP_CODE);

  bool deletePurpose(long UNITGROUPNO, const std::string& PURP_CODE);

  std::vector<long> getUnitGroupList(const std::string& Plant,long PlantNo);

  long getUnitProupNoByPlant(const std::string& PLANT, long PLANTNO);

  bool updateOrInsertPurpose(const std::string& PLANT, long PLANTNO, const std::string& PURP_CODE, long PURP_TYPENO, const std::string& DESCRIPTION, const std::string& DESCR_C, bool Commit, cCBS_ODBC_DBError &Error);

  bool updateOrInsertPurpose(long UNITGROUPNO, const std::string& PURP_CODE, long PURP_TYPENO, const std::string& DESCRIPTION, const std::string& DESCR_C , bool Commit, cCBS_ODBC_DBError &Error);

};

#endif /* _INC_CGT_PURP_INCLUDED */
