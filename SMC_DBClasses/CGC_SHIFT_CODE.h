//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.2 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CGC_SHIFT_CODE_INCLUDED
#define _INC_CGC_SHIFT_CODE_INCLUDED

#include "CSMC_DBData.h"

class CGC_SHIFT_CODE
: public CSMC_DBData
{

private:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string SHIFTCODE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string SHIFTTYPE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string SHIFTSTART;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string SHIFTEND;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string SHIFTDESCR;

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  CGC_SHIFT_CODE(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CGC_SHIFT_CODE();

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Shift of Production
  long getSHIFTCODE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSHIFTCODE(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getSHIFTTYPE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSHIFTTYPE(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getSHIFTSTART(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSHIFTSTART(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getSHIFTEND(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSHIFTEND(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Displayed shift name.
  std::string getSHIFTDESCR(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSHIFTDESCR(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(long SHIFTCODE, const std::string& SHIFTTYPE);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 

  bool selectByActTime(const CDateTime& ActTime, const std::string& SHIFTTYPE);

  int getShiftCodeByTime(CDateTime dDateTime);

};

#endif /* _INC_CGC_SHIFT_CODE_INCLUDED */
