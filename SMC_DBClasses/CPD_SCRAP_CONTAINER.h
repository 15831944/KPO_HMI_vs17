//## Copyright (C) 2010 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CPD_SCRAP_CONTAINER_INCLUDED
#define _INC_CPD_SCRAP_CONTAINER_INCLUDED

#include "CSMC_DBData.h"

class CPD_SCRAP_CONTAINER
: public CSMC_DBData
{

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string CONTAINERNO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string CONTAINERTYPE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string STATUSNO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string LOCATIONNO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string LOADINGSTARTTIME;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string LOADINGENDTIME;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string CHARGINGTIME;

  //##DBClassCodeUtility ! DO NOT EDIT !
  CPD_SCRAP_CONTAINER(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CPD_SCRAP_CONTAINER(cCBS_Connection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CPD_SCRAP_CONTAINER();

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CPD_SCRAP_CONTAINER();

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Unique identification number
  long getCONTAINERNO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setCONTAINERNO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##basket or chute
  std::string getCONTAINERTYPE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setCONTAINERTYPE(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getSTATUSNO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSTATUSNO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Location identification
  long getLOCATIONNO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setLOCATIONNO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Timestamp, when loading has started
  CDateTime getLOADINGSTARTTIME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setLOADINGSTARTTIME(const CDateTime& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Timestamp, when loading has finished
  CDateTime getLOADINGENDTIME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setLOADINGENDTIME(const CDateTime& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Timestamp, when container was discharged
  CDateTime getCHARGINGTIME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setCHARGINGTIME(const CDateTime& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(long CONTAINERNO, const std::string& CONTAINERTYPE);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 

  bool deleteRow(long CONTAINERNO, const std::string& CONTAINERTYPE);

  double getContainerWeight(long CONTAINERNO, const std::string& CONTAINERTYPE);

  bool updateDischargeTime(long CONTAINERNO, const std::string& CONTAINERTYPE,const CDateTime& dateTime);

};

#endif /* _INC_CPD_SCRAP_CONTAINER_INCLUDED */
