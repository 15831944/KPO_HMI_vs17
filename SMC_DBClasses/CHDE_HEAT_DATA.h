//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CHDE_HEAT_DATA_INCLUDED
#define _INC_CHDE_HEAT_DATA_INCLUDED

#include "CSMC_DBData.h"

class CHDE_HEAT_DATA
: public CSMC_DBData
{

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string HEATID;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string TREATID;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PLANT;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string TOTAL_O2_SIDE_LANCE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string SPEC_O2_SIDE_LANCE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string TOTAL_AR_MOMENT;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string TOTAL_N2_MOMENT;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string SPECIFIC_O2_CONS;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string SPECIFIC_N2_CONS;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string SPECIFIC_AR_CONS;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string TOTAL_CARBON_INJ;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string MELTDOWNSTARTTIME;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string MELTDOWNENDTIME;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string TOTAL_ELEC_EGY;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string POWER_ON_DUR;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string POWER_OFF_DUR;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string DRI;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string LIME;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string DOLOMITE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string COAL;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string NO_OF_BASKETS;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string MELTER;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string SUPERVISOR;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string START_SCRAPDRYING;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string END_SCRAPDRYING;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string BURNER_TOTALOXY;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string BURNER_TOTALLANCEOXY;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string BURNER_TOTALPCOXY;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string BURNER_TOTALGAS;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string INJ_LIME;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string INJ_CARBON;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string INJ_FESI;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string INJ_DUST;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string INJ_OXYGEN;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string FURNACE_ADDITIONS;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string FURNACE_SLAGFORMER;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string LADLE_ADDITIONS;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string LADLE_SLAGFORMER;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string CAMPAIGN;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string FURNACE_DELTAAGE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string FURNACE_TAPHOLEAGE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string FURNACE_SHELLAGE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string FURNACE_SHELLWALLAGE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string FURNACE_SLAGDOORAGE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string FURNACE_ROOFAGE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string FURNACE_BOTTOMAGE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string FURNACE_BOTWALLAGE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string BASKET_TOTALWEIGHT;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string BASKET_TOTCHARGETIME;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string DOOR_BURN_TOTALOXY;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string DOOR_BURN_TOTALGAS;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string EAF_THERMSTATID;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string TAPTOTAPDURATION;

  //##DBClassCodeUtility ! DO NOT EDIT !
  CHDE_HEAT_DATA(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CHDE_HEAT_DATA(cCBS_Connection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CHDE_HEAT_DATA();

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CHDE_HEAT_DATA();

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getHEATID(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setHEATID(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getTREATID(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setTREATID(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getPLANT(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPLANT(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getTOTAL_O2_SIDE_LANCE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setTOTAL_O2_SIDE_LANCE(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getSPEC_O2_SIDE_LANCE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSPEC_O2_SIDE_LANCE(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getTOTAL_AR_MOMENT(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setTOTAL_AR_MOMENT(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getTOTAL_N2_MOMENT(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setTOTAL_N2_MOMENT(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getSPECIFIC_O2_CONS(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSPECIFIC_O2_CONS(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getSPECIFIC_N2_CONS(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSPECIFIC_N2_CONS(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getSPECIFIC_AR_CONS(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSPECIFIC_AR_CONS(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getTOTAL_CARBON_INJ(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setTOTAL_CARBON_INJ(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CDateTime getMELTDOWNSTARTTIME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setMELTDOWNSTARTTIME(const CDateTime& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CDateTime getMELTDOWNENDTIME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setMELTDOWNENDTIME(const CDateTime& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getTOTAL_ELEC_EGY(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setTOTAL_ELEC_EGY(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getPOWER_ON_DUR(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPOWER_ON_DUR(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getPOWER_OFF_DUR(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPOWER_OFF_DUR(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getDRI(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setDRI(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getLIME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setLIME(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getDOLOMITE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setDOLOMITE(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getCOAL(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setCOAL(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getNO_OF_BASKETS(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setNO_OF_BASKETS(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getMELTER(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setMELTER(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getSUPERVISOR(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSUPERVISOR(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CDateTime getSTART_SCRAPDRYING(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSTART_SCRAPDRYING(const CDateTime& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CDateTime getEND_SCRAPDRYING(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setEND_SCRAPDRYING(const CDateTime& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getBURNER_TOTALOXY(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setBURNER_TOTALOXY(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getBURNER_TOTALLANCEOXY(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setBURNER_TOTALLANCEOXY(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getBURNER_TOTALPCOXY(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setBURNER_TOTALPCOXY(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getBURNER_TOTALGAS(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setBURNER_TOTALGAS(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getINJ_LIME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setINJ_LIME(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getINJ_CARBON(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setINJ_CARBON(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getINJ_FESI(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setINJ_FESI(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getINJ_DUST(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setINJ_DUST(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getINJ_OXYGEN(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setINJ_OXYGEN(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getFURNACE_ADDITIONS(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setFURNACE_ADDITIONS(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getFURNACE_SLAGFORMER(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setFURNACE_SLAGFORMER(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getLADLE_ADDITIONS(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setLADLE_ADDITIONS(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getLADLE_SLAGFORMER(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setLADLE_SLAGFORMER(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getCAMPAIGN(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setCAMPAIGN(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getFURNACE_DELTAAGE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setFURNACE_DELTAAGE(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getFURNACE_TAPHOLEAGE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setFURNACE_TAPHOLEAGE(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getFURNACE_SHELLAGE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setFURNACE_SHELLAGE(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getFURNACE_SHELLWALLAGE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setFURNACE_SHELLWALLAGE(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getFURNACE_SLAGDOORAGE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setFURNACE_SLAGDOORAGE(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getFURNACE_ROOFAGE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setFURNACE_ROOFAGE(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getFURNACE_BOTTOMAGE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setFURNACE_BOTTOMAGE(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getFURNACE_BOTWALLAGE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setFURNACE_BOTWALLAGE(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getBASKET_TOTALWEIGHT(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setBASKET_TOTALWEIGHT(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getBASKET_TOTCHARGETIME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setBASKET_TOTCHARGETIME(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getDOOR_BURN_TOTALOXY(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setDOOR_BURN_TOTALOXY(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getDOOR_BURN_TOTALGAS(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setDOOR_BURN_TOTALGAS(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getEAF_THERMSTATID(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setEAF_THERMSTATID(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getTAPTOTAPDURATION(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setTAPTOTAPDURATION(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(const std::string& HEATID, const std::string& TREATID, const std::string& PLANT);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 

  bool copy(const std::string& HEATID, const std::string& TREATID, const std::string& PLANT, bool Commit, cCBS_ODBC_DBError &Error);

  bool exists(const std::string& HEATID, const std::string& TREATID, const std::string& PLANT);

  bool checkNULLValues(const std::string& HEATID, const std::string& TREATID, const std::string& PLANT);

};

#endif /* _INC_CHDE_HEAT_DATA_INCLUDED */
