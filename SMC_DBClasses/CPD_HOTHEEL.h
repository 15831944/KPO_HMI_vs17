//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CPD_HOTHEEL_INCLUDED
#define _INC_CPD_HOTHEEL_INCLUDED

#include "CSMC_DBData.h"

class CPD_HOTHEEL
: public CSMC_DBData
{

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PLANT;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PLANTNO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string HEATID;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string TREATID;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string SAMPLE_REF;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string STEELMASS;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string SLAGMASS;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string REVDATE;

  //##DBClassCodeUtility ! DO NOT EDIT !
  CPD_HOTHEEL(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CPD_HOTHEEL(cCBS_Connection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CPD_HOTHEEL();

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CPD_HOTHEEL();

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Plant identifier
  std::string getPLANT(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPLANT(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Plant number
  long getPLANTNO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPLANTNO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Internal identifier of finished heat
  std::string getHEATID(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setHEATID(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Treatment identifier
  std::string getTREATID(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setTREATID(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Unique sample reference
  long getSAMPLE_REF(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSAMPLE_REF(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Last Calc/measured Steel weight in Furnace
  double getSTEELMASS(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSTEELMASS(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Last Calc/measured Slag weight in Furnace
  double getSLAGMASS(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSLAGMASS(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Last revision Data
  CDateTime getREVDATE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setREVDATE(const CDateTime& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(const std::string& PLANT, long PLANTNO);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 

  bool write(const std::string& PLANT, long PLANTNO, const std::string& HEATID, const std::string& TREATID, long& SAMPLE_REF, double STEELMASS, double SLAGMASS, bool Commit, cCBS_ODBC_DBError &Error);

};

#endif /* _INC_CPD_HOTHEEL_INCLUDED */
