//## Copyright (C) 2013 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CPDH_HM_PHASE_RES_INCLUDED
#define _INC_CPDH_HM_PHASE_RES_INCLUDED

#include "CSMC_DBData.h"

class CPDH_HM_PHASE_RES
: public CSMC_DBData

{

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string HM_ID;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string TREATID;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PLANT;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string TREAT_TYPE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string REVTIME;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string RES_PHASENO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PHASE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string CONS_LIME;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string CONS_MG;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string CONS_CARBIDE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string FEED_RATE_LIME;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string FEED_RATE_MG;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string FEED_RATE_CARBIDE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string MAT_COST;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string DURATION;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string ACTIVE_PHASE;

  //##DBClassCodeUtility ! DO NOT EDIT !
  CPDH_HM_PHASE_RES(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CPDH_HM_PHASE_RES(cCBS_Connection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CPDH_HM_PHASE_RES();

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CPDH_HM_PHASE_RES();

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getHM_ID(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setHM_ID(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getTREATID(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setTREATID(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getPLANT(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPLANT(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getTREAT_TYPE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setTREAT_TYPE(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CDateTime getREVTIME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setREVTIME(const CDateTime& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getRES_PHASENO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setRES_PHASENO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getPHASE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPHASE(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getCONS_LIME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setCONS_LIME(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getCONS_MG(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setCONS_MG(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getCONS_CARBIDE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setCONS_CARBIDE(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getFEED_RATE_LIME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setFEED_RATE_LIME(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getFEED_RATE_MG(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setFEED_RATE_MG(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getFEED_RATE_CARBIDE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setFEED_RATE_CARBIDE(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getMAT_COST(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setMAT_COST(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getDURATION(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setDURATION(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getACTIVE_PHASE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setACTIVE_PHASE(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(const std::string& HM_ID, const std::string& TREATID, const std::string& PLANT, long TREAT_TYPE, const CDateTime& REVTIME, long RES_PHASENO);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 

  bool CPDH_HM_PHASE_RES::writeResults(const string& HM_ID, const string& TreatID, const string& PlantID, long Treat_Type, long PhaseNo,const CDateTime& Now,double consLime,double consMg,double consCarbide,double flowLime,double flowMg,double flowCarbide, long active_phase);

  bool select_L3Data(const std::string& HM_ID, const std::string& TREATID, const std::string& PLANT,long RES_PHASENO);

};

#endif /* _INC_CPDH_HM_PHASE_RES_INCLUDED */
