//## Copyright (C) 2013 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CHDH_PARAM_INCLUDED
#define _INC_CHDH_PARAM_INCLUDED

#include "CSMC_DBData.h"

class CHDH_PARAM
: public CSMC_DBData

{

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string HM_ID;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string TREATID;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PLANT;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string UNITGROUPNO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PRACNO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PNAME;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string TYPE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string VALUE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string INST_ACTV;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string DIALOG_PARAM;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string CONV;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string MIN_VALUE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string MAX_VALUE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string CREATIONDATE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PARAMDESC;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PARAMDESC_C;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string UNIT;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PARAMGROUP;

  //##DBClassCodeUtility ! DO NOT EDIT !
  CHDH_PARAM(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CHDH_PARAM(cCBS_Connection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CHDH_PARAM();

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CHDH_PARAM();

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getHM_ID(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setHM_ID(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getTREATID(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setTREATID(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getPLANT(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPLANT(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getUNITGROUPNO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setUNITGROUPNO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getPRACNO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPRACNO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getPNAME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPNAME(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getTYPE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setTYPE(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getVALUE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setVALUE(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getINST_ACTV(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setINST_ACTV(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getDIALOG_PARAM(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setDIALOG_PARAM(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getCONV(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setCONV(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getMIN_VALUE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setMIN_VALUE(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  double getMAX_VALUE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setMAX_VALUE(double value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CDateTime getCREATIONDATE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setCREATIONDATE(const CDateTime& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getPARAMDESC(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPARAMDESC(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getPARAMDESC_C(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPARAMDESC_C(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getUNIT(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setUNIT(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getPARAMGROUP(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPARAMGROUP(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(const std::string& HM_ID, const std::string& TREATID, const std::string& PLANT, long UNITGROUPNO, long PRACNO, const std::string& PNAME);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 

  bool doAnnouncement(const std::string& HM_ID, const std::string& TREATID, const std::string& PLANT, long UNITGROUPNO);

  bool delete_HDH_PARAM(const std::string& HM_ID, const std::string& TREATID, const std::string& PLANT);

};

#endif /* _INC_CHDH_PARAM_INCLUDED */
