//## Copyright (C) 2011 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CGC_HEAT_STATUS_INCLUDED
#define _INC_CGC_HEAT_STATUS_INCLUDED

#include "CSMC_DBData.h"

class CGC_HEAT_STATUS
: public CSMC_DBData

{

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string HEATSTATUSNO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PLANT;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string HEATSTATUS;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string HEATSTATUSDESCR;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string HEATSTATNO_L3;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string HEATSTATNO_CCS;

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGC_HEAT_STATUS(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGC_HEAT_STATUS(cCBS_Connection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGC_HEAT_STATUS();

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CGC_HEAT_STATUS();

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Heat Status as defined in the Requirement Book Naming standard specification.
  long getHEATSTATUSNO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setHEATSTATUSNO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Plant identifier
  std::string getPLANT(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPLANT(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Heat status name, used for generation of definition in header files (one word only)
  std::string getHEATSTATUS(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setHEATSTATUS(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Description of Heat Status
  std::string getHEATSTATUSDESCR(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setHEATSTATUSDESCR(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getHEATSTATNO_L3(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setHEATSTATNO_L3(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  long getHEATSTATNO_CCS(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setHEATSTATNO_CCS(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(long HEATSTATUSNO);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 

  bool select(const std::string &PLANT, const std::string &HEATSTATUS);

  std::string getHeatStatus(long HEATSTATUSNO);

  long getHeatStatusNo(const std::string &PLANT, const std::string &HEATSTATUS);
  long getHeatStatusNo(const std::string &PLANT, long HEATSTATUSNO_L3,long HEATSTATUSNO_CCS); //sankar

  std::vector<long> getPlantRelatedStates(const std::string& PLANT);

};

#endif /* _INC_CGC_HEAT_STATUS_INCLUDED */
