//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 


#include "CGC_LADLE_PARTS.h"


//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_LADLE_PARTS::LADLEPARTCODE("LADLEPARTCODE");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_LADLE_PARTS::LADLETYPE("LADLETYPE");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_LADLE_PARTS::LADLEPARTDESCR("LADLEPARTDESCR");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_LADLE_PARTS::DISPLAYORDER("DISPLAYORDER");

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_LADLE_PARTS::CGC_LADLE_PARTS(cCBS_StdConnection* Connection)
:CSMC_DBData("GC_LADLE_PARTS",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_LADLE_PARTS::CGC_LADLE_PARTS(cCBS_Connection* Connection)
:CSMC_DBData("GC_LADLE_PARTS",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_LADLE_PARTS::CGC_LADLE_PARTS()
:CSMC_DBData("GC_LADLE_PARTS")
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_LADLE_PARTS::~CGC_LADLE_PARTS()
{
  //please implement virtual method, to destruct your members
  doOnDestruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Ladle part code
std::string CGC_LADLE_PARTS::getLADLEPARTCODE(long Row)
{
  return getString(CGC_LADLE_PARTS::LADLEPARTCODE, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_LADLE_PARTS::setLADLEPARTCODE(const std::string& value)
{
  setString(CGC_LADLE_PARTS::LADLEPARTCODE, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##e.g. Hot Metal -> H, Teeming -> T
std::string CGC_LADLE_PARTS::getLADLETYPE(long Row)
{
  return getString(CGC_LADLE_PARTS::LADLETYPE, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_LADLE_PARTS::setLADLETYPE(const std::string& value)
{
  setString(CGC_LADLE_PARTS::LADLETYPE, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Description of ladle part
std::string CGC_LADLE_PARTS::getLADLEPARTDESCR(long Row)
{
  return getString(CGC_LADLE_PARTS::LADLEPARTDESCR, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_LADLE_PARTS::setLADLEPARTDESCR(const std::string& value)
{
  setString(CGC_LADLE_PARTS::LADLEPARTDESCR, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Display order for HMI
long CGC_LADLE_PARTS::getDISPLAYORDER(long Row)
{
  return getLong(CGC_LADLE_PARTS::DISPLAYORDER, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_LADLE_PARTS::setDISPLAYORDER(long value)
{
  setLong(CGC_LADLE_PARTS::DISPLAYORDER, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
bool CGC_LADLE_PARTS::select(const std::string& LADLEPARTCODE, const std::string& LADLETYPE)
{
  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause(CGC_LADLE_PARTS::LADLEPARTCODE,LADLEPARTCODE);
  addWhereClause(CGC_LADLE_PARTS::LADLETYPE,LADLETYPE);
  m_Statement += getWhereStatement() + ";";

  return CSMC_DBData::select();
}

//## ------------------------------------END-GENERATED-CODE---------------------- 

//## ------------------------------------YOUR-CODE------------------------------- 

std::vector<std::string> CGC_LADLE_PARTS::getLadlePartCodes(const std::string& LADLETYPE)
{
  std::vector<std::string> LadlePartCodes;

  if ( select(CSMC_DBData::unspecString, LADLETYPE) )
  {
    for ( long i = 1 ; i <= getLastRow(); ++i )
    {
      LadlePartCodes.push_back(getLADLEPARTCODE(i));
    }
  }

  return LadlePartCodes;
}


