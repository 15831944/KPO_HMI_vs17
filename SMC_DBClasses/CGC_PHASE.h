//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CGC_PHASE_INCLUDED
#define _INC_CGC_PHASE_INCLUDED

#include "CSMC_DBData.h"

class CGC_PHASE
: public CSMC_DBData
{

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PLANT;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string RES_PHASENO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PHASENAME;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PHASENO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PHASENAMEHMI;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string FLAG;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string L1_PHASE_NO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PHASENO_HMI;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string COLOUR_RED;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string COLOUR_GREEN;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string COLOUR_BLUE;

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGC_PHASE(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGC_PHASE(cCBS_Connection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGC_PHASE();

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CGC_PHASE();

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Plant identifier
  std::string getPLANT(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPLANT(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Result Phase No for storing into the Result tables
  long getRES_PHASENO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setRES_PHASENO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##This is the phase name, which is used in the model
  std::string getPHASENAME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPHASENAME(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Some model phases are countable. They have PHASENO (1,2,3,...). Those which are not countable have PHASENO = 0
  long getPHASENO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPHASENO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Phase Name to be shown by the HMI
  std::string getPHASENAMEHMI(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPHASENAMEHMI(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##This Flag is an indication that only, following Result data for the End of the Phase are calculated, Weights Steel and Slag, Analysis, Temp, and Time Until end of Process Phase., In the other case also results for several patterns are defined.
  long getFLAG(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setFLAG(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##The number of phase that is requried by Level 1
  long getL1_PHASE_NO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setL1_PHASE_NO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##The phase number HMI is used for example for bars in the HMI
  long getPHASENO_HMI(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPHASENO_HMI(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##RGB colour settings
  long getCOLOUR_RED(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setCOLOUR_RED(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##RGB colour settings
  long getCOLOUR_GREEN(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setCOLOUR_GREEN(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##RGB colour settings
  long getCOLOUR_BLUE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setCOLOUR_BLUE(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(const std::string& PLANT, long RES_PHASENO);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 

  bool selectByPhase(const std::string& PLANT, const std::string& PHASENAME, long PHASENO, long L1_PHASE_NO);

  bool selectByPhase(const std::string& PLANT, const std::string& PHASENAME, long PHASENO);

  bool selectByPhaseName(const std::string& PLANT, const std::string& PHASENAME);

  bool selectByPhaseNo(const std::string& PLANT, long L1_PHASENO);

  bool selectByPlant(const std::string& PLANT);

  bool selectOrdered(const std::string& PLANT, long RES_PHASENO);

  std::string getPhaseNameByResPhaseNo(const std::string& PLANT, long RES_PHASENO);

  std::map< std::string, long> & getPhaseNameList(const std::string & Plant);

  long getPhaseNoByResPhaseNo(const std::string& PLANT, long RES_PHASENO);

};

#endif /* _INC_CGC_PHASE_INCLUDED */
