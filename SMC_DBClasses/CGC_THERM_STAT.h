//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CGC_THERM_STAT_INCLUDED
#define _INC_CGC_THERM_STAT_INCLUDED

#include "CSMC_DBData.h"

class CGC_THERM_STAT
: public CSMC_DBData
{

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string THERMSTATID;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string THERMSTATDESCR;

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGC_THERM_STAT(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGC_THERM_STAT(cCBS_Connection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGC_THERM_STAT();

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CGC_THERM_STAT();

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##H=Hot, M=Medium, C=Cold
  std::string getTHERMSTATID(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setTHERMSTATID(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Thermal State description., H = Hot, M = Medium, C  = Cold
  std::string getTHERMSTATDESCR(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setTHERMSTATDESCR(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(const std::string& THERMSTATID);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 

};

#endif /* _INC_CGC_THERM_STAT_INCLUDED */
