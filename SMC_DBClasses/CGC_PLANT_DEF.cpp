//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 


#include "CGC_PLANT_DEF.h"


//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_PLANT_DEF::PLANT("PLANT");

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_PLANT_DEF::CGC_PLANT_DEF(cCBS_StdConnection* Connection)
:CSMC_DBData("GC_PLANT_DEF",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_PLANT_DEF::CGC_PLANT_DEF(cCBS_Connection* Connection)
:CSMC_DBData("GC_PLANT_DEF",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_PLANT_DEF::CGC_PLANT_DEF()
:CSMC_DBData("GC_PLANT_DEF")
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_PLANT_DEF::~CGC_PLANT_DEF()
{
  //please implement virtual method, to destruct your members
  doOnDestruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Plant identifier
std::string CGC_PLANT_DEF::getPLANT(long Row)
{
  return getString(CGC_PLANT_DEF::PLANT, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_PLANT_DEF::setPLANT(const std::string& value)
{
  setString(CGC_PLANT_DEF::PLANT, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
bool CGC_PLANT_DEF::select(const std::string& PLANT)
{
  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause(CGC_PLANT_DEF::PLANT,PLANT);
  m_Statement += getWhereStatement() + ";";

  return CSMC_DBData::select();
}

//## ------------------------------------END-GENERATED-CODE---------------------- 

//## ------------------------------------YOUR-CODE------------------------------- 


