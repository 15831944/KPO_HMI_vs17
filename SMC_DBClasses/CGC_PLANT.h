//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CGC_PLANT_INCLUDED
#define _INC_CGC_PLANT_INCLUDED

#include "CSMC_DBData.h"

class CGC_PLANT
: public CSMC_DBData
{

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PLANT;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PLANTNO;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string ROUTECODEID;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PLANTID_L2;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PLANTID_L1;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PLANTID_L3;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PLANTID_CCS;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string DISPLAY_ORDER;

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGC_PLANT(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGC_PLANT(cCBS_Connection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGC_PLANT();

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CGC_PLANT();

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Plant identifier
  std::string getPLANT(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPLANT(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Plant number
  long getPLANTNO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPLANTNO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getROUTECODEID(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setROUTECODEID(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Plant identifier EXT L2
  std::string getPLANTID_L2(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPLANTID_L2(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Plant identifier L1
  long getPLANTID_L1(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPLANTID_L1(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Plant identifier L3
  std::string getPLANTID_L3(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPLANTID_L3(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Plant identifier CCS
  std::string getPLANTID_CCS(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPLANTID_CCS(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Display order for HMI
  long getDISPLAY_ORDER(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setDISPLAY_ORDER(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(const std::string& PLANT, long PLANTNO);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 

};

#endif /* _INC_CGC_PLANT_INCLUDED */
