//## Copyright (C) 2014 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CREPORT_MOTOR_ENTRY_INCLUDED
#define _INC_CREPORT_MOTOR_ENTRY_INCLUDED

#include "CSMC_DBData.h"

class CREPORT_MOTOR_ENTRY
: public CSMC_DBData

{

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string MOTORID;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string START_TIME;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string STOP_TIME;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PLANT_NO;

  //##DBClassCodeUtility ! DO NOT EDIT !
  CREPORT_MOTOR_ENTRY(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CREPORT_MOTOR_ENTRY(cCBS_Connection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CREPORT_MOTOR_ENTRY();

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CREPORT_MOTOR_ENTRY();

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Motor ID
  long getMOTORID(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setMOTORID(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Motor start time
  CDateTime getSTART_TIME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSTART_TIME(const CDateTime& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Motor stop time
  CDateTime getSTOP_TIME(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setSTOP_TIME(const CDateTime& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  //##Plant number
  long getPLANT_NO(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPLANT_NO(long value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(long MOTORID, const CDateTime& START_TIME, long PLANT_NO);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 
	bool CREPORT_MOTOR_ENTRY::updateOrInsert(long MOTORID, const CDateTime& START_TIME, long PLANT_NO,const CDateTime& STOP_TIME,bool Commit, cCBS_ODBC_DBError &Error);
	bool CREPORT_MOTOR_ENTRY::selectByMOTORID(long MOTORID, long PLANT_NO);
};

#endif /* _INC_CREPORT_MOTOR_ENTRY_INCLUDED */
