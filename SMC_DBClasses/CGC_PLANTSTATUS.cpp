//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 


#include "CGC_PLANTSTATUS.h"


//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_PLANTSTATUS::PLANT("PLANT");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_PLANTSTATUS::TYPE("TYPE");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_PLANTSTATUS::VARNAME("VARNAME");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_PLANTSTATUS::DISPLAY_ORDER("DISPLAY_ORDER");

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_PLANTSTATUS::CGC_PLANTSTATUS(cCBS_StdConnection* Connection)
:CSMC_DBData("GC_PLANTSTATUS",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_PLANTSTATUS::CGC_PLANTSTATUS(cCBS_Connection* Connection)
:CSMC_DBData("GC_PLANTSTATUS",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_PLANTSTATUS::CGC_PLANTSTATUS()
:CSMC_DBData("GC_PLANTSTATUS")
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_PLANTSTATUS::~CGC_PLANTSTATUS()
{
  //please implement virtual method, to destruct your members
  doOnDestruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Plant identifier
std::string CGC_PLANTSTATUS::getPLANT(long Row)
{
  return getString(CGC_PLANTSTATUS::PLANT, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_PLANTSTATUS::setPLANT(const std::string& value)
{
  setString(CGC_PLANTSTATUS::PLANT, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Specifies data type of value. 1=long, 2=double,3=string
long CGC_PLANTSTATUS::getTYPE(long Row)
{
  return getLong(CGC_PLANTSTATUS::TYPE, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_PLANTSTATUS::setTYPE(long value)
{
  setLong(CGC_PLANTSTATUS::TYPE, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Plant specific variable name, e.g. RemainSteelTundish for plant CCS
std::string CGC_PLANTSTATUS::getVARNAME(long Row)
{
  return getString(CGC_PLANTSTATUS::VARNAME, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_PLANTSTATUS::setVARNAME(const std::string& value)
{
  setString(CGC_PLANTSTATUS::VARNAME, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Display order for HMI
long CGC_PLANTSTATUS::getDISPLAY_ORDER(long Row)
{
  return getLong(CGC_PLANTSTATUS::DISPLAY_ORDER, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_PLANTSTATUS::setDISPLAY_ORDER(long value)
{
  setLong(CGC_PLANTSTATUS::DISPLAY_ORDER, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
bool CGC_PLANTSTATUS::select(const std::string& PLANT, long TYPE, const std::string& VARNAME)
{
  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause(CGC_PLANTSTATUS::PLANT,PLANT);
  addWhereClause(CGC_PLANTSTATUS::TYPE,TYPE);
  addWhereClause(CGC_PLANTSTATUS::VARNAME,VARNAME);
  m_Statement += getWhereStatement() + ";";

  return CSMC_DBData::select();
}

//## ------------------------------------END-GENERATED-CODE---------------------- 

//## ------------------------------------YOUR-CODE------------------------------- 


