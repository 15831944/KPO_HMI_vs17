//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 


#include "CPD_TORPEDOCAR.h"


//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CPD_TORPEDOCAR::CARNO("CARNO");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CPD_TORPEDOCAR::CARLOCNO("CARLOCNO");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CPD_TORPEDOCAR::SAMPLE_REF("SAMPLE_REF");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CPD_TORPEDOCAR::WEIGHT_INITIAL("WEIGHT_INITIAL");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CPD_TORPEDOCAR::WEIGHT_ACT("WEIGHT_ACT");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CPD_TORPEDOCAR::TEMPERATURE("TEMPERATURE");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CPD_TORPEDOCAR::BFID("BFID");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CPD_TORPEDOCAR::CASTID("CASTID");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CPD_TORPEDOCAR::DEPARTURE("DEPARTURE");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CPD_TORPEDOCAR::ARRIVAL("ARRIVAL");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CPD_TORPEDOCAR::SAMPLETIME("SAMPLETIME");

//##DBClassCodeUtility ! DO NOT EDIT !
CPD_TORPEDOCAR::CPD_TORPEDOCAR(cCBS_StdConnection* Connection)
:CSMC_DBData("PD_TORPEDOCAR",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CPD_TORPEDOCAR::CPD_TORPEDOCAR(cCBS_Connection* Connection)
:CSMC_DBData("PD_TORPEDOCAR",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CPD_TORPEDOCAR::CPD_TORPEDOCAR()
:CSMC_DBData("PD_TORPEDOCAR")
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CPD_TORPEDOCAR::~CPD_TORPEDOCAR()
{
  //please implement virtual method, to destruct your members
  doOnDestruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Unique number
long CPD_TORPEDOCAR::getCARNO(long Row)
{
  return getLong(CPD_TORPEDOCAR::CARNO, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CPD_TORPEDOCAR::setCARNO(long value)
{
  setLong(CPD_TORPEDOCAR::CARNO, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Location identifier
long CPD_TORPEDOCAR::getCARLOCNO(long Row)
{
  return getLong(CPD_TORPEDOCAR::CARLOCNO, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CPD_TORPEDOCAR::setCARLOCNO(long value)
{
  setLong(CPD_TORPEDOCAR::CARLOCNO, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Unique sample reference
long CPD_TORPEDOCAR::getSAMPLE_REF(long Row)
{
  return getLong(CPD_TORPEDOCAR::SAMPLE_REF, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CPD_TORPEDOCAR::setSAMPLE_REF(long value)
{
  setLong(CPD_TORPEDOCAR::SAMPLE_REF, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CPD_TORPEDOCAR::getWEIGHT_INITIAL(long Row)
{
  return getDouble(CPD_TORPEDOCAR::WEIGHT_INITIAL, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CPD_TORPEDOCAR::setWEIGHT_INITIAL(double value)
{
  setDouble(CPD_TORPEDOCAR::WEIGHT_INITIAL, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CPD_TORPEDOCAR::getWEIGHT_ACT(long Row)
{
  return getDouble(CPD_TORPEDOCAR::WEIGHT_ACT, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CPD_TORPEDOCAR::setWEIGHT_ACT(double value)
{
  setDouble(CPD_TORPEDOCAR::WEIGHT_ACT, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CPD_TORPEDOCAR::getTEMPERATURE(long Row)
{
  return getDouble(CPD_TORPEDOCAR::TEMPERATURE, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CPD_TORPEDOCAR::setTEMPERATURE(double value)
{
  setDouble(CPD_TORPEDOCAR::TEMPERATURE, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Blast furnace ID
long CPD_TORPEDOCAR::getBFID(long Row)
{
  return getLong(CPD_TORPEDOCAR::BFID, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CPD_TORPEDOCAR::setBFID(long value)
{
  setLong(CPD_TORPEDOCAR::BFID, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Casting ID at blast furnace
std::string CPD_TORPEDOCAR::getCASTID(long Row)
{
  return getString(CPD_TORPEDOCAR::CASTID, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CPD_TORPEDOCAR::setCASTID(const std::string& value)
{
  setString(CPD_TORPEDOCAR::CASTID, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Departure date/time at blast furnace
CDateTime CPD_TORPEDOCAR::getDEPARTURE(long Row)
{
  CDateTime D;
  D.fromDBString(getString(CPD_TORPEDOCAR::DEPARTURE, Row));
  return D;
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CPD_TORPEDOCAR::setDEPARTURE(const CDateTime& value)
{
 setString(CPD_TORPEDOCAR::DEPARTURE, value.toDBString());
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##arrival date/time at e.g. BOF
CDateTime CPD_TORPEDOCAR::getARRIVAL(long Row)
{
  CDateTime D;
  D.fromDBString(getString(CPD_TORPEDOCAR::ARRIVAL, Row));
  return D;
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CPD_TORPEDOCAR::setARRIVAL(const CDateTime& value)
{
 setString(CPD_TORPEDOCAR::ARRIVAL, value.toDBString());
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Sample taken time
CDateTime CPD_TORPEDOCAR::getSAMPLETIME(long Row)
{
  CDateTime D;
  D.fromDBString(getString(CPD_TORPEDOCAR::SAMPLETIME, Row));
  return D;
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CPD_TORPEDOCAR::setSAMPLETIME(const CDateTime& value)
{
 setString(CPD_TORPEDOCAR::SAMPLETIME, value.toDBString());
}

//##DBClassCodeUtility ! DO NOT EDIT !
bool CPD_TORPEDOCAR::select(long CARNO)
{
  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause(CPD_TORPEDOCAR::CARNO,CARNO);
  m_Statement += getWhereStatement() + ";";

  return CSMC_DBData::select();
}

//## ------------------------------------END-GENERATED-CODE---------------------- 

//## ------------------------------------YOUR-CODE------------------------------- 


