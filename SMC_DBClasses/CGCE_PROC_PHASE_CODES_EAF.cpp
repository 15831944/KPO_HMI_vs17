//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 


#include "CGCE_PROC_PHASE_CODES_EAF.h"


//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGCE_PROC_PHASE_CODES_EAF::PROCPHASE("PROCPHASE");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGCE_PROC_PHASE_CODES_EAF::PROCPHASENO("PROCPHASENO");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGCE_PROC_PHASE_CODES_EAF::PROCPHASEDESCR("PROCPHASEDESCR");

//##DBClassCodeUtility ! DO NOT EDIT !
CGCE_PROC_PHASE_CODES_EAF::CGCE_PROC_PHASE_CODES_EAF(cCBS_StdConnection* Connection)
:CSMC_DBData("GCE_PROC_PHASE_CODES_EAF",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGCE_PROC_PHASE_CODES_EAF::CGCE_PROC_PHASE_CODES_EAF(cCBS_Connection* Connection)
:CSMC_DBData("GCE_PROC_PHASE_CODES_EAF",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGCE_PROC_PHASE_CODES_EAF::CGCE_PROC_PHASE_CODES_EAF()
:CSMC_DBData("GCE_PROC_PHASE_CODES_EAF")
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGCE_PROC_PHASE_CODES_EAF::~CGCE_PROC_PHASE_CODES_EAF()
{
  //please implement virtual method, to destruct your members
  doOnDestruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CGCE_PROC_PHASE_CODES_EAF::getPROCPHASE(long Row)
{
  return getString(CGCE_PROC_PHASE_CODES_EAF::PROCPHASE, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGCE_PROC_PHASE_CODES_EAF::setPROCPHASE(const std::string& value)
{
  setString(CGCE_PROC_PHASE_CODES_EAF::PROCPHASE, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
long CGCE_PROC_PHASE_CODES_EAF::getPROCPHASENO(long Row)
{
  return getLong(CGCE_PROC_PHASE_CODES_EAF::PROCPHASENO, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGCE_PROC_PHASE_CODES_EAF::setPROCPHASENO(long value)
{
  setLong(CGCE_PROC_PHASE_CODES_EAF::PROCPHASENO, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CGCE_PROC_PHASE_CODES_EAF::getPROCPHASEDESCR(long Row)
{
  return getString(CGCE_PROC_PHASE_CODES_EAF::PROCPHASEDESCR, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGCE_PROC_PHASE_CODES_EAF::setPROCPHASEDESCR(const std::string& value)
{
  setString(CGCE_PROC_PHASE_CODES_EAF::PROCPHASEDESCR, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
bool CGCE_PROC_PHASE_CODES_EAF::select(const std::string& PROCPHASE, long PROCPHASENO)
{
  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause(CGCE_PROC_PHASE_CODES_EAF::PROCPHASE,PROCPHASE);
  addWhereClause(CGCE_PROC_PHASE_CODES_EAF::PROCPHASENO,PROCPHASENO);
  m_Statement += getWhereStatement() + ";";

  return CSMC_DBData::select();
}

//## ------------------------------------END-GENERATED-CODE---------------------- 

//## ------------------------------------YOUR-CODE------------------------------- 


