//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 


#include "CGC_GRAPH_GROUPS_SPEC.h"


//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_GRAPH_GROUPS_SPEC::PLANT("PLANT");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_GRAPH_GROUPS_SPEC::DATAGROUPID("DATAGROUPID");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_GRAPH_GROUPS_SPEC::DATASPECID("DATASPECID");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_GRAPH_GROUPS_SPEC::DATASPECNAME("DATASPECNAME");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_GRAPH_GROUPS_SPEC::DATASPECUNIT("DATASPECUNIT");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_GRAPH_GROUPS_SPEC::Y_AXIS("Y_AXIS");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_GRAPH_GROUPS_SPEC::COLOUR_RED("COLOUR_RED");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_GRAPH_GROUPS_SPEC::COLOUR_GREEN("COLOUR_GREEN");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_GRAPH_GROUPS_SPEC::COLOUR_BLUE("COLOUR_BLUE");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_GRAPH_GROUPS_SPEC::DOTSTYLE("DOTSTYLE");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_GRAPH_GROUPS_SPEC::LINESTYLE("LINESTYLE");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_GRAPH_GROUPS_SPEC::LINEWIDTH("LINEWIDTH");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_GRAPH_GROUPS_SPEC::SCALE("SCALE");

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_GRAPH_GROUPS_SPEC::CGC_GRAPH_GROUPS_SPEC(cCBS_StdConnection* Connection)
:CSMC_DBData("GC_GRAPH_GROUPS_SPEC",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_GRAPH_GROUPS_SPEC::CGC_GRAPH_GROUPS_SPEC(cCBS_Connection* Connection)
:CSMC_DBData("GC_GRAPH_GROUPS_SPEC",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_GRAPH_GROUPS_SPEC::CGC_GRAPH_GROUPS_SPEC()
:CSMC_DBData("GC_GRAPH_GROUPS_SPEC")
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_GRAPH_GROUPS_SPEC::~CGC_GRAPH_GROUPS_SPEC()
{
  //please implement virtual method, to destruct your members
  doOnDestruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Plant identifier
std::string CGC_GRAPH_GROUPS_SPEC::getPLANT(long Row)
{
  return getString(CGC_GRAPH_GROUPS_SPEC::PLANT, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_GRAPH_GROUPS_SPEC::setPLANT(const std::string& value)
{
  setString(CGC_GRAPH_GROUPS_SPEC::PLANT, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Data group identification
long CGC_GRAPH_GROUPS_SPEC::getDATAGROUPID(long Row)
{
  return getLong(CGC_GRAPH_GROUPS_SPEC::DATAGROUPID, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_GRAPH_GROUPS_SPEC::setDATAGROUPID(long value)
{
  setLong(CGC_GRAPH_GROUPS_SPEC::DATAGROUPID, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Data specification identification
long CGC_GRAPH_GROUPS_SPEC::getDATASPECID(long Row)
{
  return getLong(CGC_GRAPH_GROUPS_SPEC::DATASPECID, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_GRAPH_GROUPS_SPEC::setDATASPECID(long value)
{
  setLong(CGC_GRAPH_GROUPS_SPEC::DATASPECID, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Data specification name
std::string CGC_GRAPH_GROUPS_SPEC::getDATASPECNAME(long Row)
{
  return getString(CGC_GRAPH_GROUPS_SPEC::DATASPECNAME, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_GRAPH_GROUPS_SPEC::setDATASPECNAME(const std::string& value)
{
  setString(CGC_GRAPH_GROUPS_SPEC::DATASPECNAME, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Unit specifier
std::string CGC_GRAPH_GROUPS_SPEC::getDATASPECUNIT(long Row)
{
  return getString(CGC_GRAPH_GROUPS_SPEC::DATASPECUNIT, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_GRAPH_GROUPS_SPEC::setDATASPECUNIT(const std::string& value)
{
  setString(CGC_GRAPH_GROUPS_SPEC::DATASPECUNIT, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Y axis identification. first = 1, second = 2, second = 2
long CGC_GRAPH_GROUPS_SPEC::getY_AXIS(long Row)
{
  return getLong(CGC_GRAPH_GROUPS_SPEC::Y_AXIS, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_GRAPH_GROUPS_SPEC::setY_AXIS(long value)
{
  setLong(CGC_GRAPH_GROUPS_SPEC::Y_AXIS, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##RGB colour settings
long CGC_GRAPH_GROUPS_SPEC::getCOLOUR_RED(long Row)
{
  return getLong(CGC_GRAPH_GROUPS_SPEC::COLOUR_RED, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_GRAPH_GROUPS_SPEC::setCOLOUR_RED(long value)
{
  setLong(CGC_GRAPH_GROUPS_SPEC::COLOUR_RED, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##RGB colour settings
long CGC_GRAPH_GROUPS_SPEC::getCOLOUR_GREEN(long Row)
{
  return getLong(CGC_GRAPH_GROUPS_SPEC::COLOUR_GREEN, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_GRAPH_GROUPS_SPEC::setCOLOUR_GREEN(long value)
{
  setLong(CGC_GRAPH_GROUPS_SPEC::COLOUR_GREEN, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##RGB colour settings
long CGC_GRAPH_GROUPS_SPEC::getCOLOUR_BLUE(long Row)
{
  return getLong(CGC_GRAPH_GROUPS_SPEC::COLOUR_BLUE, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_GRAPH_GROUPS_SPEC::setCOLOUR_BLUE(long value)
{
  setLong(CGC_GRAPH_GROUPS_SPEC::COLOUR_BLUE, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Dot style identification
long CGC_GRAPH_GROUPS_SPEC::getDOTSTYLE(long Row)
{
  return getLong(CGC_GRAPH_GROUPS_SPEC::DOTSTYLE, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_GRAPH_GROUPS_SPEC::setDOTSTYLE(long value)
{
  setLong(CGC_GRAPH_GROUPS_SPEC::DOTSTYLE, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Line style identification
long CGC_GRAPH_GROUPS_SPEC::getLINESTYLE(long Row)
{
  return getLong(CGC_GRAPH_GROUPS_SPEC::LINESTYLE, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_GRAPH_GROUPS_SPEC::setLINESTYLE(long value)
{
  setLong(CGC_GRAPH_GROUPS_SPEC::LINESTYLE, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Line width
long CGC_GRAPH_GROUPS_SPEC::getLINEWIDTH(long Row)
{
  return getLong(CGC_GRAPH_GROUPS_SPEC::LINEWIDTH, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_GRAPH_GROUPS_SPEC::setLINEWIDTH(long value)
{
  setLong(CGC_GRAPH_GROUPS_SPEC::LINEWIDTH, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Scaling factor for graphical representation. The values from GC_GRAPH_DATASPEC are multiplied by this value.
double CGC_GRAPH_GROUPS_SPEC::getSCALE(long Row)
{
  return getDouble(CGC_GRAPH_GROUPS_SPEC::SCALE, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_GRAPH_GROUPS_SPEC::setSCALE(double value)
{
  setDouble(CGC_GRAPH_GROUPS_SPEC::SCALE, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
bool CGC_GRAPH_GROUPS_SPEC::select(const std::string& PLANT, long DATAGROUPID, long DATASPECID)
{
  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause(CGC_GRAPH_GROUPS_SPEC::PLANT,PLANT);
  addWhereClause(CGC_GRAPH_GROUPS_SPEC::DATAGROUPID,DATAGROUPID);
  addWhereClause(CGC_GRAPH_GROUPS_SPEC::DATASPECID,DATASPECID);
  m_Statement += getWhereStatement() + ";";

  return CSMC_DBData::select();
}

//## ------------------------------------END-GENERATED-CODE---------------------- 

//## ------------------------------------YOUR-CODE------------------------------- 


