//## Copyright (C) 2013 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 


#include "CGTH_PP_BASE_VAL.h"


//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGTH_PP_BASE_VAL::PLANTNO("PLANTNO");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGTH_PP_BASE_VAL::PRACNO("PRACNO");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGTH_PP_BASE_VAL::REVTIME("REVTIME");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGTH_PP_BASE_VAL::DESCR_E("DESCR_E");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGTH_PP_BASE_VAL::DESCR_C("DESCR_C");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGTH_PP_BASE_VAL::USERCODE("USERCODE");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGTH_PP_BASE_VAL::BLOW_RELATION("BLOW_RELATION");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGTH_PP_BASE_VAL::MG_CONTENT("MG_CONTENT");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGTH_PP_BASE_VAL::CAF2_CONTENT("CAF2_CONTENT");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGTH_PP_BASE_VAL::S_AIM_1("S_AIM_1");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGTH_PP_BASE_VAL::S_AIM_2("S_AIM_2");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGTH_PP_BASE_VAL::S_AIM_3("S_AIM_3");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGTH_PP_BASE_VAL::S_AIM_4("S_AIM_4");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGTH_PP_BASE_VAL::S_AIM_5("S_AIM_5");

//##DBClassCodeUtility ! DO NOT EDIT !
CGTH_PP_BASE_VAL::CGTH_PP_BASE_VAL(cCBS_StdConnection* Connection)
:CSMC_DBData("GTH_PP_BASE_VAL",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGTH_PP_BASE_VAL::CGTH_PP_BASE_VAL(cCBS_Connection* Connection)
:CSMC_DBData("GTH_PP_BASE_VAL",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGTH_PP_BASE_VAL::CGTH_PP_BASE_VAL()
:CSMC_DBData("GTH_PP_BASE_VAL")
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGTH_PP_BASE_VAL::~CGTH_PP_BASE_VAL()
{
  //please implement virtual method, to destruct your members
  doOnDestruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
long CGTH_PP_BASE_VAL::getPLANTNO(long Row)
{
  return getLong(CGTH_PP_BASE_VAL::PLANTNO, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGTH_PP_BASE_VAL::setPLANTNO(long value)
{
  setLong(CGTH_PP_BASE_VAL::PLANTNO, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
long CGTH_PP_BASE_VAL::getPRACNO(long Row)
{
  return getLong(CGTH_PP_BASE_VAL::PRACNO, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGTH_PP_BASE_VAL::setPRACNO(long value)
{
  setLong(CGTH_PP_BASE_VAL::PRACNO, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
CDateTime CGTH_PP_BASE_VAL::getREVTIME(long Row)
{
  CDateTime D;
  D.fromDBString(getString(CGTH_PP_BASE_VAL::REVTIME, Row));
  return D;
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGTH_PP_BASE_VAL::setREVTIME(const CDateTime& value)
{
 setString(CGTH_PP_BASE_VAL::REVTIME, value.toDBString());
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CGTH_PP_BASE_VAL::getDESCR_E(long Row)
{
  return getString(CGTH_PP_BASE_VAL::DESCR_E, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGTH_PP_BASE_VAL::setDESCR_E(const std::string& value)
{
  setString(CGTH_PP_BASE_VAL::DESCR_E, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CGTH_PP_BASE_VAL::getDESCR_C(long Row)
{
  return getString(CGTH_PP_BASE_VAL::DESCR_C, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGTH_PP_BASE_VAL::setDESCR_C(const std::string& value)
{
  setString(CGTH_PP_BASE_VAL::DESCR_C, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
std::string CGTH_PP_BASE_VAL::getUSERCODE(long Row)
{
  return getString(CGTH_PP_BASE_VAL::USERCODE, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGTH_PP_BASE_VAL::setUSERCODE(const std::string& value)
{
  setString(CGTH_PP_BASE_VAL::USERCODE, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CGTH_PP_BASE_VAL::getBLOW_RELATION(long Row)
{
  return getDouble(CGTH_PP_BASE_VAL::BLOW_RELATION, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGTH_PP_BASE_VAL::setBLOW_RELATION(double value)
{
  setDouble(CGTH_PP_BASE_VAL::BLOW_RELATION, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CGTH_PP_BASE_VAL::getMG_CONTENT(long Row)
{
  return getDouble(CGTH_PP_BASE_VAL::MG_CONTENT, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGTH_PP_BASE_VAL::setMG_CONTENT(double value)
{
  setDouble(CGTH_PP_BASE_VAL::MG_CONTENT, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CGTH_PP_BASE_VAL::getCAF2_CONTENT(long Row)
{
  return getDouble(CGTH_PP_BASE_VAL::CAF2_CONTENT, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGTH_PP_BASE_VAL::setCAF2_CONTENT(double value)
{
  setDouble(CGTH_PP_BASE_VAL::CAF2_CONTENT, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CGTH_PP_BASE_VAL::getS_AIM_1(long Row)
{
  return getDouble(CGTH_PP_BASE_VAL::S_AIM_1, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGTH_PP_BASE_VAL::setS_AIM_1(double value)
{
  setDouble(CGTH_PP_BASE_VAL::S_AIM_1, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CGTH_PP_BASE_VAL::getS_AIM_2(long Row)
{
  return getDouble(CGTH_PP_BASE_VAL::S_AIM_2, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGTH_PP_BASE_VAL::setS_AIM_2(double value)
{
  setDouble(CGTH_PP_BASE_VAL::S_AIM_2, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CGTH_PP_BASE_VAL::getS_AIM_3(long Row)
{
  return getDouble(CGTH_PP_BASE_VAL::S_AIM_3, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGTH_PP_BASE_VAL::setS_AIM_3(double value)
{
  setDouble(CGTH_PP_BASE_VAL::S_AIM_3, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CGTH_PP_BASE_VAL::getS_AIM_4(long Row)
{
  return getDouble(CGTH_PP_BASE_VAL::S_AIM_4, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGTH_PP_BASE_VAL::setS_AIM_4(double value)
{
  setDouble(CGTH_PP_BASE_VAL::S_AIM_4, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
double CGTH_PP_BASE_VAL::getS_AIM_5(long Row)
{
  return getDouble(CGTH_PP_BASE_VAL::S_AIM_5, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGTH_PP_BASE_VAL::setS_AIM_5(double value)
{
  setDouble(CGTH_PP_BASE_VAL::S_AIM_5, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
bool CGTH_PP_BASE_VAL::select(long PLANTNO, long PRACNO)
{
  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause(CGTH_PP_BASE_VAL::PLANTNO,PLANTNO);
  addWhereClause(CGTH_PP_BASE_VAL::PRACNO,PRACNO);
  m_Statement += getWhereStatement() + ";";

  return CSMC_DBData::select();
}

//## ------------------------------------END-GENERATED-CODE---------------------- 

//## ------------------------------------YOUR-CODE------------------------------- 


