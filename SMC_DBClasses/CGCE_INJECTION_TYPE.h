//## Copyright (C) 2009 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 

#if defined (_MSC_VER) && (_MSC_VER >= 1000)
#pragma once
#endif
#ifndef _INC_CGCE_INJECTION_TYPE_INCLUDED
#define _INC_CGCE_INJECTION_TYPE_INCLUDED

#include "CSMC_DBData.h"

class CGCE_INJECTION_TYPE
: public CSMC_DBData
{

public:
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string INJTYPE;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string INJTYPEDESCR;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PURP_CODE_1;
  //##DBClassCodeUtility ! DO NOT EDIT !
  static const std::string PURP_CODE_2;

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGCE_INJECTION_TYPE(cCBS_StdConnection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGCE_INJECTION_TYPE(cCBS_Connection* Connection);

  //##DBClassCodeUtility ! DO NOT EDIT !
  CGCE_INJECTION_TYPE();

  //##DBClassCodeUtility ! DO NOT EDIT !
  ~CGCE_INJECTION_TYPE();

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getINJTYPE(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setINJTYPE(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getINJTYPEDESCR(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setINJTYPEDESCR(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getPURP_CODE_1(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPURP_CODE_1(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  std::string getPURP_CODE_2(long Row);

  //##DBClassCodeUtility ! DO NOT EDIT !
  void setPURP_CODE_2(const std::string& value);

  //##DBClassCodeUtility ! DO NOT EDIT !
  bool select(const std::string& INJTYPE);

  //## ----------------------------------END-GENERATED-CODE--------------------- 

  //## ----------------------------------YOUR-CODE------------------------------ 

  bool selectByPurpCode(const std::string& PURP_CODE_1, const std::string& PURP_CODE_2);

  std::string getInjTypeByPurposeCode(const std::string& PURP_CODE_1, const std::string& PURP_CODE_2);

  std::string getPurposeCodeByInjType(const std::string& INJTYPE);

};

#endif /* _INC_CGCE_INJECTION_TYPE_INCLUDED */
