//## Copyright (C) 2012 SMS Siemag AG, Germany 
//## Version generated by DBClassCodeUtility BETA 0.6.3 
//## ALL METHODS MARKED AS - //##DBClassCodeUtility - WILL BE OVERWRITTEN, IF DB CLASS RE-GENERATED 
//## MANUALLY IMPLEMENTED METHODS MUST BE LOCATED BELOW THE MARK - "YOUR-CODE" - 


#include "CGC_MEMBER_CAT.h"


//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_MEMBER_CAT::MEMBER_ID("MEMBER_ID");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_MEMBER_CAT::MEMBER_ROLE("MEMBER_ROLE");
//##DBClassCodeUtility ! DO NOT EDIT !
const std::string CGC_MEMBER_CAT::MEMBER_NAME("MEMBER_NAME");

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_MEMBER_CAT::CGC_MEMBER_CAT(cCBS_StdConnection* Connection)
:CSMC_DBData("GC_MEMBER_CAT",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_MEMBER_CAT::CGC_MEMBER_CAT(cCBS_Connection* Connection)
:CSMC_DBData("GC_MEMBER_CAT",Connection)
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_MEMBER_CAT::CGC_MEMBER_CAT()
:CSMC_DBData("GC_MEMBER_CAT")
{
  //please implement virtual method, to initialize your members  
  doOnConstruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
CGC_MEMBER_CAT::~CGC_MEMBER_CAT()
{
  //please implement virtual method, to destruct your members
  doOnDestruct(); 
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Short form of member name
std::string CGC_MEMBER_CAT::getMEMBER_ID(long Row)
{
  return getString(CGC_MEMBER_CAT::MEMBER_ID, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_MEMBER_CAT::setMEMBER_ID(const std::string& value)
{
  setString(CGC_MEMBER_CAT::MEMBER_ID, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Description of member role, e.g Supervisor, Member, Foremen
long CGC_MEMBER_CAT::getMEMBER_ROLE(long Row)
{
  return getLong(CGC_MEMBER_CAT::MEMBER_ROLE, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_MEMBER_CAT::setMEMBER_ROLE(long value)
{
  setLong(CGC_MEMBER_CAT::MEMBER_ROLE, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
//##Full name of member, second name comma first name.
std::string CGC_MEMBER_CAT::getMEMBER_NAME(long Row)
{
  return getString(CGC_MEMBER_CAT::MEMBER_NAME, Row);
}

//##DBClassCodeUtility ! DO NOT EDIT !
void CGC_MEMBER_CAT::setMEMBER_NAME(const std::string& value)
{
  setString(CGC_MEMBER_CAT::MEMBER_NAME, value);
}

//##DBClassCodeUtility ! DO NOT EDIT !
bool CGC_MEMBER_CAT::select(const std::string& MEMBER_ID)
{
  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause(CGC_MEMBER_CAT::MEMBER_ID,MEMBER_ID);
  m_Statement += getWhereStatement() + ";";

  return CSMC_DBData::select();
}

//## ------------------------------------END-GENERATED-CODE---------------------- 

//## ------------------------------------YOUR-CODE------------------------------- 

bool CGC_MEMBER_CAT::selectByMemeberRole(const std::string& MEMBER_ID, long MEMBER_ROLE )
{
  cleanWhereStatement();

  m_Statement = "Select * from " + m_TableName;

  addWhereClause(CGC_MEMBER_CAT::MEMBER_ID,MEMBER_ID);
  addWhereClause(CGC_MEMBER_CAT::MEMBER_ROLE,MEMBER_ROLE);
  
  m_Statement += getWhereStatement() + ";";


  return CSMC_DBData::select();
}


