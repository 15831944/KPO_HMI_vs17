// This file is generated by omniidl (C++ backend) - omniORB_4_2. Do not edit.

#include "Telcom_In_s.hh"

OMNI_USING_NAMESPACE(omni)

static const char* _0RL_dyn_library_version = omniORB_4_2_dyn;

static ::CORBA::TypeCode::_Tracker _0RL_tcTrack(__FILE__);

static CORBA::PR_structMember _0RL_structmember_HeaderType[] = {
  {"MessageLength", CORBA::TypeCode::PR_string_tc(0, &_0RL_tcTrack)},
  {"MessageId", CORBA::TypeCode::PR_string_tc(0, &_0RL_tcTrack)},
  {"MessageCount", CORBA::TypeCode::PR_string_tc(0, &_0RL_tcTrack)},
  {"UnitNo", CORBA::TypeCode::PR_string_tc(0, &_0RL_tcTrack)}
};

#ifdef _0RL_tc_HeaderType
#  undef _0RL_tc_HeaderType
#endif
static CORBA::TypeCode_ptr _0RL_tc_HeaderType = CORBA::TypeCode::PR_struct_tc("IDL:HeaderType:1.0", "HeaderType", _0RL_structmember_HeaderType, 4, &_0RL_tcTrack);

const CORBA::TypeCode_ptr _tc_HeaderType = _0RL_tc_HeaderType;


static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL201_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL201/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL201 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__LFL201_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL201::_tc_t_CreateTime = _0RL_tc_Telegram__LFL201_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL203_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL203/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL203 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__LFL203_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL203::_tc_t_CreateTime = _0RL_tc_Telegram__LFL203_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL203_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL203/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL203 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__LFL203_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL203::_tc_t_Spare = _0RL_tc_Telegram__LFL203_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL204_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL204/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL204 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__LFL204_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL204::_tc_t_CreateTime = _0RL_tc_Telegram__LFL204_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL204_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL204/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL204 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__LFL204_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL204::_tc_t_Spare = _0RL_tc_Telegram__LFL204_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL205_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL205/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL205 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__LFL205_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL205::_tc_t_CreateTime = _0RL_tc_Telegram__LFL205_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL205_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL205/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL205 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__LFL205_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL205::_tc_t_Spare = _0RL_tc_Telegram__LFL205_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL206_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL206/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL206 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__LFL206_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL206::_tc_t_CreateTime = _0RL_tc_Telegram__LFL206_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL206_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL206/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL206 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__LFL206_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL206::_tc_t_Spare = _0RL_tc_Telegram__LFL206_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL209_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL209/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL209 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__LFL209_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL209::_tc_t_CreateTime = _0RL_tc_Telegram__LFL209_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL209_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL209/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL209 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__LFL209_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL209::_tc_t_Spare = _0RL_tc_Telegram__LFL209_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL211_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL211/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL211 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__LFL211_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL211::_tc_t_CreateTime = _0RL_tc_Telegram__LFL211_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL211_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL211/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL211 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__LFL211_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL211::_tc_t_Spare = _0RL_tc_Telegram__LFL211_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL212_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL212/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL212 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__LFL212_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL212::_tc_t_CreateTime = _0RL_tc_Telegram__LFL212_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL212_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL212/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL212 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__LFL212_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL212::_tc_t_Spare = _0RL_tc_Telegram__LFL212_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL213_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL213/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL213 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__LFL213_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL213::_tc_t_CreateTime = _0RL_tc_Telegram__LFL213_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL213_mt__AimDepTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL213/t_AimDepTime:1.0", "t_AimDepTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL213 { 
  const ::CORBA::TypeCode_ptr _tc_t_AimDepTime = _0RL_tc_Telegram__LFL213_mt__AimDepTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL213::_tc_t_AimDepTime = _0RL_tc_Telegram__LFL213_mt__AimDepTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL213_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL213/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL213 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__LFL213_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL213::_tc_t_Spare = _0RL_tc_Telegram__LFL213_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL217_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL217/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL217 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__LFL217_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL217::_tc_t_CreateTime = _0RL_tc_Telegram__LFL217_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL217_mt__DelayStartTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL217/t_DelayStartTime:1.0", "t_DelayStartTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL217 { 
  const ::CORBA::TypeCode_ptr _tc_t_DelayStartTime = _0RL_tc_Telegram__LFL217_mt__DelayStartTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL217::_tc_t_DelayStartTime = _0RL_tc_Telegram__LFL217_mt__DelayStartTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL217_mt__DelayEndTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL217/t_DelayEndTime:1.0", "t_DelayEndTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL217 { 
  const ::CORBA::TypeCode_ptr _tc_t_DelayEndTime = _0RL_tc_Telegram__LFL217_mt__DelayEndTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL217::_tc_t_DelayEndTime = _0RL_tc_Telegram__LFL217_mt__DelayEndTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL217_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL217/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL217 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__LFL217_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL217::_tc_t_Spare = _0RL_tc_Telegram__LFL217_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL220_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL220/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL220 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__LFL220_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL220::_tc_t_CreateTime = _0RL_tc_Telegram__LFL220_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL220_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL220/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL220 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__LFL220_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL220::_tc_t_Spare = _0RL_tc_Telegram__LFL220_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL221_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL221/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL221 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__LFL221_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL221::_tc_t_CreateTime = _0RL_tc_Telegram__LFL221_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL221_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL221/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL221 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__LFL221_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL221::_tc_t_Spare = _0RL_tc_Telegram__LFL221_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL222_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL222/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL222 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__LFL222_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL222::_tc_t_CreateTime = _0RL_tc_Telegram__LFL222_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL222_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL222/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL222 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__LFL222_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL222::_tc_t_Spare = _0RL_tc_Telegram__LFL222_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL223_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL223/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL223 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__LFL223_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL223::_tc_t_CreateTime = _0RL_tc_Telegram__LFL223_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL223_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL223/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL223 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__LFL223_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL223::_tc_t_Spare = _0RL_tc_Telegram__LFL223_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL224_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL224/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL224 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__LFL224_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL224::_tc_t_CreateTime = _0RL_tc_Telegram__LFL224_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL224_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL224/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL224 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__LFL224_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL224::_tc_t_Spare = _0RL_tc_Telegram__LFL224_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL225_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL225/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL225 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__LFL225_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL225::_tc_t_CreateTime = _0RL_tc_Telegram__LFL225_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL225_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL225/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL225 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__LFL225_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL225::_tc_t_Spare = _0RL_tc_Telegram__LFL225_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL226_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL226/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL226 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__LFL226_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL226::_tc_t_CreateTime = _0RL_tc_Telegram__LFL226_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL226_mt__StirrGasType = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL226/t_StirrGasType:1.0", "t_StirrGasType", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL226 { 
  const ::CORBA::TypeCode_ptr _tc_t_StirrGasType = _0RL_tc_Telegram__LFL226_mt__StirrGasType;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL226::_tc_t_StirrGasType = _0RL_tc_Telegram__LFL226_mt__StirrGasType;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL226_mt__StirrInt = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL226/t_StirrInt:1.0", "t_StirrInt", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL226 { 
  const ::CORBA::TypeCode_ptr _tc_t_StirrInt = _0RL_tc_Telegram__LFL226_mt__StirrInt;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL226::_tc_t_StirrInt = _0RL_tc_Telegram__LFL226_mt__StirrInt;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL226_mt__FlowAct = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL226/t_FlowAct:1.0", "t_FlowAct", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_double_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL226 { 
  const ::CORBA::TypeCode_ptr _tc_t_FlowAct = _0RL_tc_Telegram__LFL226_mt__FlowAct;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL226::_tc_t_FlowAct = _0RL_tc_Telegram__LFL226_mt__FlowAct;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL226_mt__Pressure = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL226/t_Pressure:1.0", "t_Pressure", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_double_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL226 { 
  const ::CORBA::TypeCode_ptr _tc_t_Pressure = _0RL_tc_Telegram__LFL226_mt__Pressure;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL226::_tc_t_Pressure = _0RL_tc_Telegram__LFL226_mt__Pressure;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL226_mt__StirrGasCons = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL226/t_StirrGasCons:1.0", "t_StirrGasCons", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_double_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL226 { 
  const ::CORBA::TypeCode_ptr _tc_t_StirrGasCons = _0RL_tc_Telegram__LFL226_mt__StirrGasCons;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL226::_tc_t_StirrGasCons = _0RL_tc_Telegram__LFL226_mt__StirrGasCons;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL226_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL226/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL226 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__LFL226_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL226::_tc_t_Spare = _0RL_tc_Telegram__LFL226_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL230_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL230/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL230 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__LFL230_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL230::_tc_t_CreateTime = _0RL_tc_Telegram__LFL230_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL230_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL230/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL230 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__LFL230_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL230::_tc_t_Spare = _0RL_tc_Telegram__LFL230_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL240_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL240/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL240 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__LFL240_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL240::_tc_t_CreateTime = _0RL_tc_Telegram__LFL240_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL240_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL240/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL240 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__LFL240_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL240::_tc_t_Spare = _0RL_tc_Telegram__LFL240_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL260_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL260/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL260 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__LFL260_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL260::_tc_t_CreateTime = _0RL_tc_Telegram__LFL260_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL260_mt__MatCode = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL260/t_MatCode:1.0", "t_MatCode", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_string_tc(0, &_0RL_tcTrack), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL260 { 
  const ::CORBA::TypeCode_ptr _tc_t_MatCode = _0RL_tc_Telegram__LFL260_mt__MatCode;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL260::_tc_t_MatCode = _0RL_tc_Telegram__LFL260_mt__MatCode;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL260_mt__MatWeight = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL260/t_MatWeight:1.0", "t_MatWeight", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_double_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL260 { 
  const ::CORBA::TypeCode_ptr _tc_t_MatWeight = _0RL_tc_Telegram__LFL260_mt__MatWeight;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL260::_tc_t_MatWeight = _0RL_tc_Telegram__LFL260_mt__MatWeight;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL260_mt__SourceNo = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL260/t_SourceNo:1.0", "t_SourceNo", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL260 { 
  const ::CORBA::TypeCode_ptr _tc_t_SourceNo = _0RL_tc_Telegram__LFL260_mt__SourceNo;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL260::_tc_t_SourceNo = _0RL_tc_Telegram__LFL260_mt__SourceNo;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL260_mt__FeedingRate = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL260/t_FeedingRate:1.0", "t_FeedingRate", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_double_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL260 { 
  const ::CORBA::TypeCode_ptr _tc_t_FeedingRate = _0RL_tc_Telegram__LFL260_mt__FeedingRate;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL260::_tc_t_FeedingRate = _0RL_tc_Telegram__LFL260_mt__FeedingRate;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL260_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL260/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL260 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__LFL260_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL260::_tc_t_Spare = _0RL_tc_Telegram__LFL260_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL261_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL261/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL261 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__LFL261_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL261::_tc_t_CreateTime = _0RL_tc_Telegram__LFL261_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL261_mt__MatCode = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL261/t_MatCode:1.0", "t_MatCode", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_string_tc(0, &_0RL_tcTrack), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL261 { 
  const ::CORBA::TypeCode_ptr _tc_t_MatCode = _0RL_tc_Telegram__LFL261_mt__MatCode;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL261::_tc_t_MatCode = _0RL_tc_Telegram__LFL261_mt__MatCode;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL261_mt__MinWeight = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL261/t_MinWeight:1.0", "t_MinWeight", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_double_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL261 { 
  const ::CORBA::TypeCode_ptr _tc_t_MinWeight = _0RL_tc_Telegram__LFL261_mt__MinWeight;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL261::_tc_t_MinWeight = _0RL_tc_Telegram__LFL261_mt__MinWeight;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL261_mt__SourceNo = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL261/t_SourceNo:1.0", "t_SourceNo", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL261 { 
  const ::CORBA::TypeCode_ptr _tc_t_SourceNo = _0RL_tc_Telegram__LFL261_mt__SourceNo;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL261::_tc_t_SourceNo = _0RL_tc_Telegram__LFL261_mt__SourceNo;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL261_mt__Source = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL261/t_Source:1.0", "t_Source", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL261 { 
  const ::CORBA::TypeCode_ptr _tc_t_Source = _0RL_tc_Telegram__LFL261_mt__Source;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL261::_tc_t_Source = _0RL_tc_Telegram__LFL261_mt__Source;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL261_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL261/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL261 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__LFL261_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL261::_tc_t_Spare = _0RL_tc_Telegram__LFL261_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL270_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL270/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL270 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__LFL270_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL270::_tc_t_CreateTime = _0RL_tc_Telegram__LFL270_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL270_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL270/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL270 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__LFL270_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL270::_tc_t_Spare = _0RL_tc_Telegram__LFL270_mt__Spare;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL281_mt__CreateTime = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL281/t_CreateTime:1.0", "t_CreateTime", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL281 { 
  const ::CORBA::TypeCode_ptr _tc_t_CreateTime = _0RL_tc_Telegram__LFL281_mt__CreateTime;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL281::_tc_t_CreateTime = _0RL_tc_Telegram__LFL281_mt__CreateTime;
#endif

static CORBA::TypeCode_ptr _0RL_tc_Telegram__LFL281_mt__Spare = CORBA::TypeCode::PR_alias_tc("IDL:Telegram_LFL281/t_Spare:1.0", "t_Spare", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_long_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace Telegram_LFL281 { 
  const ::CORBA::TypeCode_ptr _tc_t_Spare = _0RL_tc_Telegram__LFL281_mt__Spare;
} 
#else
const ::CORBA::TypeCode_ptr Telegram_LFL281::_tc_t_Spare = _0RL_tc_Telegram__LFL281_mt__Spare;
#endif

static void _0RL_HeaderType_marshal_fn(cdrStream& _s, void* _v)
{
  HeaderType* _p = (HeaderType*)_v;
  *_p >>= _s;
}
static void _0RL_HeaderType_unmarshal_fn(cdrStream& _s, void*& _v)
{
  HeaderType* _p = new HeaderType;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_HeaderType_destructor_fn(void* _v)
{
  HeaderType* _p = (HeaderType*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const HeaderType& _s)
{
  HeaderType* _p = new HeaderType(_s);
  _a.PR_insert(_0RL_tc_HeaderType,
               _0RL_HeaderType_marshal_fn,
               _0RL_HeaderType_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, HeaderType* _sp)
{
  _a.PR_insert(_0RL_tc_HeaderType,
               _0RL_HeaderType_marshal_fn,
               _0RL_HeaderType_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, HeaderType*& _sp)
{
  return _a >>= (const HeaderType*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const HeaderType*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_HeaderType,
                    _0RL_HeaderType_unmarshal_fn,
                    _0RL_HeaderType_marshal_fn,
                    _0RL_HeaderType_destructor_fn,
                    _v)) {
    _sp = (const HeaderType*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL201_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL201::t_CreateTime* _p = (Telegram_LFL201::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL201_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL201::t_CreateTime* _p = new Telegram_LFL201::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL201_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_LFL201::t_CreateTime* _p = (Telegram_LFL201::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL201::t_CreateTime& _s)
{
  Telegram_LFL201::t_CreateTime* _p = new Telegram_LFL201::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL201_mt__CreateTime,
               _0RL_Telegram__LFL201_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL201_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL201::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL201_mt__CreateTime,
               _0RL_Telegram__LFL201_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL201_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL201::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_LFL201::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL201::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL201_mt__CreateTime,
                    _0RL_Telegram__LFL201_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__LFL201_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__LFL201_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL201::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL203_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL203::t_CreateTime* _p = (Telegram_LFL203::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL203_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL203::t_CreateTime* _p = new Telegram_LFL203::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL203_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_LFL203::t_CreateTime* _p = (Telegram_LFL203::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL203::t_CreateTime& _s)
{
  Telegram_LFL203::t_CreateTime* _p = new Telegram_LFL203::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL203_mt__CreateTime,
               _0RL_Telegram__LFL203_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL203_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL203::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL203_mt__CreateTime,
               _0RL_Telegram__LFL203_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL203_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL203::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_LFL203::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL203::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL203_mt__CreateTime,
                    _0RL_Telegram__LFL203_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__LFL203_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__LFL203_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL203::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL203_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL203::t_Spare* _p = (Telegram_LFL203::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL203_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL203::t_Spare* _p = new Telegram_LFL203::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL203_mt__Spare_destructor_fn(void* _v)
{
  Telegram_LFL203::t_Spare* _p = (Telegram_LFL203::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL203::t_Spare& _s)
{
  Telegram_LFL203::t_Spare* _p = new Telegram_LFL203::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL203_mt__Spare,
               _0RL_Telegram__LFL203_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL203_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL203::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL203_mt__Spare,
               _0RL_Telegram__LFL203_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL203_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL203::t_Spare*& _sp)
{
  return _a >>= (const Telegram_LFL203::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL203::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL203_mt__Spare,
                    _0RL_Telegram__LFL203_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__LFL203_mt__Spare_marshal_fn,
                    _0RL_Telegram__LFL203_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL203::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL204_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL204::t_CreateTime* _p = (Telegram_LFL204::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL204_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL204::t_CreateTime* _p = new Telegram_LFL204::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL204_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_LFL204::t_CreateTime* _p = (Telegram_LFL204::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL204::t_CreateTime& _s)
{
  Telegram_LFL204::t_CreateTime* _p = new Telegram_LFL204::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL204_mt__CreateTime,
               _0RL_Telegram__LFL204_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL204_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL204::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL204_mt__CreateTime,
               _0RL_Telegram__LFL204_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL204_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL204::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_LFL204::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL204::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL204_mt__CreateTime,
                    _0RL_Telegram__LFL204_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__LFL204_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__LFL204_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL204::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL204_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL204::t_Spare* _p = (Telegram_LFL204::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL204_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL204::t_Spare* _p = new Telegram_LFL204::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL204_mt__Spare_destructor_fn(void* _v)
{
  Telegram_LFL204::t_Spare* _p = (Telegram_LFL204::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL204::t_Spare& _s)
{
  Telegram_LFL204::t_Spare* _p = new Telegram_LFL204::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL204_mt__Spare,
               _0RL_Telegram__LFL204_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL204_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL204::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL204_mt__Spare,
               _0RL_Telegram__LFL204_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL204_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL204::t_Spare*& _sp)
{
  return _a >>= (const Telegram_LFL204::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL204::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL204_mt__Spare,
                    _0RL_Telegram__LFL204_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__LFL204_mt__Spare_marshal_fn,
                    _0RL_Telegram__LFL204_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL204::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL205_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL205::t_CreateTime* _p = (Telegram_LFL205::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL205_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL205::t_CreateTime* _p = new Telegram_LFL205::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL205_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_LFL205::t_CreateTime* _p = (Telegram_LFL205::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL205::t_CreateTime& _s)
{
  Telegram_LFL205::t_CreateTime* _p = new Telegram_LFL205::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL205_mt__CreateTime,
               _0RL_Telegram__LFL205_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL205_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL205::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL205_mt__CreateTime,
               _0RL_Telegram__LFL205_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL205_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL205::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_LFL205::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL205::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL205_mt__CreateTime,
                    _0RL_Telegram__LFL205_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__LFL205_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__LFL205_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL205::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL205_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL205::t_Spare* _p = (Telegram_LFL205::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL205_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL205::t_Spare* _p = new Telegram_LFL205::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL205_mt__Spare_destructor_fn(void* _v)
{
  Telegram_LFL205::t_Spare* _p = (Telegram_LFL205::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL205::t_Spare& _s)
{
  Telegram_LFL205::t_Spare* _p = new Telegram_LFL205::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL205_mt__Spare,
               _0RL_Telegram__LFL205_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL205_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL205::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL205_mt__Spare,
               _0RL_Telegram__LFL205_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL205_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL205::t_Spare*& _sp)
{
  return _a >>= (const Telegram_LFL205::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL205::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL205_mt__Spare,
                    _0RL_Telegram__LFL205_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__LFL205_mt__Spare_marshal_fn,
                    _0RL_Telegram__LFL205_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL205::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL206_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL206::t_CreateTime* _p = (Telegram_LFL206::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL206_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL206::t_CreateTime* _p = new Telegram_LFL206::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL206_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_LFL206::t_CreateTime* _p = (Telegram_LFL206::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL206::t_CreateTime& _s)
{
  Telegram_LFL206::t_CreateTime* _p = new Telegram_LFL206::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL206_mt__CreateTime,
               _0RL_Telegram__LFL206_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL206_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL206::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL206_mt__CreateTime,
               _0RL_Telegram__LFL206_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL206_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL206::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_LFL206::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL206::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL206_mt__CreateTime,
                    _0RL_Telegram__LFL206_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__LFL206_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__LFL206_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL206::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL206_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL206::t_Spare* _p = (Telegram_LFL206::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL206_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL206::t_Spare* _p = new Telegram_LFL206::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL206_mt__Spare_destructor_fn(void* _v)
{
  Telegram_LFL206::t_Spare* _p = (Telegram_LFL206::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL206::t_Spare& _s)
{
  Telegram_LFL206::t_Spare* _p = new Telegram_LFL206::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL206_mt__Spare,
               _0RL_Telegram__LFL206_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL206_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL206::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL206_mt__Spare,
               _0RL_Telegram__LFL206_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL206_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL206::t_Spare*& _sp)
{
  return _a >>= (const Telegram_LFL206::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL206::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL206_mt__Spare,
                    _0RL_Telegram__LFL206_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__LFL206_mt__Spare_marshal_fn,
                    _0RL_Telegram__LFL206_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL206::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL209_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL209::t_CreateTime* _p = (Telegram_LFL209::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL209_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL209::t_CreateTime* _p = new Telegram_LFL209::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL209_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_LFL209::t_CreateTime* _p = (Telegram_LFL209::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL209::t_CreateTime& _s)
{
  Telegram_LFL209::t_CreateTime* _p = new Telegram_LFL209::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL209_mt__CreateTime,
               _0RL_Telegram__LFL209_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL209_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL209::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL209_mt__CreateTime,
               _0RL_Telegram__LFL209_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL209_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL209::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_LFL209::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL209::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL209_mt__CreateTime,
                    _0RL_Telegram__LFL209_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__LFL209_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__LFL209_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL209::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL209_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL209::t_Spare* _p = (Telegram_LFL209::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL209_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL209::t_Spare* _p = new Telegram_LFL209::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL209_mt__Spare_destructor_fn(void* _v)
{
  Telegram_LFL209::t_Spare* _p = (Telegram_LFL209::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL209::t_Spare& _s)
{
  Telegram_LFL209::t_Spare* _p = new Telegram_LFL209::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL209_mt__Spare,
               _0RL_Telegram__LFL209_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL209_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL209::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL209_mt__Spare,
               _0RL_Telegram__LFL209_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL209_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL209::t_Spare*& _sp)
{
  return _a >>= (const Telegram_LFL209::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL209::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL209_mt__Spare,
                    _0RL_Telegram__LFL209_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__LFL209_mt__Spare_marshal_fn,
                    _0RL_Telegram__LFL209_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL209::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL211_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL211::t_CreateTime* _p = (Telegram_LFL211::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL211_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL211::t_CreateTime* _p = new Telegram_LFL211::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL211_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_LFL211::t_CreateTime* _p = (Telegram_LFL211::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL211::t_CreateTime& _s)
{
  Telegram_LFL211::t_CreateTime* _p = new Telegram_LFL211::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL211_mt__CreateTime,
               _0RL_Telegram__LFL211_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL211_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL211::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL211_mt__CreateTime,
               _0RL_Telegram__LFL211_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL211_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL211::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_LFL211::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL211::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL211_mt__CreateTime,
                    _0RL_Telegram__LFL211_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__LFL211_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__LFL211_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL211::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL211_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL211::t_Spare* _p = (Telegram_LFL211::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL211_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL211::t_Spare* _p = new Telegram_LFL211::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL211_mt__Spare_destructor_fn(void* _v)
{
  Telegram_LFL211::t_Spare* _p = (Telegram_LFL211::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL211::t_Spare& _s)
{
  Telegram_LFL211::t_Spare* _p = new Telegram_LFL211::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL211_mt__Spare,
               _0RL_Telegram__LFL211_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL211_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL211::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL211_mt__Spare,
               _0RL_Telegram__LFL211_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL211_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL211::t_Spare*& _sp)
{
  return _a >>= (const Telegram_LFL211::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL211::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL211_mt__Spare,
                    _0RL_Telegram__LFL211_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__LFL211_mt__Spare_marshal_fn,
                    _0RL_Telegram__LFL211_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL211::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL212_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL212::t_CreateTime* _p = (Telegram_LFL212::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL212_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL212::t_CreateTime* _p = new Telegram_LFL212::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL212_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_LFL212::t_CreateTime* _p = (Telegram_LFL212::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL212::t_CreateTime& _s)
{
  Telegram_LFL212::t_CreateTime* _p = new Telegram_LFL212::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL212_mt__CreateTime,
               _0RL_Telegram__LFL212_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL212_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL212::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL212_mt__CreateTime,
               _0RL_Telegram__LFL212_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL212_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL212::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_LFL212::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL212::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL212_mt__CreateTime,
                    _0RL_Telegram__LFL212_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__LFL212_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__LFL212_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL212::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL212_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL212::t_Spare* _p = (Telegram_LFL212::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL212_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL212::t_Spare* _p = new Telegram_LFL212::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL212_mt__Spare_destructor_fn(void* _v)
{
  Telegram_LFL212::t_Spare* _p = (Telegram_LFL212::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL212::t_Spare& _s)
{
  Telegram_LFL212::t_Spare* _p = new Telegram_LFL212::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL212_mt__Spare,
               _0RL_Telegram__LFL212_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL212_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL212::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL212_mt__Spare,
               _0RL_Telegram__LFL212_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL212_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL212::t_Spare*& _sp)
{
  return _a >>= (const Telegram_LFL212::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL212::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL212_mt__Spare,
                    _0RL_Telegram__LFL212_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__LFL212_mt__Spare_marshal_fn,
                    _0RL_Telegram__LFL212_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL212::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL213_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL213::t_CreateTime* _p = (Telegram_LFL213::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL213_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL213::t_CreateTime* _p = new Telegram_LFL213::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL213_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_LFL213::t_CreateTime* _p = (Telegram_LFL213::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL213::t_CreateTime& _s)
{
  Telegram_LFL213::t_CreateTime* _p = new Telegram_LFL213::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL213_mt__CreateTime,
               _0RL_Telegram__LFL213_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL213_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL213::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL213_mt__CreateTime,
               _0RL_Telegram__LFL213_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL213_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL213::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_LFL213::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL213::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL213_mt__CreateTime,
                    _0RL_Telegram__LFL213_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__LFL213_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__LFL213_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL213::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL213_mt__AimDepTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL213::t_AimDepTime* _p = (Telegram_LFL213::t_AimDepTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL213_mt__AimDepTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL213::t_AimDepTime* _p = new Telegram_LFL213::t_AimDepTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL213_mt__AimDepTime_destructor_fn(void* _v)
{
  Telegram_LFL213::t_AimDepTime* _p = (Telegram_LFL213::t_AimDepTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL213::t_AimDepTime& _s)
{
  Telegram_LFL213::t_AimDepTime* _p = new Telegram_LFL213::t_AimDepTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL213_mt__AimDepTime,
               _0RL_Telegram__LFL213_mt__AimDepTime_marshal_fn,
               _0RL_Telegram__LFL213_mt__AimDepTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL213::t_AimDepTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL213_mt__AimDepTime,
               _0RL_Telegram__LFL213_mt__AimDepTime_marshal_fn,
               _0RL_Telegram__LFL213_mt__AimDepTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL213::t_AimDepTime*& _sp)
{
  return _a >>= (const Telegram_LFL213::t_AimDepTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL213::t_AimDepTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL213_mt__AimDepTime,
                    _0RL_Telegram__LFL213_mt__AimDepTime_unmarshal_fn,
                    _0RL_Telegram__LFL213_mt__AimDepTime_marshal_fn,
                    _0RL_Telegram__LFL213_mt__AimDepTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL213::t_AimDepTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL213_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL213::t_Spare* _p = (Telegram_LFL213::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL213_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL213::t_Spare* _p = new Telegram_LFL213::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL213_mt__Spare_destructor_fn(void* _v)
{
  Telegram_LFL213::t_Spare* _p = (Telegram_LFL213::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL213::t_Spare& _s)
{
  Telegram_LFL213::t_Spare* _p = new Telegram_LFL213::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL213_mt__Spare,
               _0RL_Telegram__LFL213_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL213_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL213::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL213_mt__Spare,
               _0RL_Telegram__LFL213_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL213_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL213::t_Spare*& _sp)
{
  return _a >>= (const Telegram_LFL213::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL213::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL213_mt__Spare,
                    _0RL_Telegram__LFL213_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__LFL213_mt__Spare_marshal_fn,
                    _0RL_Telegram__LFL213_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL213::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL217_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL217::t_CreateTime* _p = (Telegram_LFL217::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL217_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL217::t_CreateTime* _p = new Telegram_LFL217::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL217_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_LFL217::t_CreateTime* _p = (Telegram_LFL217::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL217::t_CreateTime& _s)
{
  Telegram_LFL217::t_CreateTime* _p = new Telegram_LFL217::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL217_mt__CreateTime,
               _0RL_Telegram__LFL217_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL217_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL217::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL217_mt__CreateTime,
               _0RL_Telegram__LFL217_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL217_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL217::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_LFL217::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL217::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL217_mt__CreateTime,
                    _0RL_Telegram__LFL217_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__LFL217_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__LFL217_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL217::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL217_mt__DelayStartTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL217::t_DelayStartTime* _p = (Telegram_LFL217::t_DelayStartTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL217_mt__DelayStartTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL217::t_DelayStartTime* _p = new Telegram_LFL217::t_DelayStartTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL217_mt__DelayStartTime_destructor_fn(void* _v)
{
  Telegram_LFL217::t_DelayStartTime* _p = (Telegram_LFL217::t_DelayStartTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL217::t_DelayStartTime& _s)
{
  Telegram_LFL217::t_DelayStartTime* _p = new Telegram_LFL217::t_DelayStartTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL217_mt__DelayStartTime,
               _0RL_Telegram__LFL217_mt__DelayStartTime_marshal_fn,
               _0RL_Telegram__LFL217_mt__DelayStartTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL217::t_DelayStartTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL217_mt__DelayStartTime,
               _0RL_Telegram__LFL217_mt__DelayStartTime_marshal_fn,
               _0RL_Telegram__LFL217_mt__DelayStartTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL217::t_DelayStartTime*& _sp)
{
  return _a >>= (const Telegram_LFL217::t_DelayStartTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL217::t_DelayStartTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL217_mt__DelayStartTime,
                    _0RL_Telegram__LFL217_mt__DelayStartTime_unmarshal_fn,
                    _0RL_Telegram__LFL217_mt__DelayStartTime_marshal_fn,
                    _0RL_Telegram__LFL217_mt__DelayStartTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL217::t_DelayStartTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL217_mt__DelayEndTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL217::t_DelayEndTime* _p = (Telegram_LFL217::t_DelayEndTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL217_mt__DelayEndTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL217::t_DelayEndTime* _p = new Telegram_LFL217::t_DelayEndTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL217_mt__DelayEndTime_destructor_fn(void* _v)
{
  Telegram_LFL217::t_DelayEndTime* _p = (Telegram_LFL217::t_DelayEndTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL217::t_DelayEndTime& _s)
{
  Telegram_LFL217::t_DelayEndTime* _p = new Telegram_LFL217::t_DelayEndTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL217_mt__DelayEndTime,
               _0RL_Telegram__LFL217_mt__DelayEndTime_marshal_fn,
               _0RL_Telegram__LFL217_mt__DelayEndTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL217::t_DelayEndTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL217_mt__DelayEndTime,
               _0RL_Telegram__LFL217_mt__DelayEndTime_marshal_fn,
               _0RL_Telegram__LFL217_mt__DelayEndTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL217::t_DelayEndTime*& _sp)
{
  return _a >>= (const Telegram_LFL217::t_DelayEndTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL217::t_DelayEndTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL217_mt__DelayEndTime,
                    _0RL_Telegram__LFL217_mt__DelayEndTime_unmarshal_fn,
                    _0RL_Telegram__LFL217_mt__DelayEndTime_marshal_fn,
                    _0RL_Telegram__LFL217_mt__DelayEndTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL217::t_DelayEndTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL217_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL217::t_Spare* _p = (Telegram_LFL217::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL217_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL217::t_Spare* _p = new Telegram_LFL217::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL217_mt__Spare_destructor_fn(void* _v)
{
  Telegram_LFL217::t_Spare* _p = (Telegram_LFL217::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL217::t_Spare& _s)
{
  Telegram_LFL217::t_Spare* _p = new Telegram_LFL217::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL217_mt__Spare,
               _0RL_Telegram__LFL217_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL217_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL217::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL217_mt__Spare,
               _0RL_Telegram__LFL217_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL217_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL217::t_Spare*& _sp)
{
  return _a >>= (const Telegram_LFL217::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL217::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL217_mt__Spare,
                    _0RL_Telegram__LFL217_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__LFL217_mt__Spare_marshal_fn,
                    _0RL_Telegram__LFL217_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL217::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL220_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL220::t_CreateTime* _p = (Telegram_LFL220::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL220_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL220::t_CreateTime* _p = new Telegram_LFL220::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL220_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_LFL220::t_CreateTime* _p = (Telegram_LFL220::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL220::t_CreateTime& _s)
{
  Telegram_LFL220::t_CreateTime* _p = new Telegram_LFL220::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL220_mt__CreateTime,
               _0RL_Telegram__LFL220_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL220_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL220::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL220_mt__CreateTime,
               _0RL_Telegram__LFL220_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL220_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL220::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_LFL220::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL220::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL220_mt__CreateTime,
                    _0RL_Telegram__LFL220_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__LFL220_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__LFL220_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL220::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL220_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL220::t_Spare* _p = (Telegram_LFL220::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL220_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL220::t_Spare* _p = new Telegram_LFL220::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL220_mt__Spare_destructor_fn(void* _v)
{
  Telegram_LFL220::t_Spare* _p = (Telegram_LFL220::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL220::t_Spare& _s)
{
  Telegram_LFL220::t_Spare* _p = new Telegram_LFL220::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL220_mt__Spare,
               _0RL_Telegram__LFL220_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL220_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL220::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL220_mt__Spare,
               _0RL_Telegram__LFL220_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL220_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL220::t_Spare*& _sp)
{
  return _a >>= (const Telegram_LFL220::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL220::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL220_mt__Spare,
                    _0RL_Telegram__LFL220_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__LFL220_mt__Spare_marshal_fn,
                    _0RL_Telegram__LFL220_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL220::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL221_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL221::t_CreateTime* _p = (Telegram_LFL221::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL221_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL221::t_CreateTime* _p = new Telegram_LFL221::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL221_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_LFL221::t_CreateTime* _p = (Telegram_LFL221::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL221::t_CreateTime& _s)
{
  Telegram_LFL221::t_CreateTime* _p = new Telegram_LFL221::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL221_mt__CreateTime,
               _0RL_Telegram__LFL221_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL221_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL221::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL221_mt__CreateTime,
               _0RL_Telegram__LFL221_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL221_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL221::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_LFL221::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL221::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL221_mt__CreateTime,
                    _0RL_Telegram__LFL221_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__LFL221_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__LFL221_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL221::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL221_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL221::t_Spare* _p = (Telegram_LFL221::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL221_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL221::t_Spare* _p = new Telegram_LFL221::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL221_mt__Spare_destructor_fn(void* _v)
{
  Telegram_LFL221::t_Spare* _p = (Telegram_LFL221::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL221::t_Spare& _s)
{
  Telegram_LFL221::t_Spare* _p = new Telegram_LFL221::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL221_mt__Spare,
               _0RL_Telegram__LFL221_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL221_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL221::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL221_mt__Spare,
               _0RL_Telegram__LFL221_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL221_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL221::t_Spare*& _sp)
{
  return _a >>= (const Telegram_LFL221::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL221::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL221_mt__Spare,
                    _0RL_Telegram__LFL221_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__LFL221_mt__Spare_marshal_fn,
                    _0RL_Telegram__LFL221_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL221::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL222_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL222::t_CreateTime* _p = (Telegram_LFL222::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL222_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL222::t_CreateTime* _p = new Telegram_LFL222::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL222_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_LFL222::t_CreateTime* _p = (Telegram_LFL222::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL222::t_CreateTime& _s)
{
  Telegram_LFL222::t_CreateTime* _p = new Telegram_LFL222::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL222_mt__CreateTime,
               _0RL_Telegram__LFL222_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL222_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL222::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL222_mt__CreateTime,
               _0RL_Telegram__LFL222_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL222_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL222::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_LFL222::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL222::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL222_mt__CreateTime,
                    _0RL_Telegram__LFL222_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__LFL222_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__LFL222_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL222::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL222_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL222::t_Spare* _p = (Telegram_LFL222::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL222_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL222::t_Spare* _p = new Telegram_LFL222::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL222_mt__Spare_destructor_fn(void* _v)
{
  Telegram_LFL222::t_Spare* _p = (Telegram_LFL222::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL222::t_Spare& _s)
{
  Telegram_LFL222::t_Spare* _p = new Telegram_LFL222::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL222_mt__Spare,
               _0RL_Telegram__LFL222_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL222_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL222::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL222_mt__Spare,
               _0RL_Telegram__LFL222_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL222_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL222::t_Spare*& _sp)
{
  return _a >>= (const Telegram_LFL222::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL222::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL222_mt__Spare,
                    _0RL_Telegram__LFL222_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__LFL222_mt__Spare_marshal_fn,
                    _0RL_Telegram__LFL222_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL222::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL223_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL223::t_CreateTime* _p = (Telegram_LFL223::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL223_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL223::t_CreateTime* _p = new Telegram_LFL223::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL223_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_LFL223::t_CreateTime* _p = (Telegram_LFL223::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL223::t_CreateTime& _s)
{
  Telegram_LFL223::t_CreateTime* _p = new Telegram_LFL223::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL223_mt__CreateTime,
               _0RL_Telegram__LFL223_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL223_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL223::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL223_mt__CreateTime,
               _0RL_Telegram__LFL223_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL223_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL223::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_LFL223::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL223::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL223_mt__CreateTime,
                    _0RL_Telegram__LFL223_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__LFL223_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__LFL223_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL223::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL223_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL223::t_Spare* _p = (Telegram_LFL223::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL223_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL223::t_Spare* _p = new Telegram_LFL223::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL223_mt__Spare_destructor_fn(void* _v)
{
  Telegram_LFL223::t_Spare* _p = (Telegram_LFL223::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL223::t_Spare& _s)
{
  Telegram_LFL223::t_Spare* _p = new Telegram_LFL223::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL223_mt__Spare,
               _0RL_Telegram__LFL223_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL223_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL223::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL223_mt__Spare,
               _0RL_Telegram__LFL223_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL223_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL223::t_Spare*& _sp)
{
  return _a >>= (const Telegram_LFL223::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL223::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL223_mt__Spare,
                    _0RL_Telegram__LFL223_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__LFL223_mt__Spare_marshal_fn,
                    _0RL_Telegram__LFL223_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL223::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL224_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL224::t_CreateTime* _p = (Telegram_LFL224::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL224_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL224::t_CreateTime* _p = new Telegram_LFL224::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL224_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_LFL224::t_CreateTime* _p = (Telegram_LFL224::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL224::t_CreateTime& _s)
{
  Telegram_LFL224::t_CreateTime* _p = new Telegram_LFL224::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL224_mt__CreateTime,
               _0RL_Telegram__LFL224_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL224_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL224::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL224_mt__CreateTime,
               _0RL_Telegram__LFL224_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL224_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL224::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_LFL224::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL224::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL224_mt__CreateTime,
                    _0RL_Telegram__LFL224_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__LFL224_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__LFL224_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL224::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL224_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL224::t_Spare* _p = (Telegram_LFL224::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL224_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL224::t_Spare* _p = new Telegram_LFL224::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL224_mt__Spare_destructor_fn(void* _v)
{
  Telegram_LFL224::t_Spare* _p = (Telegram_LFL224::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL224::t_Spare& _s)
{
  Telegram_LFL224::t_Spare* _p = new Telegram_LFL224::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL224_mt__Spare,
               _0RL_Telegram__LFL224_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL224_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL224::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL224_mt__Spare,
               _0RL_Telegram__LFL224_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL224_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL224::t_Spare*& _sp)
{
  return _a >>= (const Telegram_LFL224::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL224::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL224_mt__Spare,
                    _0RL_Telegram__LFL224_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__LFL224_mt__Spare_marshal_fn,
                    _0RL_Telegram__LFL224_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL224::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL225_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL225::t_CreateTime* _p = (Telegram_LFL225::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL225_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL225::t_CreateTime* _p = new Telegram_LFL225::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL225_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_LFL225::t_CreateTime* _p = (Telegram_LFL225::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL225::t_CreateTime& _s)
{
  Telegram_LFL225::t_CreateTime* _p = new Telegram_LFL225::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL225_mt__CreateTime,
               _0RL_Telegram__LFL225_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL225_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL225::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL225_mt__CreateTime,
               _0RL_Telegram__LFL225_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL225_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL225::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_LFL225::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL225::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL225_mt__CreateTime,
                    _0RL_Telegram__LFL225_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__LFL225_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__LFL225_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL225::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL225_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL225::t_Spare* _p = (Telegram_LFL225::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL225_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL225::t_Spare* _p = new Telegram_LFL225::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL225_mt__Spare_destructor_fn(void* _v)
{
  Telegram_LFL225::t_Spare* _p = (Telegram_LFL225::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL225::t_Spare& _s)
{
  Telegram_LFL225::t_Spare* _p = new Telegram_LFL225::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL225_mt__Spare,
               _0RL_Telegram__LFL225_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL225_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL225::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL225_mt__Spare,
               _0RL_Telegram__LFL225_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL225_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL225::t_Spare*& _sp)
{
  return _a >>= (const Telegram_LFL225::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL225::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL225_mt__Spare,
                    _0RL_Telegram__LFL225_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__LFL225_mt__Spare_marshal_fn,
                    _0RL_Telegram__LFL225_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL225::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL226_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL226::t_CreateTime* _p = (Telegram_LFL226::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL226_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL226::t_CreateTime* _p = new Telegram_LFL226::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL226_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_LFL226::t_CreateTime* _p = (Telegram_LFL226::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL226::t_CreateTime& _s)
{
  Telegram_LFL226::t_CreateTime* _p = new Telegram_LFL226::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL226_mt__CreateTime,
               _0RL_Telegram__LFL226_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL226_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL226::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL226_mt__CreateTime,
               _0RL_Telegram__LFL226_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL226_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL226::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_LFL226::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL226::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL226_mt__CreateTime,
                    _0RL_Telegram__LFL226_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__LFL226_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__LFL226_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL226::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL226_mt__StirrGasType_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL226::t_StirrGasType* _p = (Telegram_LFL226::t_StirrGasType*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL226_mt__StirrGasType_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL226::t_StirrGasType* _p = new Telegram_LFL226::t_StirrGasType;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL226_mt__StirrGasType_destructor_fn(void* _v)
{
  Telegram_LFL226::t_StirrGasType* _p = (Telegram_LFL226::t_StirrGasType*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL226::t_StirrGasType& _s)
{
  Telegram_LFL226::t_StirrGasType* _p = new Telegram_LFL226::t_StirrGasType(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL226_mt__StirrGasType,
               _0RL_Telegram__LFL226_mt__StirrGasType_marshal_fn,
               _0RL_Telegram__LFL226_mt__StirrGasType_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL226::t_StirrGasType* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL226_mt__StirrGasType,
               _0RL_Telegram__LFL226_mt__StirrGasType_marshal_fn,
               _0RL_Telegram__LFL226_mt__StirrGasType_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL226::t_StirrGasType*& _sp)
{
  return _a >>= (const Telegram_LFL226::t_StirrGasType*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL226::t_StirrGasType*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL226_mt__StirrGasType,
                    _0RL_Telegram__LFL226_mt__StirrGasType_unmarshal_fn,
                    _0RL_Telegram__LFL226_mt__StirrGasType_marshal_fn,
                    _0RL_Telegram__LFL226_mt__StirrGasType_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL226::t_StirrGasType*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL226_mt__StirrInt_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL226::t_StirrInt* _p = (Telegram_LFL226::t_StirrInt*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL226_mt__StirrInt_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL226::t_StirrInt* _p = new Telegram_LFL226::t_StirrInt;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL226_mt__StirrInt_destructor_fn(void* _v)
{
  Telegram_LFL226::t_StirrInt* _p = (Telegram_LFL226::t_StirrInt*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL226::t_StirrInt& _s)
{
  Telegram_LFL226::t_StirrInt* _p = new Telegram_LFL226::t_StirrInt(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL226_mt__StirrInt,
               _0RL_Telegram__LFL226_mt__StirrInt_marshal_fn,
               _0RL_Telegram__LFL226_mt__StirrInt_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL226::t_StirrInt* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL226_mt__StirrInt,
               _0RL_Telegram__LFL226_mt__StirrInt_marshal_fn,
               _0RL_Telegram__LFL226_mt__StirrInt_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL226::t_StirrInt*& _sp)
{
  return _a >>= (const Telegram_LFL226::t_StirrInt*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL226::t_StirrInt*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL226_mt__StirrInt,
                    _0RL_Telegram__LFL226_mt__StirrInt_unmarshal_fn,
                    _0RL_Telegram__LFL226_mt__StirrInt_marshal_fn,
                    _0RL_Telegram__LFL226_mt__StirrInt_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL226::t_StirrInt*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL226_mt__FlowAct_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL226::t_FlowAct* _p = (Telegram_LFL226::t_FlowAct*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL226_mt__FlowAct_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL226::t_FlowAct* _p = new Telegram_LFL226::t_FlowAct;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL226_mt__FlowAct_destructor_fn(void* _v)
{
  Telegram_LFL226::t_FlowAct* _p = (Telegram_LFL226::t_FlowAct*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL226::t_FlowAct& _s)
{
  Telegram_LFL226::t_FlowAct* _p = new Telegram_LFL226::t_FlowAct(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL226_mt__FlowAct,
               _0RL_Telegram__LFL226_mt__FlowAct_marshal_fn,
               _0RL_Telegram__LFL226_mt__FlowAct_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL226::t_FlowAct* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL226_mt__FlowAct,
               _0RL_Telegram__LFL226_mt__FlowAct_marshal_fn,
               _0RL_Telegram__LFL226_mt__FlowAct_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL226::t_FlowAct*& _sp)
{
  return _a >>= (const Telegram_LFL226::t_FlowAct*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL226::t_FlowAct*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL226_mt__FlowAct,
                    _0RL_Telegram__LFL226_mt__FlowAct_unmarshal_fn,
                    _0RL_Telegram__LFL226_mt__FlowAct_marshal_fn,
                    _0RL_Telegram__LFL226_mt__FlowAct_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL226::t_FlowAct*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL226_mt__Pressure_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL226::t_Pressure* _p = (Telegram_LFL226::t_Pressure*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL226_mt__Pressure_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL226::t_Pressure* _p = new Telegram_LFL226::t_Pressure;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL226_mt__Pressure_destructor_fn(void* _v)
{
  Telegram_LFL226::t_Pressure* _p = (Telegram_LFL226::t_Pressure*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL226::t_Pressure& _s)
{
  Telegram_LFL226::t_Pressure* _p = new Telegram_LFL226::t_Pressure(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL226_mt__Pressure,
               _0RL_Telegram__LFL226_mt__Pressure_marshal_fn,
               _0RL_Telegram__LFL226_mt__Pressure_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL226::t_Pressure* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL226_mt__Pressure,
               _0RL_Telegram__LFL226_mt__Pressure_marshal_fn,
               _0RL_Telegram__LFL226_mt__Pressure_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL226::t_Pressure*& _sp)
{
  return _a >>= (const Telegram_LFL226::t_Pressure*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL226::t_Pressure*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL226_mt__Pressure,
                    _0RL_Telegram__LFL226_mt__Pressure_unmarshal_fn,
                    _0RL_Telegram__LFL226_mt__Pressure_marshal_fn,
                    _0RL_Telegram__LFL226_mt__Pressure_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL226::t_Pressure*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL226_mt__StirrGasCons_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL226::t_StirrGasCons* _p = (Telegram_LFL226::t_StirrGasCons*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL226_mt__StirrGasCons_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL226::t_StirrGasCons* _p = new Telegram_LFL226::t_StirrGasCons;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL226_mt__StirrGasCons_destructor_fn(void* _v)
{
  Telegram_LFL226::t_StirrGasCons* _p = (Telegram_LFL226::t_StirrGasCons*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL226::t_StirrGasCons& _s)
{
  Telegram_LFL226::t_StirrGasCons* _p = new Telegram_LFL226::t_StirrGasCons(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL226_mt__StirrGasCons,
               _0RL_Telegram__LFL226_mt__StirrGasCons_marshal_fn,
               _0RL_Telegram__LFL226_mt__StirrGasCons_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL226::t_StirrGasCons* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL226_mt__StirrGasCons,
               _0RL_Telegram__LFL226_mt__StirrGasCons_marshal_fn,
               _0RL_Telegram__LFL226_mt__StirrGasCons_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL226::t_StirrGasCons*& _sp)
{
  return _a >>= (const Telegram_LFL226::t_StirrGasCons*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL226::t_StirrGasCons*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL226_mt__StirrGasCons,
                    _0RL_Telegram__LFL226_mt__StirrGasCons_unmarshal_fn,
                    _0RL_Telegram__LFL226_mt__StirrGasCons_marshal_fn,
                    _0RL_Telegram__LFL226_mt__StirrGasCons_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL226::t_StirrGasCons*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL226_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL226::t_Spare* _p = (Telegram_LFL226::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL226_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL226::t_Spare* _p = new Telegram_LFL226::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL226_mt__Spare_destructor_fn(void* _v)
{
  Telegram_LFL226::t_Spare* _p = (Telegram_LFL226::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL226::t_Spare& _s)
{
  Telegram_LFL226::t_Spare* _p = new Telegram_LFL226::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL226_mt__Spare,
               _0RL_Telegram__LFL226_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL226_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL226::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL226_mt__Spare,
               _0RL_Telegram__LFL226_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL226_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL226::t_Spare*& _sp)
{
  return _a >>= (const Telegram_LFL226::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL226::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL226_mt__Spare,
                    _0RL_Telegram__LFL226_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__LFL226_mt__Spare_marshal_fn,
                    _0RL_Telegram__LFL226_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL226::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL230_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL230::t_CreateTime* _p = (Telegram_LFL230::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL230_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL230::t_CreateTime* _p = new Telegram_LFL230::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL230_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_LFL230::t_CreateTime* _p = (Telegram_LFL230::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL230::t_CreateTime& _s)
{
  Telegram_LFL230::t_CreateTime* _p = new Telegram_LFL230::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL230_mt__CreateTime,
               _0RL_Telegram__LFL230_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL230_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL230::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL230_mt__CreateTime,
               _0RL_Telegram__LFL230_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL230_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL230::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_LFL230::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL230::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL230_mt__CreateTime,
                    _0RL_Telegram__LFL230_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__LFL230_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__LFL230_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL230::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL230_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL230::t_Spare* _p = (Telegram_LFL230::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL230_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL230::t_Spare* _p = new Telegram_LFL230::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL230_mt__Spare_destructor_fn(void* _v)
{
  Telegram_LFL230::t_Spare* _p = (Telegram_LFL230::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL230::t_Spare& _s)
{
  Telegram_LFL230::t_Spare* _p = new Telegram_LFL230::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL230_mt__Spare,
               _0RL_Telegram__LFL230_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL230_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL230::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL230_mt__Spare,
               _0RL_Telegram__LFL230_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL230_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL230::t_Spare*& _sp)
{
  return _a >>= (const Telegram_LFL230::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL230::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL230_mt__Spare,
                    _0RL_Telegram__LFL230_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__LFL230_mt__Spare_marshal_fn,
                    _0RL_Telegram__LFL230_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL230::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL240_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL240::t_CreateTime* _p = (Telegram_LFL240::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL240_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL240::t_CreateTime* _p = new Telegram_LFL240::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL240_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_LFL240::t_CreateTime* _p = (Telegram_LFL240::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL240::t_CreateTime& _s)
{
  Telegram_LFL240::t_CreateTime* _p = new Telegram_LFL240::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL240_mt__CreateTime,
               _0RL_Telegram__LFL240_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL240_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL240::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL240_mt__CreateTime,
               _0RL_Telegram__LFL240_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL240_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL240::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_LFL240::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL240::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL240_mt__CreateTime,
                    _0RL_Telegram__LFL240_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__LFL240_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__LFL240_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL240::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL240_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL240::t_Spare* _p = (Telegram_LFL240::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL240_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL240::t_Spare* _p = new Telegram_LFL240::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL240_mt__Spare_destructor_fn(void* _v)
{
  Telegram_LFL240::t_Spare* _p = (Telegram_LFL240::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL240::t_Spare& _s)
{
  Telegram_LFL240::t_Spare* _p = new Telegram_LFL240::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL240_mt__Spare,
               _0RL_Telegram__LFL240_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL240_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL240::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL240_mt__Spare,
               _0RL_Telegram__LFL240_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL240_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL240::t_Spare*& _sp)
{
  return _a >>= (const Telegram_LFL240::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL240::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL240_mt__Spare,
                    _0RL_Telegram__LFL240_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__LFL240_mt__Spare_marshal_fn,
                    _0RL_Telegram__LFL240_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL240::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL260_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL260::t_CreateTime* _p = (Telegram_LFL260::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL260_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL260::t_CreateTime* _p = new Telegram_LFL260::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL260_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_LFL260::t_CreateTime* _p = (Telegram_LFL260::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL260::t_CreateTime& _s)
{
  Telegram_LFL260::t_CreateTime* _p = new Telegram_LFL260::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL260_mt__CreateTime,
               _0RL_Telegram__LFL260_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL260_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL260::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL260_mt__CreateTime,
               _0RL_Telegram__LFL260_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL260_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL260::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_LFL260::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL260::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL260_mt__CreateTime,
                    _0RL_Telegram__LFL260_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__LFL260_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__LFL260_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL260::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL260_mt__MatCode_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL260::t_MatCode* _p = (Telegram_LFL260::t_MatCode*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL260_mt__MatCode_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL260::t_MatCode* _p = new Telegram_LFL260::t_MatCode;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL260_mt__MatCode_destructor_fn(void* _v)
{
  Telegram_LFL260::t_MatCode* _p = (Telegram_LFL260::t_MatCode*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL260::t_MatCode& _s)
{
  Telegram_LFL260::t_MatCode* _p = new Telegram_LFL260::t_MatCode(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL260_mt__MatCode,
               _0RL_Telegram__LFL260_mt__MatCode_marshal_fn,
               _0RL_Telegram__LFL260_mt__MatCode_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL260::t_MatCode* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL260_mt__MatCode,
               _0RL_Telegram__LFL260_mt__MatCode_marshal_fn,
               _0RL_Telegram__LFL260_mt__MatCode_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL260::t_MatCode*& _sp)
{
  return _a >>= (const Telegram_LFL260::t_MatCode*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL260::t_MatCode*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL260_mt__MatCode,
                    _0RL_Telegram__LFL260_mt__MatCode_unmarshal_fn,
                    _0RL_Telegram__LFL260_mt__MatCode_marshal_fn,
                    _0RL_Telegram__LFL260_mt__MatCode_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL260::t_MatCode*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL260_mt__MatWeight_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL260::t_MatWeight* _p = (Telegram_LFL260::t_MatWeight*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL260_mt__MatWeight_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL260::t_MatWeight* _p = new Telegram_LFL260::t_MatWeight;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL260_mt__MatWeight_destructor_fn(void* _v)
{
  Telegram_LFL260::t_MatWeight* _p = (Telegram_LFL260::t_MatWeight*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL260::t_MatWeight& _s)
{
  Telegram_LFL260::t_MatWeight* _p = new Telegram_LFL260::t_MatWeight(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL260_mt__MatWeight,
               _0RL_Telegram__LFL260_mt__MatWeight_marshal_fn,
               _0RL_Telegram__LFL260_mt__MatWeight_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL260::t_MatWeight* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL260_mt__MatWeight,
               _0RL_Telegram__LFL260_mt__MatWeight_marshal_fn,
               _0RL_Telegram__LFL260_mt__MatWeight_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL260::t_MatWeight*& _sp)
{
  return _a >>= (const Telegram_LFL260::t_MatWeight*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL260::t_MatWeight*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL260_mt__MatWeight,
                    _0RL_Telegram__LFL260_mt__MatWeight_unmarshal_fn,
                    _0RL_Telegram__LFL260_mt__MatWeight_marshal_fn,
                    _0RL_Telegram__LFL260_mt__MatWeight_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL260::t_MatWeight*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL260_mt__SourceNo_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL260::t_SourceNo* _p = (Telegram_LFL260::t_SourceNo*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL260_mt__SourceNo_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL260::t_SourceNo* _p = new Telegram_LFL260::t_SourceNo;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL260_mt__SourceNo_destructor_fn(void* _v)
{
  Telegram_LFL260::t_SourceNo* _p = (Telegram_LFL260::t_SourceNo*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL260::t_SourceNo& _s)
{
  Telegram_LFL260::t_SourceNo* _p = new Telegram_LFL260::t_SourceNo(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL260_mt__SourceNo,
               _0RL_Telegram__LFL260_mt__SourceNo_marshal_fn,
               _0RL_Telegram__LFL260_mt__SourceNo_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL260::t_SourceNo* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL260_mt__SourceNo,
               _0RL_Telegram__LFL260_mt__SourceNo_marshal_fn,
               _0RL_Telegram__LFL260_mt__SourceNo_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL260::t_SourceNo*& _sp)
{
  return _a >>= (const Telegram_LFL260::t_SourceNo*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL260::t_SourceNo*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL260_mt__SourceNo,
                    _0RL_Telegram__LFL260_mt__SourceNo_unmarshal_fn,
                    _0RL_Telegram__LFL260_mt__SourceNo_marshal_fn,
                    _0RL_Telegram__LFL260_mt__SourceNo_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL260::t_SourceNo*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL260_mt__FeedingRate_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL260::t_FeedingRate* _p = (Telegram_LFL260::t_FeedingRate*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL260_mt__FeedingRate_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL260::t_FeedingRate* _p = new Telegram_LFL260::t_FeedingRate;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL260_mt__FeedingRate_destructor_fn(void* _v)
{
  Telegram_LFL260::t_FeedingRate* _p = (Telegram_LFL260::t_FeedingRate*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL260::t_FeedingRate& _s)
{
  Telegram_LFL260::t_FeedingRate* _p = new Telegram_LFL260::t_FeedingRate(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL260_mt__FeedingRate,
               _0RL_Telegram__LFL260_mt__FeedingRate_marshal_fn,
               _0RL_Telegram__LFL260_mt__FeedingRate_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL260::t_FeedingRate* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL260_mt__FeedingRate,
               _0RL_Telegram__LFL260_mt__FeedingRate_marshal_fn,
               _0RL_Telegram__LFL260_mt__FeedingRate_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL260::t_FeedingRate*& _sp)
{
  return _a >>= (const Telegram_LFL260::t_FeedingRate*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL260::t_FeedingRate*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL260_mt__FeedingRate,
                    _0RL_Telegram__LFL260_mt__FeedingRate_unmarshal_fn,
                    _0RL_Telegram__LFL260_mt__FeedingRate_marshal_fn,
                    _0RL_Telegram__LFL260_mt__FeedingRate_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL260::t_FeedingRate*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL260_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL260::t_Spare* _p = (Telegram_LFL260::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL260_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL260::t_Spare* _p = new Telegram_LFL260::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL260_mt__Spare_destructor_fn(void* _v)
{
  Telegram_LFL260::t_Spare* _p = (Telegram_LFL260::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL260::t_Spare& _s)
{
  Telegram_LFL260::t_Spare* _p = new Telegram_LFL260::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL260_mt__Spare,
               _0RL_Telegram__LFL260_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL260_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL260::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL260_mt__Spare,
               _0RL_Telegram__LFL260_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL260_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL260::t_Spare*& _sp)
{
  return _a >>= (const Telegram_LFL260::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL260::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL260_mt__Spare,
                    _0RL_Telegram__LFL260_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__LFL260_mt__Spare_marshal_fn,
                    _0RL_Telegram__LFL260_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL260::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL261_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL261::t_CreateTime* _p = (Telegram_LFL261::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL261_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL261::t_CreateTime* _p = new Telegram_LFL261::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL261_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_LFL261::t_CreateTime* _p = (Telegram_LFL261::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL261::t_CreateTime& _s)
{
  Telegram_LFL261::t_CreateTime* _p = new Telegram_LFL261::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL261_mt__CreateTime,
               _0RL_Telegram__LFL261_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL261_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL261::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL261_mt__CreateTime,
               _0RL_Telegram__LFL261_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL261_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL261::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_LFL261::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL261::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL261_mt__CreateTime,
                    _0RL_Telegram__LFL261_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__LFL261_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__LFL261_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL261::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL261_mt__MatCode_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL261::t_MatCode* _p = (Telegram_LFL261::t_MatCode*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL261_mt__MatCode_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL261::t_MatCode* _p = new Telegram_LFL261::t_MatCode;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL261_mt__MatCode_destructor_fn(void* _v)
{
  Telegram_LFL261::t_MatCode* _p = (Telegram_LFL261::t_MatCode*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL261::t_MatCode& _s)
{
  Telegram_LFL261::t_MatCode* _p = new Telegram_LFL261::t_MatCode(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL261_mt__MatCode,
               _0RL_Telegram__LFL261_mt__MatCode_marshal_fn,
               _0RL_Telegram__LFL261_mt__MatCode_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL261::t_MatCode* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL261_mt__MatCode,
               _0RL_Telegram__LFL261_mt__MatCode_marshal_fn,
               _0RL_Telegram__LFL261_mt__MatCode_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL261::t_MatCode*& _sp)
{
  return _a >>= (const Telegram_LFL261::t_MatCode*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL261::t_MatCode*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL261_mt__MatCode,
                    _0RL_Telegram__LFL261_mt__MatCode_unmarshal_fn,
                    _0RL_Telegram__LFL261_mt__MatCode_marshal_fn,
                    _0RL_Telegram__LFL261_mt__MatCode_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL261::t_MatCode*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL261_mt__MinWeight_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL261::t_MinWeight* _p = (Telegram_LFL261::t_MinWeight*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL261_mt__MinWeight_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL261::t_MinWeight* _p = new Telegram_LFL261::t_MinWeight;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL261_mt__MinWeight_destructor_fn(void* _v)
{
  Telegram_LFL261::t_MinWeight* _p = (Telegram_LFL261::t_MinWeight*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL261::t_MinWeight& _s)
{
  Telegram_LFL261::t_MinWeight* _p = new Telegram_LFL261::t_MinWeight(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL261_mt__MinWeight,
               _0RL_Telegram__LFL261_mt__MinWeight_marshal_fn,
               _0RL_Telegram__LFL261_mt__MinWeight_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL261::t_MinWeight* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL261_mt__MinWeight,
               _0RL_Telegram__LFL261_mt__MinWeight_marshal_fn,
               _0RL_Telegram__LFL261_mt__MinWeight_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL261::t_MinWeight*& _sp)
{
  return _a >>= (const Telegram_LFL261::t_MinWeight*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL261::t_MinWeight*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL261_mt__MinWeight,
                    _0RL_Telegram__LFL261_mt__MinWeight_unmarshal_fn,
                    _0RL_Telegram__LFL261_mt__MinWeight_marshal_fn,
                    _0RL_Telegram__LFL261_mt__MinWeight_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL261::t_MinWeight*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL261_mt__SourceNo_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL261::t_SourceNo* _p = (Telegram_LFL261::t_SourceNo*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL261_mt__SourceNo_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL261::t_SourceNo* _p = new Telegram_LFL261::t_SourceNo;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL261_mt__SourceNo_destructor_fn(void* _v)
{
  Telegram_LFL261::t_SourceNo* _p = (Telegram_LFL261::t_SourceNo*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL261::t_SourceNo& _s)
{
  Telegram_LFL261::t_SourceNo* _p = new Telegram_LFL261::t_SourceNo(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL261_mt__SourceNo,
               _0RL_Telegram__LFL261_mt__SourceNo_marshal_fn,
               _0RL_Telegram__LFL261_mt__SourceNo_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL261::t_SourceNo* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL261_mt__SourceNo,
               _0RL_Telegram__LFL261_mt__SourceNo_marshal_fn,
               _0RL_Telegram__LFL261_mt__SourceNo_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL261::t_SourceNo*& _sp)
{
  return _a >>= (const Telegram_LFL261::t_SourceNo*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL261::t_SourceNo*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL261_mt__SourceNo,
                    _0RL_Telegram__LFL261_mt__SourceNo_unmarshal_fn,
                    _0RL_Telegram__LFL261_mt__SourceNo_marshal_fn,
                    _0RL_Telegram__LFL261_mt__SourceNo_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL261::t_SourceNo*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL261_mt__Source_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL261::t_Source* _p = (Telegram_LFL261::t_Source*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL261_mt__Source_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL261::t_Source* _p = new Telegram_LFL261::t_Source;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL261_mt__Source_destructor_fn(void* _v)
{
  Telegram_LFL261::t_Source* _p = (Telegram_LFL261::t_Source*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL261::t_Source& _s)
{
  Telegram_LFL261::t_Source* _p = new Telegram_LFL261::t_Source(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL261_mt__Source,
               _0RL_Telegram__LFL261_mt__Source_marshal_fn,
               _0RL_Telegram__LFL261_mt__Source_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL261::t_Source* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL261_mt__Source,
               _0RL_Telegram__LFL261_mt__Source_marshal_fn,
               _0RL_Telegram__LFL261_mt__Source_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL261::t_Source*& _sp)
{
  return _a >>= (const Telegram_LFL261::t_Source*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL261::t_Source*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL261_mt__Source,
                    _0RL_Telegram__LFL261_mt__Source_unmarshal_fn,
                    _0RL_Telegram__LFL261_mt__Source_marshal_fn,
                    _0RL_Telegram__LFL261_mt__Source_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL261::t_Source*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL261_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL261::t_Spare* _p = (Telegram_LFL261::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL261_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL261::t_Spare* _p = new Telegram_LFL261::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL261_mt__Spare_destructor_fn(void* _v)
{
  Telegram_LFL261::t_Spare* _p = (Telegram_LFL261::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL261::t_Spare& _s)
{
  Telegram_LFL261::t_Spare* _p = new Telegram_LFL261::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL261_mt__Spare,
               _0RL_Telegram__LFL261_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL261_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL261::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL261_mt__Spare,
               _0RL_Telegram__LFL261_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL261_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL261::t_Spare*& _sp)
{
  return _a >>= (const Telegram_LFL261::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL261::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL261_mt__Spare,
                    _0RL_Telegram__LFL261_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__LFL261_mt__Spare_marshal_fn,
                    _0RL_Telegram__LFL261_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL261::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL270_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL270::t_CreateTime* _p = (Telegram_LFL270::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL270_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL270::t_CreateTime* _p = new Telegram_LFL270::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL270_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_LFL270::t_CreateTime* _p = (Telegram_LFL270::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL270::t_CreateTime& _s)
{
  Telegram_LFL270::t_CreateTime* _p = new Telegram_LFL270::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL270_mt__CreateTime,
               _0RL_Telegram__LFL270_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL270_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL270::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL270_mt__CreateTime,
               _0RL_Telegram__LFL270_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL270_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL270::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_LFL270::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL270::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL270_mt__CreateTime,
                    _0RL_Telegram__LFL270_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__LFL270_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__LFL270_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL270::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL270_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL270::t_Spare* _p = (Telegram_LFL270::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL270_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL270::t_Spare* _p = new Telegram_LFL270::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL270_mt__Spare_destructor_fn(void* _v)
{
  Telegram_LFL270::t_Spare* _p = (Telegram_LFL270::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL270::t_Spare& _s)
{
  Telegram_LFL270::t_Spare* _p = new Telegram_LFL270::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL270_mt__Spare,
               _0RL_Telegram__LFL270_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL270_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL270::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL270_mt__Spare,
               _0RL_Telegram__LFL270_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL270_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL270::t_Spare*& _sp)
{
  return _a >>= (const Telegram_LFL270::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL270::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL270_mt__Spare,
                    _0RL_Telegram__LFL270_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__LFL270_mt__Spare_marshal_fn,
                    _0RL_Telegram__LFL270_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL270::t_Spare*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL281_mt__CreateTime_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL281::t_CreateTime* _p = (Telegram_LFL281::t_CreateTime*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL281_mt__CreateTime_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL281::t_CreateTime* _p = new Telegram_LFL281::t_CreateTime;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL281_mt__CreateTime_destructor_fn(void* _v)
{
  Telegram_LFL281::t_CreateTime* _p = (Telegram_LFL281::t_CreateTime*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL281::t_CreateTime& _s)
{
  Telegram_LFL281::t_CreateTime* _p = new Telegram_LFL281::t_CreateTime(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL281_mt__CreateTime,
               _0RL_Telegram__LFL281_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL281_mt__CreateTime_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL281::t_CreateTime* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL281_mt__CreateTime,
               _0RL_Telegram__LFL281_mt__CreateTime_marshal_fn,
               _0RL_Telegram__LFL281_mt__CreateTime_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL281::t_CreateTime*& _sp)
{
  return _a >>= (const Telegram_LFL281::t_CreateTime*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL281::t_CreateTime*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL281_mt__CreateTime,
                    _0RL_Telegram__LFL281_mt__CreateTime_unmarshal_fn,
                    _0RL_Telegram__LFL281_mt__CreateTime_marshal_fn,
                    _0RL_Telegram__LFL281_mt__CreateTime_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL281::t_CreateTime*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_Telegram__LFL281_mt__Spare_marshal_fn(cdrStream& _s, void* _v)
{
  Telegram_LFL281::t_Spare* _p = (Telegram_LFL281::t_Spare*)_v;
  *_p >>= _s;
}
static void _0RL_Telegram__LFL281_mt__Spare_unmarshal_fn(cdrStream& _s, void*& _v)
{
  Telegram_LFL281::t_Spare* _p = new Telegram_LFL281::t_Spare;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_Telegram__LFL281_mt__Spare_destructor_fn(void* _v)
{
  Telegram_LFL281::t_Spare* _p = (Telegram_LFL281::t_Spare*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const Telegram_LFL281::t_Spare& _s)
{
  Telegram_LFL281::t_Spare* _p = new Telegram_LFL281::t_Spare(_s);
  _a.PR_insert(_0RL_tc_Telegram__LFL281_mt__Spare,
               _0RL_Telegram__LFL281_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL281_mt__Spare_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, Telegram_LFL281::t_Spare* _sp)
{
  _a.PR_insert(_0RL_tc_Telegram__LFL281_mt__Spare,
               _0RL_Telegram__LFL281_mt__Spare_marshal_fn,
               _0RL_Telegram__LFL281_mt__Spare_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, Telegram_LFL281::t_Spare*& _sp)
{
  return _a >>= (const Telegram_LFL281::t_Spare*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const Telegram_LFL281::t_Spare*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_Telegram__LFL281_mt__Spare,
                    _0RL_Telegram__LFL281_mt__Spare_unmarshal_fn,
                    _0RL_Telegram__LFL281_mt__Spare_marshal_fn,
                    _0RL_Telegram__LFL281_mt__Spare_destructor_fn,
                    _v)) {
    _sp = (const Telegram_LFL281::t_Spare*)_v;
    return 1;
  }
  return 0;
}

